{"version":3,"sources":["../../../index.bundle.ts","../../src/api/error.ts","../../src/context.ts","../../src/serializer.ts","../../src/api/service.ts","../../src/config.ts","../../index.ts","../../src/interfaces/internal-message-payload.ts","../../src/util/errors.ts","../../src/util/constants.ts","../../src/helpers/array-base64-translator.ts","../../src/helpers/migrate-old-database.ts","../../src/helpers/idb-manager.ts","../../src/core/api.ts","../../src/core/token-management.ts","../../src/helpers/is-console-message.ts","../../src/helpers/sleep.ts","../../src/controllers/sw-controller.ts","../../src/helpers/externalizePayload.ts","../../src/controllers/window-controller.ts","../../src/helpers/extract-app-config.ts","../../src/index.ts","../../src/implementation/constants.ts","../../src/implementation/error.ts","../../src/implementation/string.ts","../../src/platform/browser/base64.ts","../../src/implementation/taskenums.ts","../../src/implementation/connection.ts","../../src/platform/browser/connection.ts","../../src/implementation/connectionPool.ts","../../src/implementation/location.ts","../../src/implementation/failrequest.ts","../../src/implementation/type.ts","../../src/implementation/url.ts","../../src/implementation/request.ts","../../src/implementation/backoff.ts","../../src/implementation/fs.ts","../../src/implementation/blob.ts","../../src/implementation/json.ts","../../src/implementation/path.ts","../../src/implementation/metadata.ts","../../src/implementation/list.ts","../../src/implementation/requestinfo.ts","../../src/implementation/requests.ts","../../src/implementation/observer.ts","../../src/implementation/async.ts","../../src/task.ts","../../src/reference.ts","../../src/service.ts","../../exp/api.ts","../../compat/tasksnapshot.ts","../../compat/task.ts","../../compat/list.ts","../../compat/reference.ts","../../compat/service.ts","../../src/services/api_service.ts","../../src/constants.ts","../../src/utils/errors.ts","../../src/utils/console_logger.ts","../../src/services/settings_service.ts","../../src/utils/string_merger.ts","../../src/services/iid_service.ts","../../src/utils/attributes_utils.ts","../../src/services/remote_config_service.ts","../../src/services/initialization_service.ts","../../src/services/transport_service.ts","../../src/services/perf_logger.ts","../../src/utils/metric_utils.ts","../../src/resources/trace.ts","../../src/resources/network_request.ts","../../src/services/oob_resources_service.ts","../../src/controllers/perf.ts","../../src/client/caching_client.ts","../../src/errors.ts","../../src/client/rest_client.ts","../../src/language.ts","../../src/client/remote_config_fetch_client.ts","../../src/value.ts","../../src/remote_config.ts","../../src/storage/storage.ts","../../src/storage/storage_cache.ts","../../src/client/retrying_client.ts","../../app/index.ts","../node_modules/@firebase/database/dist/index.esm.js","../../src/state.ts","../../src/proactive-refresh.ts","../../src/util.ts","../../src/client.ts","../../src/indexeddb.ts","../../src/logger.ts","../../src/storage.ts","../../src/debug.ts","../../src/internal-api.ts","../../src/recaptcha.ts","../../src/providers.ts","../../src/api.ts","../../src/factory.ts"],"names":["instance","Firestore","prototype","loadBundle","namedQuery","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","code","message","details","Object","setPrototypeOf","HttpsErrorImpl","Error","authProvider","messagingProvider","auth","messaging","this","getImmediate","optional","get","then","getAuthToken","undefined","getToken","token","accessToken","getInstanceIdToken","self","Notification","permission","getContext","authToken","instanceIdToken","mapValues","o","f","result","key","hasOwnProperty","encode","data","Number","valueOf","isFinite","toString","call","Date","toISOString","Array","isArray","map","x","decode","json","value","isNaN","app_","appCheckProvider","regionOrCustomDomain_","fetchImpl","serializer","Serializer","emulatorOrigin","delete","Promise","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","e","_url","name","projectId","options","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","getAppCheckToken","appCheckToken","method","JSON","stringify","response","status","appCheck","context","timeout","millis","timer","promise","_","reject","setTimeout","failAfter","failAfterPromise","race","clearTimeoutWrapper","error","bodyJSON","codeForHTTPStatus","description","errorJSON","_errorForResponse","responseData","clearTimeout","namespaceExports","Functions","registerComponent","container","regionOrCustomDomain","app","getProvider","setServiceProps","setMultipleInstances","MessageType","ERROR_MAP","ERROR_FACTORY","DEFAULT_VAPID_KEY","FCM_MSG","CONSOLE_CAMPAIGN_ID","arrayToBase64","array","uint8Array","Uint8Array","btoa","String","fromCharCode","replace","base64ToArray","base64String","base64","repeat","length","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","indexedDB","databases","dbNames","db","includes","tokenDetails","oldVersion","objectStoreNames","contains","objectStore","transaction","index","clear","oldDetails","p256dh","endpoint","fcmToken","createTime","now","subscriptionOptions","swScope","vapidKey","close","checkTokenDetails","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","getKey","appConfig","oldTokenDetails","dbSet","tx","put","complete","dbRemove","appId","requestGetToken","getHeaders","getBody","subscribeOptions","fetch","getEndpoint","create","errorInfo","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","ENDPOINT","installations","Headers","Accept","apiKey","web","applicationPubKey","swRegistration","getPushSubscription","pushSubscription","scope","getNewToken","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenValid","console","warn","updateToken","deleteToken","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","isConsoleMessage","sleep","ms","isOnBackgroundMessageUsed","bgMessageHandler","addEventListener","waitUntil","onPush","onSubChange","onNotificationClick","setBackgroundMessageHandler","callback","onBackgroundMessage","nextOrObserver","registration","requestPermission","usePublicVapidKey","useServiceWorker","onMessage","onTokenRefresh","event","internalPayload","err","getMessagePayloadInternal","getClientList","debug","TAG","clientList","some","client","visibilityState","startsWith","hasVisibleClients","sendMessagePayloadInternalToWindows","isNotificationShown","notification","showNotification","wrapInternalPayload","payload","from","collapseKey","collapse_key","messageId","fcm_message_id","messagePayloadInternal","title","image","propagateNotificationPayload","propagateDataPayload","fcmOptions","link","analyticsLabel","analytics_label","propagateFcmOptions","externalizePayload","next","action","stopImmediatePropagation","click_action","location","getLink","href","originUrl","getWindowClient","clients","openWindow","focus","messageType","NOTIFICATION_CLICKED","isFirebaseMessaging","postMessage","wrappedInternalPayload","clientUrl","PUSH_RECEIVED","matchAll","type","includeUncontrolled","notificationPayloadInternal","actions","maxActions","onMessageCallback","navigator","serviceWorker","messageEventListener","stripInternalFields","assign","dataPayload","logEvent","getVapidKey","getSwReg","updateVapidKey","updateSwReg","serviceWorkerRegistration","registerDefaultSw","ServiceWorkerRegistration","register","update","catch","browserErrorMessage","permissionResult","eventType","getEventType","analyticsProvider","message_id","message_name","message_time","message_device_time","Math","floor","getMissingValueError","valueName","keyName","appName","messagingSenderId","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","prependCode","customData","serverResponse","_baseMessage","FirebaseStorageError","_codeEquals","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","contentType","dataFromString","stringData","StringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","rest","decoded","decodeURIComponent","percentEncodedBytes_","dataURLBytes_","b","c","push","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","bytes","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","ABORT","NETWORK_ERROR","send","open","setRequestHeader","getErrorCode","getStatus","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","createConnection","XhrConnection","bucket","path","path_","fullServerUrl","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","Location","makeFromUrl","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","slice","group","captures","exec","bucketValue","pathValue","invalidUrl","promise_","getPromise","cancel","_appDelete","isString","p","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocolMatch","makeQueryString","params","queryPart","successCodes","additionalRetryCodes","errorCallback","progressCallback","pool","pendingConnection_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","backoffDone","requestWentThrough","connection","wasSuccessCode","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","apply","args","callWithDelay","handler","success","waitMillis","random","stopped","stop","wasTimeout","start","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","loaded","total","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","FbsBlob","buffer","blobby","val","uint8Arrays","forEach","uploadData","jsonObjectOrNull","obj","parse","lastComponent","lastIndexOf","noXform_","metadata","server","local","writable","xform","mappings_","getMappings","mappings","Mapping","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","service","resource","len","mapping","defineProperty","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","PREFIXES_KEY","ITEMS_KEY","fromResponseString","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromBackendResponse","urlParams","errorHandler","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","alt","downloadUrlFromResourceString","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","RequestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","metadataForUpload_","metadataClone","determineContentType_","current","finalized","checkResumeHeader_","allowed","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","ResumableUploadStatus","bytesLeft","bytesToUpload","min","maxUploadRetryTime","uploadStatus","newCurrent","observer","argsToForward","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","storage","_getAuthToken","_getAppCheckToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","sizeString","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","str","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","Observer","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","triggered","fbsAsync","bind","snapshot","resume","valid","pause","_service","_newRef","Reference","newPath","_throwIfRoot","listAll","accumulator","listAllHelper","nextPage","op","requestsList","makeRequestWithTokens","updateMetadata","requestsUpdateMetadata","getDownloadURL","requestsGetDownloadUrl","deleteObject","_xhr","_text","requestsDeleteObject","_getChild","childPath","canonicalChildPath","filter","component","join","child","isUrl","test","refFromPath","_bucket","serviceOrRef","pathOrUrl","extractBucket","config","_authProvider","_appCheckProvider","_pool","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","_overrideAuthToken","tokenData","_delete","request","FailRequest","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","NetworkRequest","makeRequest","add","uploadBytesResumable","UploadTask","uploadBytesResumableInternal","requestsGetMetadata","getMetadataInternal","refInternal","connectStorageEmulator","mockUserToken","connectEmulatorInternal","_delegate","UploadTaskSnapshotCompat","wrappedNextOrObserver","taskSnapshot","_getChildInternal","ReferenceCompat","root","parent","UploadTaskCompat","putString","_UploadTask","_FbsBlob","listAllInternal","r","ListResultCompat","listInternal","updateMetadataInternal","getDownloadURLInternal","deleteObjectInternal","refFromURL","_Location","setMaxUploadRetryTime","setMaxOperationRetryTime","apiInstance","windowInstance","ERROR_DESCRIPTION_MAP","SERVICE_NAME","consoleLogger","logLevel","INFO","settingsServiceInstance","window","performance","PerformanceObserver","windowLocation","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","getUrl","mark","measure","measureName","mark1","mark2","getEntriesByType","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","info","setupObserver","entryType","getEntries","entry","observe","entryTypes","getInstance","Api","mergeStrings","part1","part2","sizeDiff","resultArray","iid","VisibilityState","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","firebaseAppInstance","getProjectId","getApiKey","getFlTransportFullUrl","concat","SettingsService","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","getServiceWorkerStatus","controller","getVisibilityState","VISIBLE","HIDDEN","getEffectiveConnectionType","navigatorConnection","effectiveType","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","expiryString","getItem","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","expiry","configStringified","CONFIG_LOCAL_STORAGE_KEY","getStoredConfig","processConfig","authTokenPromise","installationsService","authTokenVal","getAuthTokenPromise","configEndPoint","Request","Authorization","app_instance_id","app_instance_id_token","app_id","app_version","SDK_VERSION","sdk_version","ok","COULD_NOT_GET_CONFIG_MSG","getRemoteConfig","setItem","storeConfig","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","samplingRate","initializationPromise","initializationStatus","getInitializationPromise","readyState","getDocumentReadyComplete","iidPromise","getId","iidVal","getIidPromise","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","remainingTries","queue","isTransportSetup","processQueue","timeOffset","staged","log_event","evt","source_extension_json_proto3","event_time_ms","eventTime","flTransportFullUrl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","max","logResponseDetails","responseAction","sendEventsToFl","request_time_ms","client_info","client_type","js_client_info","log_source","dispatchQueueEvents","transportHandler","addToQueue","sendLog","resourceType","logTrace","trace","settingsService","isAuto","sendTraceLog","networkRequest","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","serializeNetworkRequest","traceMetric","is_auto","duration_us","durationUs","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","oobMetrics","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","traceMeasureName","api","randomId","traceStartMark","TRACE_START_MARK_PREFIX","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","TRACE_MEASURE_PREFIX","calculateTraceMetrics","traceName","record","startTime","duration","attributes","metrics","metric","incrementMetric","counter","numAsInteger","putMetric","OOB_TRACE_PAGE_LOAD_PREFIX","customMetricName","providedValue","valueAsInteger","convertMetricValueToInteger","getMetric","putAttribute","attr","isValidName","prefix","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","Trace","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","networkRequestUrl","logEndpointUrl","flEndpointUrl","logNetworkRequest","transferSize","setupOobResources","fid","setupOobTraces","resources","setupNetworkRequests","measures","setupUserTimingTraces","isAvailable","storageCache","logger","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","cacheAgeMillis","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","lastSuccessfulFetchResponse","eTag","storageOperations","setLastSuccessfulFetchTimestampMillis","setLastSuccessfulFetchResponse","firebaseInstallations","sdkVersion","namespace","installationId","installationToken","urlBase","FIREBASE_REMOTE_CONFIG_URL_BASE","requestBody","language_code","navigatorLanguage","languages","language","fetchPromise","timeoutPromise","signal","errorCode","originalErrorMessage","responseEtag","responseBody","httpStatus","listeners","BOOLEAN_TRUTHY_VALUES","_source","_value","asString","asBoolean","toLowerCase","asNumber","num","getSource","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","FirebaseLogLevel","DEBUG","SILENT","getLastFetchStatus","activate","getActiveConfigEtag","activeConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_initializePromise","loadFromStorage","abortSignal","RemoteConfigAbortSignal","setLastFetchStatus","lastFetchStatus","fetchAndActivate","getAll","obj1","obj2","getAllKeys","getActiveConfig","reduce","allConfigs","getValue","getBoolean","getNumber","getString","activeConfig","Value","toFirebaseError","originalError","target","APP_NAMESPACE_STORE","openDbPromise","onerror","onsuccess","onupgradeneeded","keyPath","timestamp","etag","getThrottleMetadata","setThrottleMetadata","deleteThrottleMetadata","compositeKey","createCompositeKey","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","firebaseInstance","throttleMetadata","backoffCount","attemptFetch","isRetriableError","packageName","restClient","retryingClient","cachingClient","remoteConfigInstance","registerVersion","version","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","storedVal","jsonEval","remove","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","utf8Bytes","stringToByteArray","Sha1","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","arg","firstLog_","enableLogging","logger_","persistent","assert","LogLevel","VERBOSE","log","logWrapper","__spreadArray","__read","fatal","isInvalidJSONNumber","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","k","sort","splitStringBySize","segsize","dataSegs","each","fn","doubleToIEEE754String","v","ln","bias","Infinity","abs","pow","LN2","round","bits","reverse","hexByteString","hexByte","parseInt","substr","INTEGER_REGEXP_","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","setTimeoutNonBlocking","AppCheckTokenProvider","appName_","_this","forceRefresh","addTokenChangeListener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","secure","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_domain","internalHost","isCacheableHost","isCustomHost","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","called_1","wrappedFn_1","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","createElement","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","removeChild","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","process","platform","env","proxy","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidMatch","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","done","transport","e_1_1","return","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","pathString","onComplete","hash","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","eventData","getInitialEvent","off","et","OnlineMonitor","_super","online_","isMobileCordova","__extends","currentlyOnline","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE$2","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","onResponse","curReqNum","initConnection_","deferred","Deferred","_path","q","_queryObject","outstandingGet","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","token_1","authMethod","isValidFormat","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","__awaiter","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","__generator","label","nextConnectionId_","trys","sent","interrupt","isEmpty","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","e_2","values","_d","queries","_e","_f","e_2_1","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","base12","buildPennant","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode","nodeFromJSON","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","duplicateTime","timeStampChars","successor","keyAsInt","i_1","source","sourcePlusOne","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","filtered","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","validationPathPush","last","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","repoBuildTransactionQueue","every","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect$1","OnDisconnect","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot$1","DataSnapshot","_node","_index","childRef","exists","hasChildren","_checkNotDeleted","_root","parsedURL","changedKey","changedValue","writeId_1","repoUpdate","cached","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_apply","QueryEndBeforeConstraint","queryParamsEndBefore","QueryStartAtConstraint","QueryStartAfterConstraint","queryParamsStartAfter","QueryLimitToFirstConstraint","_limit","newLimit","queryParamsLimitToFirst","QueryLimitToLastConstraint","queryParamsLimitToLast","QueryOrderByChildConstraint","parsedPath","QueryOrderByKeyConstraint","QueryOrderByPriorityConstraint","QueryOrderByValueConstraint","QueryEqualToValueConstraint","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","Database$1","Database","_repoInternal","_instanceStarted","_rootInternal","repoManagerDeleteRepo","apiName","connectDatabaseEmulator","tokenProvider","createMockUserToken","repoManagerApplyEmulatorSettings","goOnline","SERVER_TIMESTAMP","TransactionResult$1","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","validateArgCount","validateCallback","objectToMerge","newObjectToMerge","_database","getRef","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateEventType","validateContextObject","once","failureCallbackOrContext","limitToFirst","limit","limitToLast","orderByChild","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","cancelOrContext","getParent","getRoot","bool","validateBoolean","transactionResult","setPriority","expPromise","thennablePushRef","pushRef","expRef","goOffline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","repoManagerForceRestClient","instanceIdentifier","module","exports","registerDatabase","firebase","ERRORS","ErrorFactory","APP_CHECK_STATES","DEFAULT_STATE","activated","tokenObservers","DEBUG_STATE","enabled","getState","setState","getDebugState","BASE_ENDPOINT","TOKEN_REFRESH_TIME","retryPolicy","getWaitDuration","lowerBound","upperBound","pending","nextErrorWaitInterval","isRunning","hasSucceeded","getNextRun","currentErrorWaitInterval","getRecaptcha","grecaptcha","ensureActivated","formatDummyToken","tokenErrorData","encodeString","exchangeToken","platformLoggerProvider","platformLogger","getPlatformInfoString","ttl","timeToLiveAsNumber","attestationToken","expireTimeMillis","issuedAtTimeMillis","getExchangeRecaptchaTokenRequest","reCAPTCHAToken","recaptcha_token","getExchangeDebugTokenRequest","debugToken","debug_token","STORE_NAME","DEBUG_TOKEN_KEY","getDBPromise","readTokenFromIndexedDB","read","computeKey","store","_event","writeTokenToStorage","isIndexedDBAvailable","writeTokenToIndexedDB","readOrCreateDebugTokenFromStorage","existingDebugToken","newToken","getDebugToken","defaultTokenErrorData","cachedTokenPromise","cachedToken","isValid","notifyTokenListeners","tokenFromDebugExchange","provider","interopTokenResult","makeDummyTokenResult","onError","tokenListener","newState","tokenRefresher","Refresher","nextRefreshTimeMillis","latestAllowableRefresh","createTokenRefresher","isTokenAutoRefreshEnabled","removeTokenListener","newObservers","tokenObserver","ignored","RECAPTCHA_URL","initialize","siteKey","initialized","reCAPTCHAState","divId","invisibleDiv","ready","renderInvisibleWidget","head","loadReCAPTCHAScript","recaptcha","execute","widgetId","render","sitekey","_siteKey","_app","_platformLoggerProvider","getReCAPTCHAToken","attestedClaimsToken","initializeRecaptcha","_customProviderOptions","customToken","issuedAtTimeSeconds","issuedAtTime","siteKeyOrProvider","readTokenFromStorage","ReCaptchaV3Provider","CustomProvider","automaticDataCollectionEnabled","factory","setTokenAutoRefreshEnabled","getTokenInternal","onTokenChanged","onNextOrObserver","onCompletion","nextFn","errorFn","APP_CHECK_NAME_INTERNAL","ReCaptchaV3ProviderImpl","CustomProviderImpl","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","internalFactory","registerAppCheck","globals","getGlobal","FIREBASE_APPCHECK_DEBUG_TOKEN","debugState","deferredToken","initializeDebugMode"],"mappings":";0JAsB+BA,E,4DAAAA,EAKhBC,KAJJC,UAAUC,WAAaA,IAChCH,EAASE,UAAUE,WAAaA,I,mBCI5BC,EAAuD,CAC3DC,GAAI,KACJC,UAAW,YACXC,QAAS,UACTC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,UAAW,YACXC,eAAgB,iBAChBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,QAAS,UACTC,aAAc,eACdC,cAAe,gBACfC,SAAU,WACVC,YAAa,cACbC,UAAW,aAOb,cAYE,WAAYC,EAA0BC,EAAkBC,GAAxD,MACE,YAAMD,IAAQ,K,OAKdE,OAAOC,eAAe,EAAMC,EAAe1B,WAE3C,EAAKqB,KAAOA,EACZ,EAAKE,QAAUA,E,CAChB,CACH,OAvBoC,yBAuBpC,EAvBA,CAAoCI,OCdpC,iBAGE,WACEC,EACAC,GAFF,WAFQ,KAAAC,KAAoC,KACpC,KAAAC,UAAsC,KAK5CC,KAAKF,KAAOF,EAAaK,aAAa,CAAEC,UAAU,IAClDF,KAAKD,UAAYF,EAAkBI,aAAa,CAC9CC,UAAU,IAGPF,KAAKF,MACRF,EAAaO,MAAMC,KACjB,SAAAN,GAAQ,OAAC,EAAKA,KAAOA,CAAI,EACzB,W,GAMCE,KAAKD,WACRF,EAAkBM,MAAMC,KACtB,SAAAL,GAAa,OAAC,EAAKA,UAAYA,CAAS,EACxC,W,EAKL,CA4CH,OA1CQ,YAAAM,aAAN,W,oIACE,IAAKL,KAAKF,KACR,MAAO,CAAP,OAAOQ,G,iBAIO,O,sBAAA,GAAMN,KAAKF,KAAKS,Y,OAC9B,OADMC,EAAQ,UAIP,CAAP,EAAOA,EAAMC,aAFJ,CAAP,OAAOH,G,OAKT,O,SAAO,CAAP,OAAOA,G,uBAIL,YAAAI,mBAAN,W,8HACE,IACGV,KAAKD,aACJ,iBAAkBY,OACQ,YAA5BC,aAAaC,WAEb,MAAO,CAAP,OAAOP,G,iBAIA,O,sBAAA,GAAMN,KAAKD,UAAUQ,Y,OAA5B,MAAO,CAAP,EAAO,U,OAMP,O,SAAO,CAAP,OAAOD,G,uBAIL,YAAAQ,WAAN,W,sIACoB,SAAMd,KAAKK,gB,OACL,OADlBU,EAAY,SACM,GAAMf,KAAKU,sB,OACnC,OADMM,EAAkB,SACjB,CAAP,EAAO,CAAED,UAAS,EAAEC,gBAAe,I,MAEvC,EAzEA,GClBA,SAASC,EAGPC,EACAC,GAEA,IAAMC,EAAqC,CAAC,EAC5C,IAAK,IAAMC,KAAOH,EACZA,EAAEI,eAAeD,KACnBD,EAAOC,GAAOF,EAAED,EAAEG,KAGtB,OAAOD,CACT,CAEA,8BAoEC,CAAD,OAjEE,YAAAG,OAAA,SAAOC,GAAP,WACE,GAAY,MAARA,EACF,OAAO,KAKT,GAHIA,aAAgBC,SAClBD,EAAOA,EAAKE,WAEM,kBAATF,GAAqBG,SAASH,GAGvC,OAAOA,EAET,IAAa,IAATA,IAA0B,IAATA,EACnB,OAAOA,EAET,GAA6C,oBAAzChC,OAAOxB,UAAU4D,SAASC,KAAKL,GACjC,OAAOA,EAET,GAAIA,aAAgBM,KAClB,OAAON,EAAKO,cAEd,GAAIC,MAAMC,QAAQT,GAChB,OAAOA,EAAKU,IAAI,SAAAC,GAAK,SAAKZ,OAAOY,EAAE,GAErC,GAAoB,oBAATX,GAAuC,kBAATA,EACvC,OAAOP,EAAUO,EAAO,SAAAW,GAAK,SAAKZ,OAAOY,EAAE,GAG7C,MAAM,IAAIxC,MAAM,mCAAqC6B,E,EAKvD,YAAAY,OAAA,SAAOC,GAAP,WACE,GAAY,MAARA,EACF,OAAOA,EAET,GAAKA,EAAoC,SACvC,OAASA,EAAoC,UAC3C,IA5DU,iDA8DV,IA7DmB,kDAiEjB,IAAMC,EAAQb,OAAQY,EAA2C,OACjE,GAAIE,MAAMD,GACR,MAAM,IAAI3C,MAAM,qCAAuC0C,GAEzD,OAAOC,EAET,QACE,MAAM,IAAI3C,MAAM,qCAAuC0C,GAI7D,OAAIL,MAAMC,QAAQI,GACTA,EAAKH,IAAI,SAAAC,GAAK,SAAKC,OAAOD,EAAE,GAEjB,oBAATE,GAAuC,kBAATA,EAChCpB,EAAUoB,EAAO,SAAAF,GAAK,SAAKC,OAAOD,EAAE,GAGtCE,C,EAEX,EApEA,GCgDA,iBAgBE,WACUG,EACR5C,EACAC,EACQ4C,EACRC,EACSC,GANX,gBAKE,IAAAD,MAAA,eAJQ,KAAAF,OAGA,KAAAC,mBAEC,KAAAE,YApBM,KAAAC,WAAa,IAAIC,EAC1B,KAAAC,eAAgC,KA4CxC,KAAA5D,SAAW,CACT6D,OAAQ,WACN,OAAOC,QAAQC,QAAQ,EAAKC,gBAC7B,GA1BDlD,KAAKmD,gBAAkB,IAAI,EAAgBvD,EAAcC,GAEzDG,KAAKoD,kBAAoB,IAAIJ,QAAQ,SAAAC,GACnC,EAAKC,cAAgB,WACnB,OAAOD,G,IAKX,IACE,IAAMI,EAAM,IAAIC,IAAIZ,GACpB1C,KAAKuD,aAAeF,EAAIG,OACxBxD,KAAKyD,OAAS,a,CACd,MAAOC,GACP1D,KAAKuD,aAAe,KACpBvD,KAAKyD,OAASf,CACf,CACF,CA2MH,OAzME,sBAAI,kBAAG,C,IAAP,WACE,OAAO1C,KAAKwC,I,kCAad,YAAAmB,KAAA,SAAKC,GACH,IAAMC,EAAY7D,KAAKwC,KAAKsB,QAAQD,UACpC,OAA4B,OAAxB7D,KAAK8C,eACQ9C,KAAK8C,eACJ,IAAIe,EAAS,IAAI7D,KAAKyD,OAAM,IAAIG,EAGxB,OAAtB5D,KAAKuD,aACGvD,KAAKuD,aAAY,IAAIK,EAG1B,WAAW5D,KAAKyD,OAAM,IAAII,EAAS,uBAAuBD,C,EAWnE,YAAAG,YAAA,SAAYC,EAAcC,GACxBjE,KAAK8C,eAAiB,UAAUkB,EAAI,IAAIC,C,EAW1C,YAAAC,qBAAA,SAAqBV,GACnBxD,KAAK8C,eAAiBU,C,EAOxB,YAAAW,cAAA,SAAcP,EAAcE,GAA5B,WACE,OAAO,SAAAtC,GACL,OAAO,EAAKK,KAAK+B,EAAMpC,EAAMsC,GAAW,CAAC,E,GAW/B,YAAAM,SAAd,SACEf,EACAgB,EACAC,G,wIAIsB,OAFtBA,EAAQ,gBAAkB,mBAEJ,GAAMtE,KAAKuE,oB,OACX,QADhBC,EAAgB,YAEpBF,EAAQ,uBAAyBE,G,iBAKtB,O,sBAAA,GAAMxE,KAAK2C,UAAUU,EAAK,CACnCoB,OAAQ,OACRJ,KAAMK,KAAKC,UAAUN,GACrBC,QAAO,K,cAHTM,EAAW,S,aAUX,O,SAAO,CAAP,EAAO,CACLC,OAAQ,EACRxC,KAAM,O,OAGNA,EAAgC,K,iBAE3B,O,sBAAA,GAAMuC,EAASvC,Q,cAAtBA,EAAO,S,0CAIT,MAAO,CAAP,EAAO,CACLwC,OAAQD,EAASC,OACjBxC,KAAI,I,MAIM,YAAAkC,iBAAd,W,2IACQO,EAAW9E,KAAKyC,iBAAiBxC,aAAa,CAAEC,UAAU,KAE/C,GAAM4E,EAASvE,YAD5B,M,OAMF,MAAO,CAAP,EALe,SAKDC,O,OAEhB,MAAO,CAAP,EAAO,M,MAQK,YAAAqB,KAAd,SACE+B,EACApC,EACAsC,G,wJAUgB,OARVT,EAAMrD,KAAK2D,KAAKC,GAGtBpC,EAAOxB,KAAK4C,WAAWrB,OAAOC,GACxB6C,EAAO,CAAE7C,KAAI,GAGb8C,EAAqC,CAAC,EAC5B,GAAMtE,KAAKmD,gBAAgBrC,c,OAa1B,OAbXiE,EAAU,UACJhE,YACVuD,EAAuB,cAAI,UAAYS,EAAQhE,WAE7CgE,EAAQ/D,kBACVsD,EAAQ,8BAAgCS,EAAQ/D,iBAI5CgE,EAAUlB,EAAQkB,SAAW,IAE7B,EAzNV,SACEC,GAKA,IAAIC,EACEC,EAAU,IAAInC,QAAe,SAACoC,EAAGC,GACrCH,EAAQI,WAAW,WACjBD,EAAO,IAAI,EAAe,oBAAqB,qB,EAC9CJ,E,GAGL,MAAO,CACLC,MAAK,EACLC,QAAO,EAEX,CAwMiDI,CAAUP,GAA/CE,EAAK,QAAWM,EAAgB,UAEvB,GAAMxC,QAAQyC,KAAK,CAClCC,EAAoBR,EAAOlF,KAAKoE,SAASf,EAAKgB,EAAMC,IACpDkB,EACAE,EAAoBR,EAAOlF,KAAKoD,sB,OAIlC,KAPMwB,EAAW,UAQf,MAAM,IAAI,EACR,YACA,4CAUJ,GALMe,E,SH1KRd,EACAe,EACAhD,GAEA,IAAIvD,EA5CN,SAA2BwF,GAEzB,GAAIA,GAAU,KAAOA,EAAS,IAC5B,MAAO,KAET,OAAQA,GACN,KAAK,EAiBL,KAAK,IACH,MAAO,WAfT,KAAK,IACH,MAAO,mBACT,KAAK,IACH,MAAO,kBACT,KAAK,IACH,MAAO,oBACT,KAAK,IACH,MAAO,YACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,qBACT,KAAK,IACH,MAAO,YAGT,KAAK,IACH,MAAO,gBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,oBAGX,MAAO,SACT,CAUagB,CAAkBhB,GAGzBiB,EAAsBzG,EAEtBE,OAAmBe,EAGvB,IACE,IAAMyF,EAAYH,GAAYA,EAASD,MACvC,GAAII,EAAW,CACb,IAAM,EAASA,EAAUlB,OACzB,GAAsB,kBAAX,EAAqB,CAC9B,IAAK1G,EAAa,GAEhB,OAAO,IAAI,EAAe,WAAY,YAExCkB,EAAOlB,EAAa,GAIpB2H,EAAc,CACf,CAED,IAAMxG,EAAUyG,EAAUzG,QACH,kBAAZA,IACTwG,EAAcxG,QAIAgB,KADhBf,EAAUwG,EAAUxG,WAElBA,EAAUqD,EAAWR,OAAO7C,GAE/B,C,CACD,MAAOmE,G,CAIT,MAAa,OAATrE,EAIK,KAGF,IAAI,EAAeA,EAAMyG,EAAavG,EAC/C,CGwHkByG,CACZpB,EAASC,OACTD,EAASvC,KACTrC,KAAK4C,YAEH+C,EACF,MAAMA,EAGR,IAAKf,EAASvC,KACZ,MAAM,IAAI,EACR,WACA,sCAUJ,GAH4B,qBAHxB4D,EAAerB,EAASvC,KAAKb,QAI/ByE,EAAerB,EAASvC,KAAKjB,QAEH,qBAAjB6E,EAET,MAAM,IAAI,EAAe,WAAY,mCAMvC,MAAO,CAAP,EAAO,CAAEzE,KAFWxB,KAAK4C,WAAWR,OAAO6D,K,MAI/C,EApPA,GAsPA,SAAeP,EACbR,EACAC,G,oIAEe,SAAMA,G,OAGrB,OAHM/D,EAAS,SAEf8E,aAAahB,GACN,CAAP,EAAO9D,G,eChTPtD,EACA6E,GAEA,IAAMwD,EAAmB,CAEvBC,UAAW,GAuBbtI,EAASoB,SAASmH,kBAChB,IAAI,YAhCe,YAWrB,SACEC,EACA,G,IAAsBC,EAAoB,qBAGpCC,EAAMF,EAAUG,YAAY,OAAOxG,eACnCL,EAAe0G,EAAUG,YAAY,iBACrChE,EAAmB6D,EAAUG,YAAY,sBACzC5G,EAAoByG,EAAUG,YAAY,aAGhD,OAAO,IAAI,EACTD,EACA5G,EACAC,EACA4C,EACA8D,EACA5D,EAEH,EAEwC,UACpC+D,gBAAgBP,GAChBQ,sBAAqB,GAE5B,CC1CA,CAAkB,UAAgC,MAAM,KAAK,OAC7D,UAAS,gB,6CC8BGC,E,QCfCC,IAAS,MACpB,6BACE,kDACF,8BACE,gDACF,0BACE,wDACF,wBACE,qEACF,wBACE,mEACF,yBACE,2EACF,wCACE,+EACF,4BACE,qEACF,8BACE,2DACF,8BACE,yEAEF,yBACE,oEACF,2BACE,wDACF,4BACE,4IAEF,6BACE,uEACF,wBACE,iEACF,uBAA+B,yCAC/B,mCACE,wI,GAcSC,EAAgB,IAAI,eAC/B,YACA,YACAD,GCvEWE,EACX,0FAKWC,EAAU,UAKVC,EAAsB,kB,SCdnBC,EAAcC,GAC5B,IAAMC,EAAa,IAAIC,WAAWF,GAElC,OADqBG,KAAKC,OAAOC,aAAY,MAAnBD,OAAM,4CAAiBH,MAC7BK,QAAQ,KAAM,IAAIA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAC3E,C,SAEgBC,EAAcC,GAS5B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAKF,EAAaG,OAAS,GAAM,IAE1DL,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEXM,EAAUC,KAAKJ,GACfK,EAAc,IAAIZ,WAAWU,EAAQD,QAElCI,EAAI,EAAGA,EAAIH,EAAQD,SAAUI,EACpCD,EAAYC,GAAKH,EAAQI,WAAWD,GAEtC,OAAOD,CACT,EHkBA,SAAYrB,GACV,gCACA,6CACD,CAHD,CAAYA,MAAW,KIOvB,IAAMwB,EAAc,uBAMdC,EAAwB,yB,SAERC,EACpBC,G,qJAEI,cAAeC,UAGC,GAAOA,UAEtBC,aALD,M,OAQF,GALMA,EAAY,SAGZC,EAAUD,EAAUvG,IAAI,SAAAyG,GAAM,OAAAA,EAAG/E,IAAI,IAEtC8E,EAAQE,SAASR,GAEpB,MAAO,CAAP,EAAO,M,iBAMA,OAFPS,EAAoC,KAE7B,GAAM,iBAAOT,EAtBH,EAsBgC,SAAMO,GAAE,sD,iFAC3D,OAAIA,EAAGG,WAAa,EAElB,IAGGH,EAAGI,iBAAiBC,SAASX,GAMpB,IADRY,EAAcN,EAAGO,YAAYD,YAAYZ,IACfc,MAAM,eAAehJ,IAAIoI,IAJvD,I,OAKF,OADMjG,EAAQ,SACd,GAAM2G,EAAYG,S,OAElB,GAFA,UAEK9G,EAEH,UAGF,GAAsB,IAAlBqG,EAAGG,WAAkB,CAGvB,KAFMO,EAAa/G,GAEHxC,OAASuJ,EAAWC,SAAWD,EAAWE,SACxD,UAGFV,EAAe,CACbrI,MAAO6I,EAAWG,SAClBC,WAAiC,QAArB,EAAAJ,EAAWI,kBAAU,QAAI3H,KAAK4H,MAC1CC,oBAAqB,CACnB7J,KAAMuJ,EAAWvJ,KACjBwJ,OAAQD,EAAWC,OACnBC,SAAUF,EAAWE,SACrBK,QAASP,EAAWO,QACpBC,SACiC,kBAAxBR,EAAWQ,SACdR,EAAWQ,SACX3C,EAAcmC,EAAWQ,W,MAGR,IAAlBlB,EAAGG,YAce,IAAlBH,EAAGG,cAXZD,EAAe,CACbrI,OAHI6I,EAAa/G,GAGCkH,SAClBC,WAAYJ,EAAWI,WACvBE,oBAAqB,CACnB7J,KAAMoH,EAAcmC,EAAWvJ,MAC/BwJ,OAAQpC,EAAcmC,EAAWC,QACjCC,SAAUF,EAAWE,SACrBK,QAASP,EAAWO,QACpBC,SAAU3C,EAAcmC,EAAWQ,a,yBAsB3C,OA1EW,SAuERC,QAGH,GAAM,mBAAS1B,I,OACf,OADA,SACA,GAAM,mBAAS,yB,OACf,OADA,SACA,GAAM,mBAAS,c,OAEf,OAFA,SAEO,CAAP,EAAO2B,EAAkBlB,GAAgBA,EAAe,M,IACzD,CAED,SAASkB,EACPlB,GAEA,IAAKA,IAAiBA,EAAac,oBACjC,OAAO,EAED,IAAAA,EAAwBd,EAAY,oBAC5C,MACqC,kBAA5BA,EAAaY,YACpBZ,EAAaY,WAAa,GACI,kBAAvBZ,EAAarI,OACpBqI,EAAarI,MAAMsH,OAAS,GACQ,kBAA7B6B,EAAoB7J,MAC3B6J,EAAoB7J,KAAKgI,OAAS,GACI,kBAA/B6B,EAAoBL,QAC3BK,EAAoBL,OAAOxB,OAAS,GACI,kBAAjC6B,EAAoBJ,UAC3BI,EAAoBJ,SAASzB,OAAS,GACC,kBAAhC6B,EAAoBC,SAC3BD,EAAoBC,QAAQ9B,OAAS,GACG,kBAAjC6B,EAAoBE,UAC3BF,EAAoBE,SAAS/B,OAAS,CAE1C,CCxKO,IAEDkC,EAAoB,2BAEtBC,EAAgC,KACpC,SAASC,IAaP,OAZKD,IACHA,EAAY,iBAPa,8BACJ,EAM+B,SAAAE,GAKlD,GACO,IADCA,EAAUrB,WAEdqB,EAAUC,kBAAkBJ,E,IAI7BC,CACT,C,SAGsBI,EACpBC,G,wIAGW,OADLjJ,EAAMkJ,EAAOD,GACR,GAAMJ,K,OACI,SADV,SAERhB,YAAYc,GACZf,YAAYe,GACZ7J,IAAIkB,I,cAHDwH,EAAe,UAMZ,CAAP,EAAOA,GADL,M,OAIsB,SAAMP,EAC5BgC,EAAqBE,UAAUjC,W,cAD3BkC,EAAkB,UAItB,GAAMC,EAAMJ,EAAsBG,IADhC,M,OAEF,OADA,SACO,CAAP,EAAOA,G,qBAGZ,C,SAGqBC,EACpBJ,EACAzB,G,wIAGW,OADLxH,EAAMkJ,EAAOD,GACR,GAAMJ,K,OAEjB,OAFMvB,EAAK,SAEX,IADMgC,EAAKhC,EAAGO,YAAYc,EAAmB,cACpCf,YAAYe,GAAmBY,IAAI/B,EAAcxH,I,OAC1D,OADA,SACA,GAAMsJ,EAAGE,U,OACT,OADA,SACO,CAAP,EAAOhC,G,IACR,C,SAGqBiC,EACpBR,G,wIAGW,OADLjJ,EAAMkJ,EAAOD,GACR,GAAMJ,K,OAEjB,OAFMvB,EAAK,SAEX,IADMgC,EAAKhC,EAAGO,YAAYc,EAAmB,cACpCf,YAAYe,GAAmBjH,OAAO1B,I,OAC/C,OADA,SACA,GAAMsJ,EAAGE,U,cAAT,S,QACD,CAWD,SAASN,EAAO,GACd,OADyB,YACRQ,KACnB,C,SCnEsBC,EACpBV,EACAX,G,8IAEgB,SAAMsB,EAAWX,I,OAA3BhG,EAAU,SACVD,EAAO6G,EAAQvB,GAEfwB,EAAmB,CACvB1G,OAAQ,OACRH,QAAO,EACPD,KAAMK,KAAKC,UAAUN,I,iBAKJ,O,sBAAA,GAAM+G,MACrBC,EAAYf,EAAqBE,WACjCW,I,OAEa,SAJE,SAIa9I,Q,cAA9B4D,EAAe,S,aAEf,M,WAAMa,EAAcwE,OAAO,yBAAkC,CAC3DC,UAAW,I,OAIf,GAAItF,EAAaN,MAEf,MADMrG,EAAU2G,EAAaN,MAAMrG,QAC7BwH,EAAcwE,OAAO,yBAAkC,CAC3DC,UAAWjM,IAIf,IAAK2G,EAAazF,MAChB,MAAMsG,EAAcwE,OAAO,4BAG7B,MAAO,CAAP,EAAOrF,EAAazF,O,IACrB,C,SAEqBgL,EACpBlB,EACAzB,G,8IAEgB,SAAMoC,EAAWX,I,OAA3BhG,EAAU,SACVD,EAAO6G,EAAQrC,EAAac,qBAE5B8B,EAAgB,CACpBhH,OAAQ,QACRH,QAAO,EACPD,KAAMK,KAAKC,UAAUN,I,iBAKJ,O,sBAAA,GAAM+G,MAClBC,EAAYf,EAAqBE,WAAU,IAAI3B,EAAarI,MAC/DiL,I,OAEa,SAJE,SAIapJ,Q,cAA9B4D,EAAe,S,aAEf,M,WAAMa,EAAcwE,OAAO,sBAA+B,CACxDC,UAAW,I,OAIf,GAAItF,EAAaN,MAEf,MADMrG,EAAU2G,EAAaN,MAAMrG,QAC7BwH,EAAcwE,OAAO,sBAA+B,CACxDC,UAAWjM,IAIf,IAAK2G,EAAazF,MAChB,MAAMsG,EAAcwE,OAAO,yBAG7B,MAAO,CAAP,EAAOrF,EAAazF,O,IACrB,C,SAEqBkL,EACpBpB,EACA9J,G,4IAEgB,SAAMyK,EAAWX,I,OAA3BhG,EAAU,SAEVqH,EAAqB,CACzBlH,OAAQ,SACRH,QAAO,G,iBAIU,O,sBAAA,GAAM8G,MAClBC,EAAYf,EAAqBE,WAAU,IAAIhK,EAClDmL,I,OAEgC,SAJjB,SAIgCtJ,Q,OACjD,IADM4D,EAA4B,UACjBN,MAEf,MADMrG,EAAU2G,EAAaN,MAAMrG,QAC7BwH,EAAcwE,OAAO,2BAAoC,CAC7DC,UAAWjM,I,mBAIf,M,WAAMwH,EAAcwE,OAAO,2BAAoC,CAC7DC,UAAW,I,qBAGhB,CAED,SAASF,EAAY,GACnB,MAAUO,uDADoB,YACW,gBAC3C,CAEA,SAAeX,EAAW,G,IACxBT,EAAS,YACTqB,EAAa,gB,oIAEK,SAAMA,EAActL,Y,OAEtC,OAFMQ,EAAY,SAEX,CAAP,EAAO,IAAI+K,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBvB,EAAUwB,OAC5B,qCAAsC,OAAOjL,K,IAEhD,CAED,SAASmK,EAAQ,G,IACf5B,EAAM,SACNxJ,EAAI,OACJyJ,EAAQ,WACRM,EAAQ,WAEFxF,EAAuB,CAC3B4H,IAAK,CACH1C,SAAQ,EACRzJ,KAAI,EACJwJ,OAAM,IAQV,OAJIO,IAAa9C,IACf1C,EAAK4H,IAAIC,kBAAoBrC,GAGxBxF,CACT,C,SC1JsB9D,EACpB+J,EACA6B,EACAtC,G,0IAEA,GAAgC,YAA5BjJ,aAAaC,WACf,MAAMiG,EAAcwE,OAAO,sBAKJ,SAAMc,EAAoBD,EAAgBtC,I,OAC9C,OADfwC,EAAmB,SACJ,GAAMhC,EAAMC,I,cAA3BzB,EAAe,SAEfc,EAA2C,CAC/CE,SAAQ,EACRD,QAASuC,EAAeG,MACxB/C,SAAU8C,EAAiB9C,SAC3BzJ,KAAMoH,EAAcmF,EAAiB9B,OAAO,SAC5CjB,OAAQpC,EAAcmF,EAAiB9B,OAAO,YAG3C1B,EAAD,MAEK,CAAP,EAAO0D,EAAYjC,EAAsBX,I,UAsH7C,SACE6C,EACAC,GAEA,IAAMC,EAAkBD,EAAe5C,WAAa2C,EAAU3C,SACxD8C,EAAkBF,EAAelD,WAAaiD,EAAUjD,SACxDqD,EAAcH,EAAe3M,OAAS0M,EAAU1M,KAChD+M,EAAgBJ,EAAenD,SAAWkD,EAAUlD,OAE1D,OAAOoD,GAAmBC,GAAmBC,GAAeC,CAC9D,CA9HKC,CAAajE,EAAac,oBAAsBA,GAAjD,Y,iBAIE,O,sBAAA,GAAM+B,EAAmBpB,EAAsBzB,EAAarI,Q,cAA5D,S,+BAGAuM,QAAQC,KAAK,G,aAGf,MAAO,CAAP,EAAOT,EAAYjC,EAAsBX,I,OACpC,OAAI7H,KAAK4H,OAASb,EAAaY,WAvCZ,OAyCjB,CAAP,EAAOwD,EACL,CACEzM,MAAOqI,EAAarI,MACpBiJ,WAAY3H,KAAK4H,MACjBC,oBAAmB,GAErBW,EACA6B,IAIK,CAAP,EAAOtD,EAAarI,O,qBAEvB,C,SAMqB0M,EACpB5C,EACA6B,G,sIAEqB,SAAM9B,EAAMC,I,cAA3BzB,EAAe,UAEnB,GAAM6C,EAAmBpB,EAAsBzB,EAAarI,QAD1D,M,OAEF,OADA,SACA,GAAMsK,EAASR,I,OAAf,S,iBAIuB,SAAM6B,EAAegB,YAAYC,mB,OAC1D,OADMf,EAAmB,UAEhB,CAAP,EAAOA,EAAiBgB,eAInB,CAAP,GAAO,G,IACR,CAED,SAAeJ,EACbpE,EACAyB,EACA6B,G,wIAGuB,O,sBAAA,GAAMX,EACzBlB,EACAzB,I,OASF,OAXMyE,EAAe,SAKfC,EAAmB,yCACpB1E,GAAY,CACfrI,MAAO8M,EACP7D,WAAY3H,KAAK4H,QAGnB,GAAMgB,EAAMJ,EAAsBiD,I,OAClC,OADA,SACO,CAAP,EAAOD,G,OAEP,O,WAAA,GAAMJ,EAAY5C,EAAsB6B,I,OACxC,MADA,SACM,E,qBAET,CAED,SAAeI,EACbjC,EACAX,G,sIAEc,SAAMqB,EAClBV,EACAX,I,OAOF,OATMnJ,EAAQ,SAIRqI,EAA6B,CACjCrI,MAAK,EACLiJ,WAAY3H,KAAK4H,MACjBC,oBAAmB,GAErB,GAAMe,EAAMJ,EAAsBzB,I,OAClC,OADA,SACO,CAAP,EAAOA,EAAarI,O,IACrB,CAKD,SAAe4L,EACbD,EACAtC,G,oIAEqB,SAAMsC,EAAegB,YAAYC,mB,OACtD,OADMI,EAAe,UAEZ,CAAP,EAAOA,GAEF,CAAP,EAAOrB,EAAegB,YAAYM,UAAU,CAC1CC,iBAAiB,EAGjBC,qBAAsBjG,EAAcmC,M,IAEvC,C,SCpJe+D,EAAiBpM,GAE/B,MAAuB,kBAATA,KAAuBA,GAAQyF,KAAuBzF,CACtE,C,SCLgBqM,EAAMC,GACpB,OAAO,IAAI9K,QAAc,SAAAC,GACvBqC,WAAWrC,EAAS6K,E,EAExB,CCyBA,iBAaE,WACmBxD,GADnB,WACmB,KAAAA,uBATX,KAAAyD,0BAA4C,KAC5C,KAAAlE,SAA0B,KAC1B,KAAAmE,iBAIuB,KAK7BrN,KAAKsN,iBAAiB,OAAQ,SAAAvK,GAC5BA,EAAEwK,UAAU,EAAKC,OAAOzK,G,GAE1B/C,KAAKsN,iBAAiB,yBAA0B,SAAAvK,GAC9CA,EAAEwK,UAAU,EAAKE,YAAY1K,G,GAE/B/C,KAAKsN,iBAAiB,oBAAqB,SAAAvK,GACzCA,EAAEwK,UAAU,EAAKG,oBAAoB3K,G,EAExC,CA4NH,OA1NE,sBAAI,kBAAG,C,IAAP,WACE,OAAO1D,KAAKsK,qBAAqB9D,G,kCAkBnC,YAAA8H,4BAAA,SAA4BC,GAG1B,GAFAvO,KAAK+N,2BAA4B,GAE5BQ,GAAgC,oBAAbA,EACtB,MAAMzH,EAAcwE,OAAO,sBAG7BtL,KAAKgO,iBAAmBO,C,EAG1B,YAAAC,oBAAA,SACEC,GADF,WAME,OAHAzO,KAAK+N,2BAA4B,EACjC/N,KAAKgO,iBAAmBS,EAEjB,WACL,EAAKT,iBAAmB,I,GAMtB,YAAAzN,SAAN,W,mJACOP,KAAK6J,SAAN,MAImB,GAAMQ,EAAMrK,KAAKsK,uB,OAAhCzB,EAAe,SACrB7I,KAAK6J,SACwC,QAA3C,EAAiC,QAAjC,EAAY,OAAZhB,QAAY,IAAZA,OAAY,EAAZA,EAAcc,2BAAmB,eAAEE,gBAAQ,QAAI9C,E,iBAGnD,MAAO,CAAP,EAAOxG,EACLP,KAAKsK,qBACL3J,KAAK+N,aACL1O,KAAK6J,W,MAMT,YAAAqD,YAAA,WACE,OAAOA,EAAYlN,KAAKsK,qBAAsB3J,KAAK+N,a,EAGrD,YAAAC,kBAAA,WACE,MAAM7H,EAAcwE,OAAO,2B,EAI7B,YAAAsD,kBAAA,SAAkB/E,GAChB,GAAsB,OAAlB7J,KAAK6J,SACP,MAAM/C,EAAcwE,OAAO,iCAG7B,GAAwB,kBAAbzB,GAA6C,IAApBA,EAAS/B,OAC3C,MAAMhB,EAAcwE,OAAO,qBAG7BtL,KAAK6J,SAAWA,C,EAGlB,YAAAgF,iBAAA,WACE,MAAM/H,EAAcwE,OAAO,2B,EAG7B,YAAAwD,UAAA,WACE,MAAMhI,EAAcwE,OAAO,2B,EAG7B,YAAAyD,eAAA,WACE,MAAMjI,EAAcwE,OAAO,2B,EAavB,YAAA6C,OAAN,SAAaa,G,0IAEX,OADMC,EAoIV,SAAmC,G,IACjCzN,EAAI,OAEJ,IAAKA,EACH,OAAO,KAGT,IACE,OAAOA,EAAKa,M,CACZ,MAAO6M,GAEP,OAAO,IACR,CACH,CAjJ4BC,CAA0BH,GAC7CC,EASc,GAAMG,OARvBrC,QAAQsC,MACNC,sGAGF,K,OAKF,OA8JJ,SAA2BC,GACzB,OAAOA,EAAWC,KAChB,SAAAC,GACE,MAA2B,YAA3BA,EAAOC,kBAGND,EAAOpM,IAAIsM,WAAW,sB,EAE7B,CAtKQC,CADEL,EAAa,UAEV,CAAP,EAAOM,GAAoCN,EAAYN,KAIrDa,GAAsB,EACpBb,EAAgBc,aACpB,GAAMC,GAAiBC,EAAoBhB,KADzC,O,OACF,SACAa,GAAsB,E,iBAKxB,OAC0B,IAAxBA,IACmC,IAAnC9P,KAAK+N,0BAEL,KAGI/N,KAAKgO,mBACHkC,E,SC9LVjB,GAEA,IAAMiB,EAA0B,CAC9BC,KAAMlB,EAAgBkB,KAEtBC,YAAanB,EAAgBoB,aAE7BC,UAAWrB,EAAgBsB,gBAO7B,OAGF,SACEL,EACAM,GAEA,GAAKA,EAAuBT,aAA5B,CAIAG,EAAQH,aAAe,CAAC,EAExB,IAAMU,EAAQD,EAAuBT,aAAcU,MAC7CA,IACJP,EAAQH,aAAcU,MAAQA,GAGhC,IAAMpM,EAAOmM,EAAuBT,aAAc1L,KAC5CA,IACJ6L,EAAQH,aAAc1L,KAAOA,GAG/B,IAAMqM,EAAQF,EAAuBT,aAAcW,MAC7CA,IACJR,EAAQH,aAAcW,MAAQA,EAhB/B,CAkBH,CA/BEC,CAA6BT,EAASjB,GAiCxC,SACEiB,EACAM,GAEKA,EAAuBhP,OAI5B0O,EAAQ1O,KAAOgP,EAAuBhP,KACxC,CAzCEoP,CAAqBV,EAASjB,GA2ChC,SACEiB,EACAM,GAEA,GAAKA,EAAuBK,WAA5B,CAIAX,EAAQW,WAAa,CAAC,EAEtB,IAAMC,EAAON,EAAuBK,WAAYC,KAC1CA,IACJZ,EAAQW,WAAYC,KAAOA,GAI7B,IAAMC,EAAiBP,EAAuBK,WAAYG,gBACpDD,IACJb,EAAQW,WAAYE,eAAiBA,EAZtC,CAcH,CA9DEE,CAAoBf,EAASjB,GAEtBiB,CACT,CD+KsBgB,CAAmBjC,GAEE,oBAA1BjP,KAAKgO,iBACdhO,KAAKgO,iBAAiBkC,GAEtBlQ,KAAKgO,iBAAiBmD,KAAKjB,IAK/B,GAAMrC,ERtL+C,O,cQsLrD,S,UAGI,YAAAO,YAAN,SAAkBY,G,mJACYA,EAAK,gBAC7B,MAEF,GAAM9B,EAAYlN,KAAKsK,qBAAsB3J,KAAK+N,e,qBAMpD,S,WAFqB,SAAMrE,EAAMrK,KAAKsK,uB,OACtC,OADMzB,EAAe,SACrB,GAAMqE,EAAYlN,KAAKsK,qBAAsB3J,KAAK+N,e,OAClD,OADA,SACA,GAAMnO,EACJP,KAAKsK,qBACL3J,KAAK+N,aACsC,QAA3C,EAAiC,QAAjC,EAAY,OAAZ7F,QAAY,IAAZA,OAAY,EAAZA,EAAcc,2BAAmB,eAAEE,gBAAQ,QAAI9C,I,MAI7C,YAAAsH,oBAAN,SAA0BW,G,oJAIxB,OAHMC,EACoB,QAAxB,EAAkB,QAAlB,EAAAD,EAAMe,oBAAY,eAAEvO,YAAI,eAAGwF,IAIlBgI,EAAMoC,OAGf,KAIFpC,EAAMqC,2BACNrC,EAAMe,aAAajG,QAGbgH,EA2IV,SAAiBZ,G,UAETY,EAA+B,QAAxB,EAAkB,QAAlB,EAAAZ,EAAQW,kBAAU,eAAEC,YAAI,QAAwB,QAApB,EAAAZ,EAAQH,oBAAY,eAAEuB,aAC/D,GAAIR,EACF,OAAOA,EAGT,OAAIlD,EAAiBsC,EAAQ1O,MAEpBb,KAAK4Q,SAAS/N,OAEd,IAEX,CAxJiBgO,CAAQvC,GAChB6B,GAKCzN,EAAM,IAAIC,IAAIwN,EAAMnQ,KAAK4Q,SAASE,MAClCC,EAAY,IAAIpO,IAAI3C,KAAK4Q,SAAS/N,QAEpCH,EAAIW,OAAS0N,EAAU1N,KACzB,IAGW,GAAM2N,EAAgBtO,KAXjC,KAdA,I,cAyBEoM,EAAS,UAET,MACO,GAAM9O,KAAKiR,QAAQC,WAAWf,I,OAIvC,OAJArB,EAAS,SAIT,GAAM5B,ER5OyC,M,cQ4O/C,S,aAES,SAAM4B,EAAOqC,S,OAAtBrC,EAAS,S,iBAGX,OAAKA,GAKLR,EAAgB8C,YAAcnL,EAAYoL,qBAC1C/C,EAAgBgD,qBAAsB,EAC/B,CAAP,EAAOxC,EAAOyC,YAAYjD,KALxB,I,MAON,EArPA,GAuPA,SAASgB,EACPhB,G,MAEMkD,EAAsB,sBACrBlD,EAAgBc,cAUvB,OAJAoC,EAAuB3Q,OAAI,MACxBwF,GAAUiI,E,GAGNkD,CACT,CAqBA,SAAeR,EAAgBtO,G,gJACV,SAAM+L,M,OAAnBG,EAAa,S,IAEnB,IAAqB,qBAAAA,GAAU,8BAG7B,GAHSE,EAAM,QACT2C,EAAY,IAAI9O,IAAImM,EAAOpM,IAAK1C,KAAK4Q,SAASE,MAEhDpO,EAAIW,OAASoO,EAAUpO,KACzB,MAAO,CAAP,EAAOyL,E,kGAIX,MAAO,CAAP,EAAO,M,IACR,CAgBD,SAASI,GACPN,EACAN,G,QAEAA,EAAgBgD,qBAAsB,EACtChD,EAAgB8C,YAAcnL,EAAYyL,c,IAE1C,IAAqB,yBAAA9C,GAAU,8BAAE,CAAhB,QACR2C,YAAYjD,EACpB,C,kGACH,CAEA,SAASG,KACP,OAAOzO,KAAKiR,QAAQU,SAAS,CAC3BC,KAAM,SACNC,qBAAqB,GAGzB,CAEA,SAASxC,GACPyC,G,MAIQC,EAAYD,EAA2B,QACvCE,EAAe/R,aAAY,WAOnC,OANI8R,GAAWC,GAAcD,EAAQ5K,OAAS6K,GAC5C5F,QAAQC,KACN,8BAA8B2F,EAAU,0DAIrChS,KAAK+N,aAAasB,iBACuB,QAAjC,EAAAyC,EAA4BhC,aAAK,QAAI,GAClDgC,EAEJ,CElWA,kBAKE,WACmBnI,GADnB,WACmB,KAAAA,uBALX,KAAAT,SAA0B,KAE1B,KAAA+I,kBAA8D,KAKpEC,UAAUC,cAAc7E,iBAAiB,UAAW,SAAAvK,GAClD,SAAKqP,qBAAqBrP,E,EAE7B,CAkOH,OAhOE,sBAAI,kBAAG,C,IAAP,WACE,OAAO1D,KAAKsK,qBAAqB9D,G,kCAGrB,YAAAuM,qBAAd,SAAmC/D,G,sIAGjC,OAFMC,EAAkBD,EAAMxN,MAETyQ,qBAQnBjS,KAAK4S,mBACL3D,EAAgB8C,cAAgBnL,EAAYyL,gBAEN,oBAA3BrS,KAAK4S,kBACd5S,KAAK4S,kBA0Nb,SACE3D,GAIA,cAFOA,EAAgB8C,mBAChB9C,EAAgBgD,oBAChBhD,CACT,CA/NU+D,CAAoBxT,OAAOyT,OAAO,CAAC,EAAGhE,KAGxCjP,KAAK4S,kBAAkBzB,KAAK3R,OAAOyT,OAAO,CAAC,EAAGhE,KAOhDrB,EAHIsF,EAAcjE,EAAgBzN,OAIkB,MAApD0R,EVvD4C,gBUyD5C,GAAMlT,KAAKmT,SAASlE,EAAgB8C,YAAcmB,IAHlD,OAtBA,I,OAyBA,S,iCAIJ,YAAAE,YAAA,WACE,OAAOpT,KAAK6J,Q,EAGd,YAAAwJ,SAAA,WACE,OAAOrT,KAAKmM,c,EAGR,YAAA5L,SAAN,SAAeuD,G,oIAImB,YAA5BlD,aAAaC,WAAb,MACF,GAAMD,aAAa+N,qB,OAAnB,S,iBAGF,GAAgC,YAA5B/N,aAAaC,WACf,MAAMiG,EAAcwE,OAAO,sBAG7B,SAAMtL,KAAKsT,eAAsB,OAAPxP,QAAO,IAAPA,OAAO,EAAPA,EAAS+F,W,OACnC,OADA,SACA,GAAM7J,KAAKuT,YAAmB,OAAPzP,QAAO,IAAPA,OAAO,EAAPA,EAAS0P,4B,OAEhC,OAFA,SAEO,CAAP,EAAOjT,EACLP,KAAKsK,qBACLtK,KAAKmM,eACLnM,KAAK6J,W,MAIH,YAAAyJ,eAAN,SAAqBzJ,G,8GACbA,EACJ7J,KAAK6J,SAAWA,EACN7J,KAAK6J,WACf7J,KAAK6J,SAAW9C,G,SAId,YAAAwM,YAAN,SACEpH,G,qIAEKA,GAAmBnM,KAAKmM,eAAzB,MACF,GAAMnM,KAAKyT,qB,OAAX,S,iBAGF,IAAKtH,GAAoBnM,KAAKmM,eAC5B,UAGF,KAAMA,aAA0BuH,2BAC9B,MAAM5M,EAAcwE,OAAO,2B,OAG7BtL,KAAKmM,eAAiBA,E,UAGV,YAAAsH,kBAAd,W,sIAE0B,O,sBAAtB,EAAAzT,KAAsB,GAAM6S,UAAUC,cAAca,SVpI3B,4BUsIvB,CACErH,MVtIsB,0C,cUmI1B,EAAKH,eAAiB,SAYtBnM,KAAKmM,eAAeyH,SAASC,MAAM,W,gBAInC,M,WAAM/M,EAAcwE,OAAO,qCAAuC,CAChEwI,oBAAqB,EAAExU,U,uBAKvB,YAAA4N,YAAN,W,qIACOlN,KAAKmM,eAAN,MACF,GAAMnM,KAAKyT,qB,OAAX,S,iBAGF,MAAO,CAAP,EAAOvG,EAAYlN,KAAKsK,qBAAsBtK,KAAKmM,iB,MAW/C,YAAAwC,kBAAN,W,oIACE,MAAgC,YAA5B/N,aAAaC,WACf,IAGuB,GAAMD,aAAa+N,qB,OAC5C,GAAyB,aADnBoF,EAAmB,UAEvB,UACK,KAAyB,WAArBA,EACHjN,EAAcwE,OAAO,sBAErBxE,EAAcwE,OAAO,sB,MAQ/B,YAAAsD,kBAAA,SAAkB/E,GAChB,GAAsB,OAAlB7J,KAAK6J,SACP,MAAM/C,EAAcwE,OAAO,iCAG7B,GAAwB,kBAAbzB,GAA6C,IAApBA,EAAS/B,OAC3C,MAAMhB,EAAcwE,OAAO,qBAG7BtL,KAAK6J,SAAWA,C,EAOlB,YAAAgF,iBAAA,SAAiB1C,GACf,KAAMA,aAA0BuH,2BAC9B,MAAM5M,EAAcwE,OAAO,2BAG7B,GAAItL,KAAKmM,eACP,MAAMrF,EAAcwE,OAAO,0BAG7BtL,KAAKmM,eAAiBA,C,EAQxB,YAAA2C,UAAA,SAAUL,GAAV,WAGE,OAFAzO,KAAK4S,kBAAoBnE,EAElB,WACL,EAAKmE,kBAAoB,I,GAI7B,YAAAtE,4BAAA,WACE,MAAMxH,EAAcwE,OAAO,uB,EAG7B,YAAAkD,oBAAA,WACE,MAAM1H,EAAcwE,OAAO,uB,EAO7B,YAAAyD,eAAA,WACE,OAAO,Y,EAGK,YAAAoE,SAAd,SACEpB,EACAvQ,G,oIAGkB,OADZwS,EAaV,SAAsBjC,GACpB,OAAQA,GACN,KAAKnL,EAAYoL,qBACf,MAAO,oBACT,KAAKpL,EAAYyL,cACf,MAAO,0BACT,QACE,MAAM,IAAI1S,MAEhB,CAtBsBsU,CAAalC,GACb,GAAM/R,KAAKsK,qBAAqB4J,kBAAkB/T,O,cAAlD,SACRgT,SAASa,EAAW,CAE5BG,WAAY3S,EAAKyF,GACjBmN,aAAc5S,EV/OiB,kBUgP/B6S,aAAc7S,EVjPiB,iBUkP/B8S,oBAAqBC,KAAKC,MAAM1S,KAAK4H,MAAQ,O,UAInD,EA7OA,GCeA,SAAS+K,GAAqBC,GAC5B,OAAO5N,EAAcwE,OAAO,4BAAqC,CAC/DoJ,UAAS,GAEb,CCOA,IAAM,GAAoB,CACxB,YAAW,IA0Bb,SAAS,KACP,OAAI,MAAQ,6BAA8B,KA+BxC,cAAe,MACD,OAAd,WACA,gBAAiB,MACjB,iBAAkB,MAClB,0BAA0B,UAAU,eAAe,qBACnD,iBAAiB,UAAU,eAAe,UAtB1C,cAAe,QACD,OAAd,WACA,UAAU,eACV,kBAAmB,WACnB,gBAAiB,QACjB,iBAAkB,QAClB,UAAW,QACX,0BAA0B,UAAU,eAAe,qBACnD,iBAAiB,UAAU,eAAe,SAf9C,CA/BC,UAAgC,SAAS,kBACxC,IAAI,YAnCiB,YACvB,SACE,GAGA,IAAM,EAAM,EAAU,YAAY,OAAO,eACnC,E,SDpByBlO,G,QAC/B,IAAKA,IAAQA,EAAI1C,QACf,MAAM2Q,GAAqB,4BAG7B,IAAKjO,EAAI5C,KACP,MAAM6Q,GAAqB,YAI7B,IAOQ3Q,EAAY0C,EAAG,Q,IACvB,IAAsB,yBARmC,CACvD,YACA,SACA,QACA,sBAI8B,8BAAE,CAA7B,IAAMmO,EAAO,QAChB,IAAK7Q,EAAQ6Q,GACX,MAAMF,GAAqBE,EAE9B,C,kGAED,MAAO,CACLC,QAASpO,EAAI5C,KACbC,UAAWC,EAAQD,UACnBmI,OAAQlI,EAAQkI,OAChBjB,MAAOjH,EAAQiH,MACfxC,SAAUzE,EAAQ+Q,kBAEtB,CCXoB,CAAiB,GAI7B,EAAqD,CACzD,IAAG,EACH,UAAS,EACT,cANoB,EAAU,YAAY,iBAAiB,eAO3D,kBANwB,EAAU,YAAY,uBAShD,IAAK,KACH,MAAM,EAAc,OAAM,uBAG5B,OAAI,MAAQ,6BAA8B,KAEjC,IAAI,EAAa,GAGjB,IAAI,GAAiB,EAEhC,EASiB,UAEb,gBAAgB,KCrDb,IAAMC,GAAe,iCAKfC,GAA4B,gBCLzC,eAYE,WAAY1V,EAAwBC,GAApC,MACE,YACE0V,GAAY3V,GACZ,qBAAqBC,EAAO,KAAK0V,GAAY3V,GAAK,MACnD,K,OAXH,EAAA4V,WAAgD,CAAEC,eAAgB,MAYhE,EAAKC,aAAe,EAAK7V,QAGzBE,OAAOC,eAAe,EAAM2V,EAAqBpX,W,CAClD,CAwBH,OA7C0C,yBA0BxC,YAAAqX,YAAA,SAAYhW,GACV,OAAO2V,GAAY3V,KAAUW,KAAKX,I,EAMpC,sBAAI,6BAAc,C,IAAlB,WACE,OAAOW,KAAKiV,WAAWC,c,MAGzB,SAAmBA,GACjBlV,KAAKiV,WAAWC,eAAiBA,EAC7BlV,KAAKiV,WAAWC,eAClBlV,KAAKV,QAAaU,KAAKmV,aAAY,KAAKnV,KAAKiV,WAAWC,eAExDlV,KAAKV,QAAUU,KAAKmV,Y,kCAG1B,EA7CA,CAA0C,iB,SAmF1BH,GAAY3V,GAC1B,MAAO,WAAaA,CACtB,C,SAEgBiW,KAId,OAAO,IAAI,GAAqB,UAF9B,iFAGJ,C,SA8EgB,KACd,OAAO,IAAI,GAAqB,WAE9B,qCAEJ,C,SAiCgBC,KACd,OAAO,IAAI,GAAqB,oBAE9B,yDAEJ,C,SAgBgBC,GAAgBlW,GAC9B,OAAO,IAAI,GAAqB,mBAAmCA,EACrE,C,SA+BgBmW,KACd,OAAO,IAAI,GAAqB,cAE9B,gCAEJ,C,SAKgBC,GAAqB9R,GACnC,OAAO,IAAI,GAAqB,yBAE9B,kBACEA,EADF,kHAKJ,C,SAMgB+R,GACdC,EACAtW,GAEA,OAAO,IAAI,GAAqB,iBAE9B,iCAAmCsW,EAAS,MAAQtW,EAExD,C,SAegBuW,GAAcvW,GAC5B,MAAM,IAAI,GAAqB,iBAE7B,mBAAqBA,EAEzB,CCpTO,IAAMwW,GAAe,CAQ1BC,IAAK,MAOLC,OAAQ,SAORC,UAAW,YAUXC,SAAU,YAGZ,GAGE,SAAmB1U,EAAkB2U,GAAlB,KAAA3U,OACjBxB,KAAKmW,YAAcA,GAAe,IACnC,E,SAGaC,GACdR,EACAS,GAEA,OAAQT,GACN,KAAKE,GAAaC,IAChB,OAAO,IAAIO,GAAWC,GAAWF,IACnC,KAAKP,GAAaE,OAClB,KAAKF,GAAaG,UAChB,OAAO,IAAIK,GAAWE,GAAaZ,EAAQS,IAC7C,KAAKP,GAAaI,SAChB,OAAO,IAAII,G,SAqIaG,GAC5B,IAAMC,EAAQ,IAAIC,GAAaF,GAC/B,OAAIC,EAAM9O,OACD4O,GAAaV,GAAaE,OAAQU,EAAME,M,SAlFdtU,GACnC,IAAIuU,EACJ,IACEA,EAAUC,mBAAmBxU,E,CAC7B,MAAOoB,GACP,MAAMiS,GAAcG,GAAaI,SAAU,sBAC5C,CACD,OAAOK,GAAWM,EACpB,CA4EWE,CAAqBL,EAAME,KAEtC,CA3IQI,CAAcX,GA8IN,IAAIM,GA7IQN,GA8IbF,aAvIb,MAAMb,IACR,C,SAEgBiB,GAAWjU,GAEzB,IADA,IAAM2U,EAAc,GACX/O,EAAI,EAAGA,EAAI5F,EAAMwF,OAAQI,IAAK,CACrC,IAAIgP,EAAI5U,EAAM6F,WAAWD,GACzB,GAAIgP,GAAK,IACPD,EAAEE,KAAKD,QAEP,GAAIA,GAAK,KACPD,EAAEE,KAAK,IAAOD,GAAK,EAAI,IAAW,GAAJA,QAE9B,GAAoB,SAAX,MAAJA,GAIH,GADEhP,EAAI5F,EAAMwF,OAAS,GAA2C,SAAX,MAA1BxF,EAAM6F,WAAWD,EAAI,IAO9CgP,EAAI,OAAe,KAFRA,IAEiB,GAAY,KAD7B5U,EAAM6F,aAAaD,GAE9B+O,EAAEE,KACA,IAAOD,GAAK,GACZ,IAAQA,GAAK,GAAM,GACnB,IAAQA,GAAK,EAAK,GAClB,IAAW,GAAJA,QATTD,EAAEE,KAAK,IAAK,IAAK,UAaC,SAAX,MAAJD,GAEHD,EAAEE,KAAK,IAAK,IAAK,KAEjBF,EAAEE,KAAK,IAAOD,GAAK,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,EAK/D,CACD,OAAO,IAAI7P,WAAW4P,EACxB,C,SAYgBT,GAAaZ,EAAsBtT,GACjD,OAAQsT,GACN,KAAKE,GAAaE,OAChB,IAAMoB,GAAmC,IAAxB9U,EAAM+U,QAAQ,KACzBC,GAAmC,IAAxBhV,EAAM+U,QAAQ,KAC/B,GAAID,GAAYE,EAEd,MAAM3B,GACJC,EACA,uBAHkBwB,EAAW,IAAM,KAKjC,qCAGN,MAEF,KAAKtB,GAAaG,UAChB,IAAMsB,GAAkC,IAAxBjV,EAAM+U,QAAQ,KACxBG,GAAmC,IAAxBlV,EAAM+U,QAAQ,KAC/B,GAAIE,GAAWC,EAEb,MAAM7B,GACJC,EACA,uBAHkB2B,EAAU,IAAM,KAGI,kCAG1CjV,EAAQA,EAAMmF,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAMnD,IAAIgQ,EACJ,IACEA,EClKKzP,KDkKgB1F,E,CACrB,MAAOoB,GACP,MAAMiS,GAAcC,EAAQ,0BAC7B,CAED,IADA,IAAMzO,EAAQ,IAAIE,WAAWoQ,EAAM3P,QAC1BI,EAAI,EAAGA,EAAIuP,EAAM3P,OAAQI,IAChCf,EAAMe,GAAKuP,EAAMtP,WAAWD,GAE9B,OAAOf,CACT,CAEA,OAKE,SAAYuQ,GAJZ,KAAA9P,QAAkB,EAClB,KAAAuO,YAA6B,KAI3B,IAAMwB,EAAUD,EAAQE,MAAM,mBAC9B,GAAgB,OAAZD,EACF,MAAMhC,GACJG,GAAaI,SACb,yDAGJ,IAAM2B,EAASF,EAAQ,IAAM,KACf,MAAVE,IACF7X,KAAK4H,QAuBOkQ,EAvBWD,EAuBAE,EAvBQ,UAwBhBD,EAAEhQ,QAAUiQ,EAAIjQ,QAK5BgQ,EAAEE,UAAUF,EAAEhQ,OAASiQ,EAAIjQ,UAAYiQ,GA5B1C/X,KAAKmW,YAAcnW,KAAK4H,OACpBiQ,EAAOG,UAAU,EAAGH,EAAO/P,OAAS,GACpC+P,GAEN7X,KAAK4W,KAAOc,EAAQM,UAAUN,EAAQL,QAAQ,KAAO,GAkBzD,IAAkBS,EAAWC,CAjB1B,EExLI,IC4BKE,GD5BCC,GAAY,CAavBC,cAAe,iBAwBJC,GAAY,CAEvBC,QAAS,UAGTC,OAAQ,SAGRC,QAAS,UAGTC,SAAU,WAGVC,MAAO,S,SAGOC,GACdC,GAEA,OAAQA,GACN,IAAK,UACL,IAAK,UACL,IAAK,YACH,OAAOP,GAAUC,QACnB,IAAK,SACH,OAAOD,GAAUE,OACnB,IAAK,UACH,OAAOF,GAAUG,QACnB,IAAK,WACH,OAAOH,GAAUI,SAGnB,QAEE,OAAOJ,GAAUK,MAEvB,EC9CA,SAAYR,GACV,2BACA,qCACA,oBACD,CAJD,CAAYA,QAAS,KC7BrB,kBAME,wBAFQ,KAAAW,OAAiB,EAGvB5Y,KAAK6Y,KAAO,IAAIC,eAChB9Y,KAAK+Y,WAAad,GAAUe,SAC5BhZ,KAAKiZ,aAAe,IAAIjW,QAAQ,SAAAC,GAC9B,EAAK4V,KAAK5K,iBAAiB,QAAS,WAClC,EAAK8K,WAAad,GAAUiB,MAC5BjW,G,GAEF,EAAK4V,KAAK5K,iBAAiB,QAAS,WAClC,EAAK8K,WAAad,GAAUkB,cAC5BlW,G,GAEF,EAAK4V,KAAK5K,iBAAiB,OAAQ,WACjChL,G,IAGL,CAiGH,OA5FE,YAAAmW,KAAA,SACE/V,EACAoB,EACAJ,EACAC,GAEA,GAAItE,KAAK4Y,MACP,MAAM/C,GAAc,iCAItB,GAFA7V,KAAK4Y,OAAQ,EACb5Y,KAAK6Y,KAAKQ,KAAK5U,EAAQpB,GAAK,QACZ/C,IAAZgE,EACF,IAAK,IAAMjD,KAAOiD,EACZA,EAAQhD,eAAeD,IACzBrB,KAAK6Y,KAAKS,iBAAiBjY,EAAKiD,EAAQjD,GAAKO,YASnD,YALatB,IAAT+D,EACFrE,KAAK6Y,KAAKO,KAAK/U,GAEfrE,KAAK6Y,KAAKO,OAELpZ,KAAKiZ,Y,EAMd,YAAAM,aAAA,WACE,IAAKvZ,KAAK4Y,MACR,MAAM/C,GAAc,yCAEtB,OAAO7V,KAAK+Y,U,EAMd,YAAAS,UAAA,WACE,IAAKxZ,KAAK4Y,MACR,MAAM/C,GAAc,sCAEtB,IACE,OAAO7V,KAAK6Y,KAAKhU,M,CACjB,MAAOnB,GACP,OAAQ,CACT,C,EAMH,YAAA+V,gBAAA,WACE,IAAKzZ,KAAK4Y,MACR,MAAM/C,GAAc,4CAEtB,OAAO7V,KAAK6Y,KAAKa,Y,EAOnB,YAAAC,MAAA,WACE3Z,KAAK6Y,KAAKc,O,EAMZ,YAAAC,kBAAA,SAAkBC,GAChB,OAAO7Z,KAAK6Y,KAAKe,kBAAkBC,E,EAMrC,YAAAC,0BAAA,SAA0BC,GACA,MAApB/Z,KAAK6Y,KAAKmB,QACZha,KAAK6Y,KAAKmB,OAAO/L,iBAAiB,WAAY8L,E,EAOlD,YAAAE,6BAAA,SAA6BF,GACH,MAApB/Z,KAAK6Y,KAAKmB,QACZha,KAAK6Y,KAAKmB,OAAOE,oBAAoB,WAAYH,E,EAGvD,EAvHA,GCFA,+BAIC,CAAD,OAHE,YAAAI,iBAAA,WACE,OD0HK,IAAIC,E,ECxHb,EAJA,GCIA,cAGE,WAA4BC,EAAgBC,GAAhB,KAAAD,SAC1Bra,KAAKua,MAAQD,CACd,CAwGH,OAtGE,sBAAI,mBAAI,C,IAAR,WACE,OAAOta,KAAKua,K,kCAGd,sBAAI,qBAAM,C,IAAV,WACE,OAA4B,IAArBva,KAAKsa,KAAKxS,M,kCAGnB,YAAA0S,cAAA,WACE,IAAMjZ,EAASkZ,mBACf,MAAO,MAAQlZ,EAAOvB,KAAKqa,QAAU,MAAQ9Y,EAAOvB,KAAKsa,K,EAG3D,YAAAI,oBAAA,WAEE,MAAO,MADQD,mBACOza,KAAKqa,QAAU,I,EAGhC,EAAAM,mBAAP,SAA0BC,EAAsB5W,GAC9C,IAAI6W,EACJ,IACEA,EAAiBC,EAASC,YAAYH,EAAc5W,E,CACpD,MAAON,GAGP,OAAO,IAAIoX,EAASF,EAAc,GACnC,CACD,GAA4B,KAAxBC,EAAeP,KACjB,OAAOO,EAEP,MPoJG,IAAI,GAAqB,yBAE9B,2BOtJ6BD,EPsJS,K,EOlJjC,EAAAG,YAAP,SAAmB1X,EAAaW,GAC9B,IAAIuN,EAA4B,KAC1ByJ,EAAe,sBAOrB,IACMC,EAAU,IAAIC,OAAO,SAAWF,EADvB,YAC8C,KAG7D,SAASG,EAAWC,GAClBA,EAAIb,MAAQzD,mBAAmBsE,EAAId,KACpC,CAkCD,IAjCA,IACMe,EAAsBrX,EAAKyD,QAAQ,OAAQ,OAmB3C6T,EAAS,CACb,CAAEC,MAAON,EAASO,QA1BF,CAAEnB,OAAQ,EAAGC,KAAM,GA0BGmB,WAjCxC,SAAkBL,GAC6B,MAAzCA,EAAId,KAAKoB,OAAON,EAAId,KAAKxS,OAAS,KACpCsT,EAAIb,MAAQa,EAAIb,MAAMoB,MAAM,GAAI,GAEnC,GA8BC,CACEJ,MApB0B,IAAIL,OAChC,aAAaG,EAAb,qBAAiDL,EAAjD,oBACA,KAmBEQ,QAjB2B,CAAEnB,OAAQ,EAAGC,KAAM,GAkB9CmB,WAAYN,GAEd,CACEI,MAduB,IAAIL,OAC7B,cALAlX,IAAS8Q,GACL,sDACA9Q,GAGyB,IAAIgX,EAAjC,YACA,KAaEQ,QAXwB,CAAEnB,OAAQ,EAAGC,KAAM,GAY3CmB,WAAYN,IAGPjT,EAAI,EAAGA,EAAIoT,EAAOxT,OAAQI,IAAK,CACtC,IAAM0T,EAAQN,EAAOpT,GACf2T,EAAWD,EAAML,MAAMO,KAAKzY,GAClC,GAAIwY,EAAU,CACZ,IAAME,EAAcF,EAASD,EAAMJ,QAAQnB,QACvC2B,EAAYH,EAASD,EAAMJ,QAAQlB,MAClC0B,IACHA,EAAY,IAEdzK,EAAW,IAAIuJ,EAASiB,EAAaC,GACrCJ,EAAMH,WAAWlK,GACjB,KACD,CACF,CACD,GAAgB,MAAZA,EACF,M,SPwEqBlO,GACzB,OAAO,IAAI,GAAqB,cAE9B,gBAAkBA,EAAM,KAE5B,CO7EY4Y,CAAW5Y,GAEnB,OAAOkO,C,EAEX,EA7GA,GCRA,cAGE,WAAY5L,GACV3F,KAAKkc,SAAWlZ,QAAQqC,OAAUM,EACnC,CASH,OANE,YAAAwW,WAAA,WACE,OAAOnc,KAAKkc,Q,EAId,YAAAE,OAAA,SAAOC,G,EACT,EAdA,G,SCUgBC,GAASC,GACvB,MAAoB,kBAANA,GAAkBA,aAAahV,MAC/C,C,SAEgBiV,GAAaD,GAC3B,OAAOE,MAAyBF,aAAaG,IAC/C,C,SAEgBD,KACd,MAAuB,qBAATC,IAChB,C,SAEgBC,GACdC,EACAC,EACAC,EACAxa,GAEA,GAAIA,EAAQua,EACV,MAAMrH,GACJ,sBAAsBoH,EAAQ,eAAeC,EAAQ,gBAGzD,GAAIva,EAAQwa,EACV,MAAMtH,GACJ,sBAAsBoH,EAAQ,eAAeE,EAAQ,YAG3D,C,SCtCgBC,GAAQC,EAAiBhZ,GACvC,IAAMiZ,EAAgBjZ,EAAK4T,MAAM,iBAE7BpU,EAASQ,EAIb,OAHgB,OAFc,OAAbiZ,QAAa,IAAbA,OAAa,EAAbA,EAAgB,MAG/BzZ,EAAS,WAAWQ,GAEZR,EAAM,MAAMwZ,CACxB,C,SAEgBE,GAAgBC,GAC9B,IAAM5b,EAASkZ,mBACX2C,EAAY,IAChB,IAAK,IAAM/b,KAAO8b,EAAQ,CACxB,GAAIA,EAAO7b,eAAeD,GAExB+b,EAAYA,GADK7b,EAAOF,GAAO,IAAME,EAAO4b,EAAO9b,KAChB,GAEtC,CAID,OADA+b,EAAYA,EAAUzB,MAAM,GAAI,EAElC,CCIA,kBAuBE,WACEtY,EACAoB,EACAH,EACAD,EACAgZ,EACAC,EACA/O,EACAgP,EAGAvY,EACAwY,EACAC,GAbF,WAhBQ,KAAAC,mBAAwC,KACxC,KAAAC,WAA+B,KAI/B,KAAAC,WAAqB,EACrB,KAAAC,YAAsB,EAyB5B7d,KAAK8d,KAAOza,EACZrD,KAAK+d,QAAUtZ,EACfzE,KAAKge,SAAW1Z,EAChBtE,KAAKie,MAAQ5Z,EACbrE,KAAKke,cAAgBb,EAAa1B,QAClC3b,KAAKme,sBAAwBb,EAAqB3B,QAClD3b,KAAKoe,UAAY7P,EACjBvO,KAAKqe,eAAiBd,EACtBvd,KAAKse,kBAAoBd,EACzBxd,KAAKue,SAAWvZ,EAChBhF,KAAKwe,MAAQf,EACbzd,KAAKkc,SAAW,IAAIlZ,QAAQ,SAACC,EAASoC,GACpC,EAAKoZ,SAAWxb,EAChB,EAAKyb,QAAUrZ,EACf,EAAKsZ,Q,EAER,CAyIH,OApIU,YAAAA,OAAR,WACE,IAAMhe,EAAOX,KAmDb,SAAS4e,EACPC,EACAha,GAEA,IA+BYqK,EA/BNjM,EAAUtC,EAAK8d,SACfpZ,EAAS1E,EAAK+d,QACdI,EAAaja,EAAOia,WAC1B,GAAIja,EAAOka,eACT,IACE,IAAM3d,EAAST,EAAKyd,UAClBU,EACAA,EAAWrF,wBFvJR,IEyJSrY,EACZ6B,EAAQ7B,GAER6B,G,CAEF,MAAOS,GACP2B,EAAO3B,EACR,MAEkB,OAAfob,IACI5P,EAAMoG,MACRJ,eAAiB4J,EAAWrF,kBAC5B9Y,EAAK0d,eACPhZ,EAAO1E,EAAK0d,eAAeS,EAAY5P,IAEvC7J,EAAO6J,IAGLrK,EAAOma,SAET3Z,EADM6J,EAAMvO,EAAKkd,WAAapI,KAAe,MAI7CpQ,EADM6J,EXzBT,IAAI,GAAqB,uBAE9B,4DW4BC,CACGlP,KAAK4d,UACPgB,EAAY,EAAO,IAAIK,IAAiB,EAAO,MAAM,IAErDjf,KAAK2d,W,SC5KTxc,EAEAoN,EACAvJ,GAIA,IAAIka,EAAc,EAIdC,EAAiB,KACjBC,GAAa,EACbC,EAAc,EAElB,SAASL,IACP,OAAuB,IAAhBK,CACR,CACD,IAAIC,GAAoB,EAExB,SAASC,I,IAAgB,sDAClBD,IACHA,GAAoB,EACpB/Q,EAASiR,MAAM,KAAMC,GAExB,CAED,SAASC,EAAcza,GACrBka,EAAY7Z,WAAW,WACrB6Z,EAAY,KACZhe,EAAEwe,EAASX,I,EACV/Z,EACJ,CAED,SAAS0a,EAAQC,G,IAAkB,IAiB7BC,EAjB6B,oDAC7BP,IAGAM,GAIaZ,KAAcI,EAH7BG,EAAgB1d,KAAI,MAApB0d,EAAe,yBAAM,KAAMK,GAAYH,KAQrCP,EAAc,KAEhBA,GAAe,GAGG,IAAhBG,GACFA,EAAc,EACdQ,EAAa,GAEbA,EAA6C,KAA/BX,EAAc3K,KAAKuL,UAEnCJ,EAAcG,IACf,CACD,IAAIE,GAAU,EAEd,SAASC,EAAKC,GACRF,IAGJA,GAAU,EACNT,IAGc,OAAdH,GACGc,IACHZ,EAAc,GAEhBnZ,aAAaiZ,GACbO,EAAc,IAETO,IACHZ,EAAc,IAGnB,CAMD,OALAK,EAAc,GACdpa,WAAW,WACT8Z,GAAa,EACbY,GAAK,E,EACJhb,GACIgb,CACT,CDoFwBE,CA7FpB,SACEC,EACAnB,GAEA,GAAIA,EACFmB,GAAgB,EAAO,IAAIlB,IAAiB,EAAO,MAAM,QAD3D,CAIA,IAAMH,EAAane,EAAK6d,MAAMrE,mBAC9BxZ,EAAK+c,mBAAqBoB,EASK,OAA3Bne,EAAK2d,mBACPQ,EAAWhF,0BAA0BsG,GAIvCtB,EACG1F,KAAKzY,EAAKmd,KAAMnd,EAAKod,QAASpd,EAAKsd,MAAOtd,EAAKqd,UAC/C5d,KAAK,WAC2B,OAA3BO,EAAK2d,mBACPQ,EAAW7E,6BAA6BmG,GAE1Czf,EAAK+c,mBAAqB,KAC1B,IAAM2C,EAAYvB,EAAWvF,iBAAmBtB,GAAUe,SACpDnU,EAASia,EAAWtF,YAC1B,GAAK6G,IAAa1f,EAAK2f,mBAAmBzb,GAA1C,CAQA,IAAM0b,GAAsD,IAAxC5f,EAAKud,cAAc7G,QAAQxS,GAC/Csb,GAAgB,EAAM,IAAIlB,GAAiBsB,EAAazB,GAFvD,KAPD,CACE,IAAM0B,EAAc1B,EAAWvF,iBAAmBtB,GAAUiB,MAC5DiH,GACE,EACA,IAAIlB,IAAiB,EAAO,KAAMuB,GAGrC,C,EAhCJ,CAID,SAASJ,EAAiBK,GACxB,IAAMC,EAASD,EAAcC,OACvBC,EAAQF,EAAcG,iBAAmBH,EAAcE,OAAS,EACvC,OAA3BhgB,EAAK2d,mBACP3d,EAAK2d,kBAAkBoC,EAAQC,EAElC,CA0BF,EAkDuC/B,EAAa5e,KAAKue,S,EAK5D,YAAApC,WAAA,WACE,OAAOnc,KAAKkc,Q,EAId,YAAAE,OAAA,SAAOyE,GACL7gB,KAAK4d,WAAY,EACjB5d,KAAK6d,WAAagD,IAAa,EACP,OAApB7gB,KAAK2d,aACP,EAAK3d,KAAK2d,aCxFX,GD0F+B,OAA5B3d,KAAK0d,oBACP1d,KAAK0d,mBAAmB/D,O,EAIpB,YAAA2G,mBAAR,SAA2Bzb,GAGzB,IAAMic,EAAoBjc,GAAU,KAAOA,EAAS,IAO9Ckc,GAAwD,IANtC,CAEtB,IAEA,KAEuC1J,QAAQxS,GAC3Cmc,GAC4C,IAAhDhhB,KAAKme,sBAAsB9G,QAAQxS,GACrC,OAAOic,GAAqBC,GAAoBC,C,EAEpD,EA/LA,GAqMA,GAME,SACSjC,EACAD,EACPE,GAFO,KAAAD,iBACA,KAAAD,aAGP9e,KAAKgf,WAAaA,CACnB,EE1OH,SAASiC,KACP,MAA2B,qBAAhBC,YACFA,YAC+B,qBAAtBC,kBACTA,uBAEP,CAEJ,C,SAQgBC,K,IAAQ,sDACtB,IAAMF,EAAcD,KACpB,QAAoB3gB,IAAhB4gB,EAA2B,CAE7B,IADA,IAAMG,EAAK,IAAIH,EACNhZ,EAAI,EAAGA,EAAIuX,EAAK3X,OAAQI,IAC/BmZ,EAAGC,OAAO7B,EAAKvX,IAEjB,OAAOmZ,EAAGD,S,CAEV,GAAI3E,KACF,OAAO,IAAIC,KAAK+C,GAEhB,MAAM,IAAI,GAAqB,0BAE7B,sDAIR,CCzBA,kBAKE,WAAYje,EAAuC+f,GACjD,IAAIC,EAAe,EACfC,EAAmB,GACnBjF,GAAahb,IACfxB,KAAK0hB,MAAQlgB,EACbggB,EAAQhgB,EAAcggB,KACtBC,EAAYjgB,EAAc+Q,MACjB/Q,aAAgBmgB,aACrBJ,EACFvhB,KAAK0hB,MAAQ,IAAIra,WAAW7F,IAE5BxB,KAAK0hB,MAAQ,IAAIra,WAAW7F,EAAKogB,YACjC5hB,KAAK0hB,MAAMG,IAAI,IAAIxa,WAAW7F,KAEhCggB,EAAOxhB,KAAK0hB,MAAM5Z,QACTtG,aAAgB6F,aACrBka,EACFvhB,KAAK0hB,MAAQlgB,GAEbxB,KAAK0hB,MAAQ,IAAIra,WAAW7F,EAAKsG,QACjC9H,KAAK0hB,MAAMG,IAAIrgB,IAEjBggB,EAAOhgB,EAAKsG,QAEd9H,KAAK8hB,MAAQN,EACbxhB,KAAK+hB,MAAQN,CACd,CAqEH,OAnEE,YAAAD,KAAA,WACE,OAAOxhB,KAAK8hB,K,EAGd,YAAAvP,KAAA,WACE,OAAOvS,KAAK+hB,K,EAGd,YAAApG,MAAA,SAAMqG,EAAmBC,GACvB,GAAIzF,GAAaxc,KAAK0hB,OAAQ,CAC5B,IACMQ,E,SDRcC,EAAYjC,EAAenI,GACnD,OAAIoK,EAAKC,YACAD,EAAKC,YAAYlC,EAAOnI,GACtBoK,EAAKE,SACPF,EAAKE,SAASnC,EAAOnI,GACnBoK,EAAKxG,MACPwG,EAAKxG,MAAMuE,EAAOnI,GAEpB,IACT,CCDqBuK,CADEtiB,KAAK0hB,MACaM,EAAWC,GAC9C,OAAe,OAAXC,EACK,KAEF,IAAIK,EAAQL,E,CAOnB,OAAO,IAAIK,EALG,IAAIlb,WACfrH,KAAK0hB,MAAqBc,OAC3BR,EACAC,EAAUD,IAEc,E,EAIvB,EAAAZ,QAAP,W,IAAe,sDACb,GAAI3E,KAAuB,CACzB,IAAMgG,EAA4ChD,EAAKvd,IACrD,SAACwgB,GACC,OAAIA,aAAeH,EACVG,EAAIhB,MAEJgB,C,GAIb,OAAO,IAAIH,EAAQnB,GAAQ5B,MAAM,KAAMiD,G,CAEvC,IAAME,EAA4BlD,EAAKvd,IACrC,SAACwgB,GACC,OAAIpG,GAASoG,GACJtM,GAAeN,GAAaC,IAAK2M,GAAelhB,KAG/CkhB,EAAgBhB,K,GAI1B,EAAc,EAClBiB,EAAYC,QAAQ,SAACzb,GACnB,GAAeA,EAAMya,U,GAEvB,IAAM,EAAS,IAAIva,WAAW,GAC1B,EAAQ,EAMZ,OALAsb,EAAYC,QAAQ,SAACzb,GACnB,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAMW,OAAQI,IAChC,EAAO,KAAWf,EAAMe,E,GAGrB,IAAIqa,EAAQ,GAAQ,E,EAI/B,YAAAM,WAAA,WACE,OAAO7iB,KAAK0hB,K,EAEhB,EApGA,G,SCXgBoB,GACdhL,GAEA,IAAIiL,ENG2BxG,EMF/B,IACEwG,EAAMre,KAAKse,MAAMlL,E,CACjB,MAAOpU,GACP,OAAO,IACR,CACD,MNFoB,kBADW6Y,EMGVwG,INFY/gB,MAAMC,QAAQsa,GMKtC,KAFAwG,CAIX,C,SCkBgBE,GAAc3I,GAC5B,IAAMnR,EAAQmR,EAAK4I,YAAY,IAAK5I,EAAKxS,OAAS,GAClD,OAAe,IAAXqB,EACKmR,EAEAA,EAAKqB,MAAMxS,EAAQ,EAE9B,C,SC/BgBga,GAAYC,EAAoB9gB,GAC9C,OAAOA,CACT,CAEA,OAKE,SACS+gB,EACPC,EACAC,EACAC,GAHO,KAAAH,SAKPrjB,KAAKsjB,MAAQA,GAASD,EACtBrjB,KAAKujB,WAAaA,EAClBvjB,KAAKwjB,MAAQA,GAASL,EACvB,EAMCM,GAA6B,K,SAUjBC,KACd,GAAID,GACF,OAAOA,GAET,IAAME,EAAqB,GAC3BA,EAASxM,KAAK,IAAIyM,GAAgB,WAClCD,EAASxM,KAAK,IAAIyM,GAAgB,eAClCD,EAASxM,KAAK,IAAIyM,GAAgB,mBAClCD,EAASxM,KAAK,IAAIyM,GAAgB,OAAQ,YAAY,IAQtD,IAAMC,EAAc,IAAID,GAAgB,QACxCC,EAAYL,MAPZ,SACEM,EACAC,GAEA,O,SAtBsBA,GACxB,OAAKzH,GAASyH,IAAaA,EAASjc,OAAS,EACpCic,EAEAd,GAAcc,EAEzB,CAgBWC,CAAUD,EAClB,EAGDJ,EAASxM,KAAK0M,GAed,IAAMI,EAAc,IAAIL,GAAgB,QAaxC,OAZAK,EAAYT,MAXZ,SACEM,EACAtC,GAEA,YAAalhB,IAATkhB,EACK/f,OAAO+f,GAEPA,CAEV,EAGDmC,EAASxM,KAAK8M,GACdN,EAASxM,KAAK,IAAIyM,GAAgB,gBAClCD,EAASxM,KAAK,IAAIyM,GAAgB,YAClCD,EAASxM,KAAK,IAAIyM,GAAgB,UAAW,MAAM,IACnDD,EAASxM,KAAK,IAAIyM,GAAgB,eAAgB,MAAM,IACxDD,EAASxM,KAAK,IAAIyM,GAAgB,qBAAsB,MAAM,IAC9DD,EAASxM,KAAK,IAAIyM,GAAgB,kBAAmB,MAAM,IAC3DD,EAASxM,KAAK,IAAIyM,GAAgB,kBAAmB,MAAM,IAC3DD,EAASxM,KAAK,IAAIyM,GAAgB,cAAe,MAAM,IACvDD,EAASxM,KAAK,IAAIyM,GAAgB,WAAY,kBAAkB,IAChEH,GAAYE,CAEd,C,SAYgBO,GACdC,EACAC,EACAT,GAKA,IAHA,IAAMP,EAAqB,CAC3BA,KAAmB,QACbiB,EAAMV,EAAS7b,OACZI,EAAI,EAAGA,EAAImc,EAAKnc,IAAK,CAC5B,IAAMoc,EAAUX,EAASzb,GACzBkb,EAASkB,EAAQhB,OAAUgB,EAA6Bd,MACtDJ,EACAgB,EAASE,EAAQjB,QAEpB,CAED,O,SA1BqBD,EAAoBe,GAOzC3kB,OAAO+kB,eAAenB,EAAU,MAAO,CAAEjjB,IANzC,WACE,IAAMka,EAAiB+I,EAAiB,OAClC9I,EAAe8I,EAAmB,SAClChI,EAAM,IAAIN,GAAST,EAAQC,GACjC,OAAO6J,EAAQK,sBAAsBpJ,EACtC,GAEH,CAiBEqJ,CAAOrB,EAAUe,GACVf,CACT,C,SAEgBsB,GACdP,EACAQ,EACAhB,GAEA,IAAMZ,EAAMD,GAAiB6B,GAC7B,OAAY,OAAR5B,EACK,KAGFmB,GAAaC,EADHpB,EACsBY,EACzC,C,SAoCgBiB,GACdxB,EACAO,GAMA,IAJA,IAAMS,EAEF,CAAC,EACCC,EAAMV,EAAS7b,OACZI,EAAI,EAAGA,EAAImc,EAAKnc,IAAK,CAC5B,IAAMoc,EAAUX,EAASzb,GACrBoc,EAAQf,WACVa,EAASE,EAAQjB,QAAUD,EAASkB,EAAQhB,OAE/C,CACD,OAAO5e,KAAKC,UAAUyf,EACxB,CChKA,IAAMS,GAAe,WACfC,GAAY,Q,SAiCFC,GACdZ,EACA9J,EACAsK,GAEA,IAAM5B,EAAMD,GAAiB6B,GAC7B,OAAY,OAAR5B,EACK,KAtCX,SACEoB,EACA9J,EACA+J,GAEA,IAAMY,EAAyB,CAC7BC,SAAU,GACVC,MAAO,GACPC,cAAef,EAAwB,eAEzC,GAAIA,EAASS,IACX,IAAmB,UAAAT,EAASS,IAAT,eAAwB,CAAtC,IACGO,EADO,KACyB3d,QAAQ,MAAO,IAC/C4d,EAAYlB,EAAQK,sBACxB,IAAI1J,GAAST,EAAQ+K,IAEvBJ,EAAWC,SAAS9N,KAAKkO,EAC1B,CAGH,GAAIjB,EAASU,IACX,IAAmB,UAAAV,EAASU,IAAT,eAAqB,CAAnC,IAAMQ,EAAI,KACPD,EAAYlB,EAAQK,sBACxB,IAAI1J,GAAST,EAAQiL,EAAW,OAElCN,EAAWE,MAAM/N,KAAKkO,EACvB,CAEH,OAAOL,CACT,CAYSO,CAAoBpB,EAAS9J,EADnB0I,EAEnB,CC/DA,OAiBE,SACS1f,EACAoB,EAQAkb,EACA3a,GAVA,KAAA3B,MACA,KAAAoB,SAQA,KAAAkb,UACA,KAAA3a,UA3BT,KAAAwgB,UAAuB,CAAC,EACxB,KAAAlhB,QAAmB,CAAC,EACpB,KAAAD,KAA0C,KAE1C,KAAAohB,aAEW,KAMX,KAAAjI,iBAA8D,KAC9D,KAAAH,aAAyB,CAAC,KAC1B,KAAAC,qBAAiC,EAc7B,E,SCHUoI,GAAaC,GAC3B,IAAKA,EACH,MAAMrQ,IAEV,C,SAEgBsQ,GACdzB,EACAR,GAOA,OALA,SAAiBkC,EAAiBC,GAChC,IAAM1C,EAAWsB,GAAmBP,EAAS2B,EAAMnC,GAEnD,OADA+B,GAA0B,OAAbtC,GACNA,CACR,CAEH,C,SAcgB2C,GACd5B,EACAR,GAWA,OATA,SAAiBkC,EAAiBC,GAChC,IAAM1C,EAAWsB,GAAmBP,EAAS2B,EAAMnC,GAEnD,OADA+B,GAA0B,OAAbtC,G,SHoEfA,EACAuB,EACA3gB,GAEA,IAAM+e,EAAMD,GAAiB6B,GAC7B,GAAY,OAAR5B,EACF,OAAO,KAET,IAAKzG,GAASyG,EAAoB,gBAGhC,OAAO,KAET,IAAMiD,EAAiBjD,EAAoB,eAC3C,GAAsB,IAAlBiD,EAAOle,OACT,OAAO,KAET,IAAMvG,EAASkZ,mBAaf,OAZmBuL,EAAOC,MAAM,KACR/jB,IAAI,SAAC1B,GAC3B,IAAM6Z,EAAiB+I,EAAiB,OAClC9I,EAAe8I,EAAmB,SAOxC,OALarG,GADG,MAAQxb,EAAO8Y,GAAU,MAAQ9Y,EAAO+Y,GAC1BtW,GACVkZ,GAAgB,CAClCgJ,IAAK,QACL1lB,MAAK,G,GAIG,EACd,CGlGW2lB,CACL/C,EACA0C,EACA3B,EAAQngB,KAEX,CAEH,C,SAEgBoiB,GACd7U,GA+BA,OA7BA,SACEsU,EACA3W,GAEA,IAAImX,EpByDqB/L,EAxBCD,EoBV1B,OAtBwB,MAApBwL,EAAIrM,YAMJ6M,EAFAR,EAAIpM,kBAAkB7Q,SAAS,uCpB8C9B,IAAI,GAAqB,mBAE9B,iFANK,IAAI,GAAqB,kBAF9B,+FoBjC0B,MAApBid,EAAIrM,apBqBgBa,EoBpBC9I,EAAS8I,OAAhCgM,EpBqBC,IAAI,GAAqB,iBAE9B,qBACEhM,EADF,2EoBrB4B,MAApBwL,EAAIrM,apB0Cac,EoBzCG/I,EAAS+I,KAA/B+L,EpB0CD,IAAI,GAAqB,eAE9B,4CAA8C/L,EAAO,OoB1C/C+L,EAASnX,EAIfmX,EAAOnR,eAAiBhG,EAAIgG,eACrBmR,CACR,CAEH,C,SAEgBC,GACd/U,GAEA,IAAMgV,EAASH,GAAmB7U,GAalC,OAXA,SACEsU,EACA3W,GAEA,IpBzB2BoL,EoByBvB+L,EAASE,EAAOV,EAAK3W,GAKzB,OAJwB,MAApB2W,EAAIrM,cpB1BmBc,EoB2BD/I,EAAS+I,KAAjC+L,EpB1BG,IAAI,GAAqB,mBAE9B,WAAa/L,EAAO,sBoB0BpB+L,EAAOnR,eAAiBhG,EAAIgG,eACrBmR,CACR,CAEH,C,SAEgBG,GACdrC,EACA5S,EACAoS,GAEA,IACMtgB,EAAM0Z,GADIxL,EAASiJ,gBACI2J,EAAQngB,MAE/BgB,EAAUmf,EAAQsC,sBAClBC,EAAc,IAAIC,GACtBtjB,EAHa,MAKbuiB,GAAgBzB,EAASR,GACzB3e,GAGF,OADA0hB,EAAYjB,aAAea,GAAmB/U,GACvCmV,CACT,C,SAEgBE,GACdzC,EACA5S,EACAsV,EACAC,EACAC,GAEA,IAAMvB,EAAuB,CAAC,EAC1BjU,EAASyV,OACXxB,EAAkB,OAAI,GAEtBA,EAAkB,OAAIjU,EAAS+I,KAAO,IAEpCuM,GAAaA,EAAU/e,OAAS,IAClC0d,EAAqB,UAAIqB,GAEvBC,IACFtB,EAAqB,UAAIsB,GAEvBC,IACFvB,EAAsB,WAAIuB,GAE5B,IACM1jB,EAAM0Z,GADIxL,EAASmJ,sBACIyJ,EAAQngB,MAE/BgB,EAAUmf,EAAQsC,sBAClBC,EAAc,IAAIC,GACtBtjB,EAHa,M,SA5Hf8gB,EACA9J,GAOA,OALA,SAAiBwL,EAAiBC,GAChC,IAAMd,EAAaD,GAAmBZ,EAAS9J,EAAQyL,GAEvD,OADAJ,GAA4B,OAAfV,GACNA,CACR,CAEH,CAwHIiC,CAAY9C,EAAS5S,EAAS8I,QAC9BrV,GAIF,OAFA0hB,EAAYlB,UAAYA,EACxBkB,EAAYjB,aAAeW,GAAmB7U,GACvCmV,CACT,C,SAwEgBQ,GACd3V,EACA4Q,EACAiB,GAEA,IAAM+D,EAAgB3nB,OAAOyT,OAAO,CAAC,EAAGmQ,GAMxC,OALA+D,EAAwB,SAAI5V,EAAS+I,KACrC6M,EAAoB,KAAIhF,EAAKX,OACxB2F,EAA2B,cAC9BA,EAA2B,Y,SAnB7B/D,EACAjB,GAEA,OACGiB,GAAYA,EAAsB,aAClCjB,GAAQA,EAAK5P,QACd,0BAEJ,CAWmC6U,CAAsB,KAAMjF,IAEtDgF,CACT,CAqEA,OAIE,SACSE,EACA1G,EACP2G,EACAlE,GAHO,KAAAiE,UACA,KAAA1G,QAIP3gB,KAAKsnB,YAAcA,EACnBtnB,KAAKojB,SAAWA,GAAY,IAC7B,E,SAGamE,GACd1B,EACA2B,GAEA,IAAI3iB,EAAwB,KAC5B,IACEA,EAASghB,EAAIjM,kBAAkB,uB,CAC/B,MAAOlW,GACPgiB,IAAa,EACd,CAGD,OADAA,KAAe7gB,IAA6C,KADtC2iB,GAAW,CAAC,WACKnQ,QAAQxS,IACxCA,CACT,CAoFO,IAAM4iB,GAAsC,O,SAWnCC,GACdnW,EACA4S,EACA9gB,EACA8e,EACAwF,EACAhE,EACA9e,EACA2Y,GAIA,IAAMoK,EAAU,IAAIC,GAAsB,EAAG,GAQ7C,GAPIhjB,GACF+iB,EAAQP,QAAUxiB,EAAOwiB,QACzBO,EAAQjH,MAAQ9b,EAAO8b,QAEvBiH,EAAQP,QAAU,EAClBO,EAAQjH,MAAQwB,EAAKX,QAEnBW,EAAKX,SAAWoG,EAAQjH,MAC1B,MpBxQK,IAAI,GAAqB,yBAE9B,wEoBwQF,IAAMmH,EAAYF,EAAQjH,MAAQiH,EAAQP,QACtCU,EAAgBD,EAChBH,EAAY,IACdI,EAAgBxT,KAAKyT,IAAID,EAAeJ,IAE1C,IAAM3F,EAAY4F,EAAQP,QACpBpF,EAAUD,EAAY+F,EAGtBzjB,EAAU,CACd,wBAFAyjB,IAAkBD,EAAY,mBAAqB,SAGnD,uBAAwB,GAAGF,EAAQP,SAE/BhjB,EAAO8d,EAAKxG,MAAMqG,EAAWC,GACnC,GAAa,OAAT5d,EACF,MAAMkR,KAwBR,IACMvQ,EAAUmf,EAAQ8D,mBAClBvB,EAAc,IAAIC,GAAYtjB,EAFrB,OArBf,SAAiBwiB,EAAiBC,GAKhC,IAGI1C,EAHE8E,EAAeX,GAAmB1B,EAAK,CAAC,SAAU,UAClDsC,EAAaP,EAAQP,QAAUU,EAC/BvG,EAAOW,EAAKX,OAOlB,OAJE4B,EADmB,UAAjB8E,EACStC,GAAgBzB,EAASR,EAAzBiC,CAAmCC,EAAKC,GAExC,KAEN,IAAI+B,GACTM,EACA3G,EACiB,UAAjB0G,EACA9E,EAEH,EAGyDpe,GAK1D,OAJA0hB,EAAYpiB,QAAUA,EACtBoiB,EAAYriB,KAAOA,EAAKwe,aACxB6D,EAAYlJ,iBAAmBA,GAAoB,KACnDkJ,EAAYjB,aAAeW,GAAmB7U,GACvCmV,CACT,CCneA,OAKE,SACEjY,EACA9I,EACAkF,GAIA,GZxDkB,oBYuDL4D,GAA4B,MAAT9I,GAA6B,MAAZkF,EAE/C7K,KAAKmR,KAAO1C,EACZzO,KAAK2F,MAAQA,EACb3F,KAAK6K,SAAWA,MACX,CACL,IAAMud,EAAW3Z,EAKjBzO,KAAKmR,KAAOiX,EAASjX,KACrBnR,KAAK2F,MAAQyiB,EAASziB,MACtB3F,KAAK6K,SAAWud,EAASvd,QAC1B,CACF,E,SCxEa,GAAM1J,GACpB,OAAO,W,IAAC,sDAEN6B,QAAQC,UAAU7C,KAAK,WAAM,OAAAe,EAAC,aAAIknB,EAAa,E,CAEnD,CCiCA,kBAsCE,WAAYC,EAAgBnG,EAAeiB,GAA3C,gBAA2C,IAAAA,MAAA,MAxB3C,KAAAmF,aAAuB,EACf,KAAAC,oBAA8B,EAC9B,KAAAC,sBAAgC,EAChC,KAAAC,WAAyD,GAMzD,KAAAC,YAAgCroB,EAChC,KAAAsoB,gBAAsBtoB,EACtB,KAAAuoB,cAA8BvoB,EAC9B,KAAAwoB,iBAA2B,EAG3B,KAAAC,cAA8CzoB,EAC9C,KAAA0oB,aAA+C1oB,EASrDN,KAAKipB,KAAOX,EACZtoB,KAAKkpB,MAAQ/G,EACbniB,KAAK8jB,UAAYV,EACjBpjB,KAAKmpB,UAAYzF,KACjB1jB,KAAKopB,WAAappB,KAAKqpB,mBAAmBrpB,KAAKkpB,OAC/ClpB,KAAKspB,OAAS,UACdtpB,KAAKupB,cAAgB,SAAA5jB,GACnB,EAAKkjB,cAAWvoB,EAChB,EAAKwoB,iBAAmB,EACpBnjB,EAAM0P,YAAY,aACpB,EAAKmT,oBAAqB,EAC1B,EAAKgB,yBAEL,EAAKb,OAAShjB,EACd,EAAK8jB,YAAY,S,EAGrBzpB,KAAK0pB,sBAAwB,SAAA/jB,GAC3B,EAAKkjB,cAAWvoB,EACZqF,EAAM0P,YAAY,YACpB,EAAKmU,wBAEL,EAAKb,OAAShjB,EACd,EAAK8jB,YAAY,S,EAGrBzpB,KAAK2pB,SAAW,IAAI3mB,QAAQ,SAACC,EAASoC,GACpC,EAAK0jB,SAAW9lB,EAChB,EAAK+lB,QAAU3jB,EACf,EAAKukB,Q,GAKP5pB,KAAK2pB,SAASvpB,KAAK,KAAM,aAC1B,CA6fH,OA3fU,YAAAypB,sBAAR,sBACQC,EAAa9pB,KAAKuoB,aACxB,OAAO,SAAA7H,GAAU,SAAKqJ,gBAAgBD,EAAapJ,EAAO,C,EAGpD,YAAA2I,mBAAR,SAA2BlH,GACzB,OAAOA,EAAKX,OAAS,M,EAGf,YAAAoI,OAAR,WACsB,YAAhB5pB,KAAKspB,aAIahpB,IAAlBN,KAAK6oB,WAGL7oB,KAAKopB,gBACiB9oB,IAApBN,KAAK4oB,WACP5oB,KAAKgqB,mBAEDhqB,KAAKwoB,mBACPxoB,KAAKiqB,eAEDjqB,KAAKyoB,qBAEPzoB,KAAKkqB,iBAELlqB,KAAKmqB,kBAKXnqB,KAAKoqB,iB,EAID,YAAAC,cAAR,SACE9b,GADF,WAIEvL,QAAQsnB,IAAI,CACVtqB,KAAKipB,KAAKsB,QAAQC,gBAClBxqB,KAAKipB,KAAKsB,QAAQE,sBACjBrqB,KAAK,SAAC,G,IAACW,EAAS,KAAEyD,EAAa,KAChC,OAAQ,EAAK8kB,QACX,IAAK,UACH/a,EAASxN,EAAWyD,GACpB,MACF,IAAK,YACH,EAAKilB,YAAY,YACjB,MACF,IAAK,UACH,EAAKA,YAAY,U,IASjB,YAAAO,iBAAR,sBACEhqB,KAAKqqB,cAAc,SAACtpB,EAAWyD,GAC7B,IAAMkiB,E,SH6LVvC,EACA5S,EACAoS,EACAxB,EACAiB,GAEA,IAAMpG,EAAUzL,EAASmJ,sBACnBgQ,EAAoBxD,GAAmB3V,EAAU4Q,EAAMiB,GACvDoC,EAAuB,CAAE5hB,KAAM8mB,EAA4B,UAC3DrnB,EAAM0Z,GAAQC,EAASmH,EAAQngB,MAE/BM,EAAU,CACd,yBAA0B,YAC1B,wBAAyB,QACzB,sCAAuC,GAAG6d,EAAKX,OAC/C,oCAAqCkJ,EAA+B,YACpE,eAAgB,mCAEZrmB,EAAOugB,GAAiB8F,EAAmB/G,GAC3C3e,EAAUmf,EAAQ8D,mBAalBvB,EAAc,IAAIC,GAAYtjB,EAtBrB,OAWf,SAAiBwiB,GAEf,IAAIxiB,EADJkkB,GAAmB1B,GAEnB,IACExiB,EAAMwiB,EAAIjM,kBAAkB,oB,CAC5B,MAAOlW,GACPgiB,IAAa,EACd,CAED,OADAA,GAAapJ,GAASjZ,IACfA,CACR,EACyD2B,GAK1D,OAJA0hB,EAAYlB,UAAYA,EACxBkB,EAAYpiB,QAAUA,EACtBoiB,EAAYriB,KAAOA,EACnBqiB,EAAYjB,aAAeW,GAAmB7U,GACvCmV,CACT,CGnO0BiE,CAClB,EAAK1B,KAAKsB,QACV,EAAKtB,KAAK2B,UACV,EAAKzB,UACL,EAAKD,MACL,EAAKpF,WAED+G,EAAgB,EAAK5B,KAAKsB,QAAQO,aACtCpE,EACA3lB,EACAyD,GAEF,EAAKqkB,SAAWgC,EAChBA,EAAc1O,aAAa/b,KAAK,SAACiD,GAC/B,EAAKwlB,cAAWvoB,EAChB,EAAKsoB,WAAavlB,EAClB,EAAKmlB,oBAAqB,EAC1B,EAAKgB,sB,EACJ,EAAKD,c,IAIJ,YAAAU,aAAR,sBAEQ5mB,EAAMrD,KAAK4oB,WACjB5oB,KAAKqqB,cAAc,SAACtpB,EAAWyD,GAC7B,IAAMkiB,E,SH+MVvC,EACA5S,EACAlO,EACA8e,GAsBA,IACMnd,EAAUmf,EAAQ8D,mBAClBvB,EAAc,IAAIC,GAAYtjB,EAFrB,OAlBf,SAAiBwiB,GACf,IAAMhhB,EAAS0iB,GAAmB1B,EAAK,CAAC,SAAU,UAC9CkF,EAA4B,KAChC,IACEA,EAAalF,EAAIjM,kBAAkB,8B,CACnC,MAAOlW,GACPgiB,IAAa,EACd,CAEIqF,GAEHrF,IAAa,GAGf,IAAMlE,EAAO/f,OAAOspB,GAEpB,OADArF,IAAcnjB,MAAMif,IACb,IAAIqG,GAAsBrG,EAAMW,EAAKX,OAAmB,UAAX3c,EACrD,EAGyDG,GAG1D,OAFA0hB,EAAYpiB,QAvBI,CAAE,wBAAyB,SAwB3CoiB,EAAYjB,aAAeW,GAAmB7U,GACvCmV,CACT,CG9O0BsE,CAClB,EAAK/B,KAAKsB,QACV,EAAKtB,KAAK2B,UACVvnB,EACA,EAAK6lB,OAED+B,EAAgB,EAAKhC,KAAKsB,QAAQO,aACtCpE,EACA3lB,EACAyD,GAEF,EAAKqkB,SAAWoC,EAChBA,EAAc9O,aAAa/b,KAAK,SAAAyE,GAE9B,EAAKgkB,cAAWvoB,EAChB,EAAKypB,gBAAgBllB,EAAOwiB,SAC5B,EAAKmB,oBAAqB,EACtB3jB,EAAOyiB,YACT,EAAKmB,sBAAuB,GAE9B,EAAKe,sB,EACJ,EAAKD,c,IAIJ,YAAAY,gBAAR,sBACQxC,EAAYF,GAA8BznB,KAAK8oB,iBAC/CjkB,EAAS,IAAIgjB,GACjB7nB,KAAKuoB,aACLvoB,KAAKkpB,MAAM1H,QAIPne,EAAMrD,KAAK4oB,WACjB5oB,KAAKqqB,cAAc,SAACtpB,EAAWyD,GAC7B,IAAIkiB,EACJ,IACEA,EAAcgB,GACZ,EAAKuB,KAAK2B,UACV,EAAK3B,KAAKsB,QACVlnB,EACA,EAAK6lB,MACLvB,EACA,EAAKwB,UACLtkB,EACA,EAAKglB,wB,CAEP,MAAOnmB,GAGP,OAFA,EAAKilB,OAASjlB,OACd,EAAK+lB,YAAY,QAElB,CACD,IAAMyB,EAAgB,EAAKjC,KAAKsB,QAAQO,aACtCpE,EACA3lB,EACAyD,GAEF,EAAKqkB,SAAWqC,EAChBA,EAAc/O,aAAa/b,KAAK,SAAC+qB,GAC/B,EAAKC,sBACL,EAAKvC,cAAWvoB,EAChB,EAAKypB,gBAAgBoB,EAAU9D,SAC3B8D,EAAU7D,WACZ,EAAKxD,UAAYqH,EAAU/H,SAC3B,EAAKqG,YAAY,YAEjB,EAAKD,sB,EAEN,EAAKD,c,IAIJ,YAAA6B,oBAAR,WACsB3D,GAA8BznB,KAAK8oB,iBAGrC,WAChB9oB,KAAK8oB,kBAAoB,E,EAIrB,YAAAoB,eAAR,sBACElqB,KAAKqqB,cAAc,SAACtpB,EAAWyD,GAC7B,IAAMkiB,EAAcF,GAClB,EAAKyC,KAAKsB,QACV,EAAKtB,KAAK2B,UACV,EAAKzB,WAEDkC,EAAkB,EAAKpC,KAAKsB,QAAQO,aACxCpE,EACA3lB,EACAyD,GAEF,EAAKqkB,SAAWwC,EAChBA,EAAgBlP,aAAa/b,KAAK,SAAAgjB,GAChC,EAAKyF,cAAWvoB,EAChB,EAAKwjB,UAAYV,EACjB,EAAKqG,YAAY,U,EAChB,EAAKC,sB,IAIJ,YAAAU,eAAR,sBACEpqB,KAAKqqB,cAAc,SAACtpB,EAAWyD,GAC7B,IAAMkiB,E,SHnCVvC,EACA5S,EACAoS,EACAxB,EACAiB,GAEA,IAAMpG,EAAUzL,EAASmJ,sBACnBpW,EAAsC,CAC1C,yBAA0B,aAUtBgnB,EAPN,WAEE,IADA,IAAIC,EAAM,GACDrjB,EAAI,EAAGA,EAAI,EAAGA,IACrBqjB,GAAYhX,KAAKuL,SAASle,WAAW+Z,MAAM,GAE7C,OAAO4P,CACR,CACgBC,GACjBlnB,EAAQ,gBAAkB,+BAAiCgnB,EAC3D,IAAMG,EAAYvE,GAAmB3V,EAAU4Q,EAAMiB,GAE/CsI,EACJ,KACAJ,EADA,4DAFqB1G,GAAiB6G,EAAW9H,GAOjD,SACA2H,EANA,qBASAG,EAAuB,YACvB,WACIE,EAAe,SAAWL,EAAW,KACrCjnB,EAAOke,GAAQnB,QAAQsK,EAAavJ,EAAMwJ,GAChD,GAAa,OAATtnB,EACF,MAAMkR,KAER,IAAMiQ,EAAuB,CAAE5hB,KAAM6nB,EAAoB,UACnDpoB,EAAM0Z,GAAQC,EAASmH,EAAQngB,MAE/BgB,EAAUmf,EAAQ8D,mBAClBvB,EAAc,IAAIC,GACtBtjB,EAHa,OAKbuiB,GAAgBzB,EAASR,GACzB3e,GAMF,OAJA0hB,EAAYlB,UAAYA,EACxBkB,EAAYpiB,QAAUA,EACtBoiB,EAAYriB,KAAOA,EAAKwe,aACxB6D,EAAYjB,aAAeW,GAAmB7U,GACvCmV,CACT,CGnB0BkF,CAClB,EAAK3C,KAAKsB,QACV,EAAKtB,KAAK2B,UACV,EAAKzB,UACL,EAAKD,MACL,EAAKpF,WAED+H,EAAmB,EAAK5C,KAAKsB,QAAQO,aACzCpE,EACA3lB,EACAyD,GAEF,EAAKqkB,SAAWgD,EAChBA,EAAiB1P,aAAa/b,KAAK,SAAAgjB,GACjC,EAAKyF,cAAWvoB,EAChB,EAAKwjB,UAAYV,EACjB,EAAK2G,gBAAgB,EAAKb,MAAM1H,QAChC,EAAKiI,YAAY,U,EAChB,EAAKF,c,IAIJ,YAAAQ,gBAAR,SAAwB+B,GACtB,IAAMC,EAAM/rB,KAAKuoB,aACjBvoB,KAAKuoB,aAAeuD,EAKhB9rB,KAAKuoB,eAAiBwD,GACxB/rB,KAAKgsB,kB,EAID,YAAAvC,YAAR,SAAoB9Q,GAClB,GAAI3Y,KAAKspB,SAAW3Q,EAGpB,OAAQA,GACN,IAAK,YASL,IAAK,UAGH3Y,KAAKspB,OAAS3Q,OACQrY,IAAlBN,KAAK6oB,UACP7oB,KAAK6oB,SAASzM,SAEhB,MACF,IAAK,UAIH,IAAM6P,EAA4B,WAAhBjsB,KAAKspB,OACvBtpB,KAAKspB,OAAS3Q,EACVsT,IACFjsB,KAAKgsB,mBACLhsB,KAAK4pB,UAEP,MACF,IAAK,SAcL,IAAK,QAQL,IAAK,UAKH5pB,KAAKspB,OAAS3Q,EACd3Y,KAAKgsB,mBACL,MAvBF,IAAK,WAIHhsB,KAAK2oB,OAAS,KACd3oB,KAAKspB,OAAS3Q,EACd3Y,KAAKgsB,mB,EAsBH,YAAAxC,qBAAR,WACE,OAAQxpB,KAAKspB,QACX,IAAK,UACHtpB,KAAKypB,YAAY,UACjB,MACF,IAAK,YACHzpB,KAAKypB,YAAY,YACjB,MACF,IAAK,UACHzpB,KAAK4pB,S,EAWX,sBAAI,uBAAQ,C,IAAZ,WACE,IAAMsC,EAAgBxT,GAA+B1Y,KAAKspB,QAC1D,MAAO,CACL6C,iBAAkBnsB,KAAKuoB,aACvB6D,WAAYpsB,KAAKkpB,MAAM1H,OACvB7I,MAAOuT,EACP9I,SAAUpjB,KAAK8jB,UACfuI,KAAMrsB,KACNsoB,IAAKtoB,KAAKipB,K,kCAqBd,YAAAqD,GAAA,SACE/Z,EACA9D,EAGA9I,EACA4mB,GANF,WAQQnE,EAAW,IAAIoE,GAAS/d,EAAgB9I,EAAO4mB,GAErD,OADAvsB,KAAKysB,aAAarE,GACX,WACL,EAAKsE,gBAAgBtE,E,GAUzB,YAAAhoB,KAAA,SACEusB,EACAC,GAIA,OAAO5sB,KAAK2pB,SAASvpB,KACnBusB,EACAC,E,EAOJ,YAAA/Y,MAAA,SACE+Y,GAEA,OAAO5sB,KAAKI,KAAK,KAAMwsB,E,EAMjB,YAAAH,aAAR,SAAqBrE,GACnBpoB,KAAK0oB,WAAWvR,KAAKiR,GACrBpoB,KAAK6sB,gBAAgBzE,E,EAMf,YAAAsE,gBAAR,SAAwBtE,GACtB,IAAMlgB,EAAIlI,KAAK0oB,WAAWrR,QAAQ+Q,IACvB,IAAPlgB,GACFlI,KAAK0oB,WAAWoE,OAAO5kB,EAAG,E,EAItB,YAAA8jB,iBAAR,sBACEhsB,KAAK+sB,iBACa/sB,KAAK0oB,WAAW/M,QACxBiH,QAAQ,SAAAwF,GAChB,EAAKyE,gBAAgBzE,E,IAIjB,YAAA2E,eAAR,WACE,QAAsBzsB,IAAlBN,KAAK+oB,SAAwB,CAC/B,IAAIiE,GAAY,EAChB,OAAQtU,GAA+B1Y,KAAKspB,SAC1C,KAAKlR,GAAUG,QACb0U,GAASjtB,KAAK+oB,SAASmE,KAAK,KAAMltB,KAAKmtB,UAAvCF,GACA,MACF,KAAK7U,GAAUI,SACf,KAAKJ,GAAUK,MAEbwU,GADejtB,KAAKgpB,QACJkE,KAAK,KAAMltB,KAAK2oB,QAAhCsE,GACA,MACF,QACED,GAAY,EAGZA,IACFhtB,KAAK+oB,cAAWzoB,EAChBN,KAAKgpB,aAAU1oB,EAElB,C,EAGK,YAAAusB,gBAAR,SAAwBzE,GAEtB,OADsB1P,GAA+B1Y,KAAKspB,SAExD,KAAKlR,GAAUC,QACf,KAAKD,GAAUE,OACT8P,EAASjX,MACX8b,GAAS7E,EAASjX,KAAK+b,KAAK9E,EAAUpoB,KAAKmtB,UAA3CF,GAEF,MACF,KAAK7U,GAAUG,QACT6P,EAASvd,UACXoiB,GAAS7E,EAASvd,SAASqiB,KAAK9E,GAAhC6E,GAEF,MASF,QAEM7E,EAASziB,OACXsnB,GACE7E,EAASziB,MAAMunB,KAAK9E,EAAUpoB,KAAK2oB,QADrCsE,G,EAWR,YAAAG,OAAA,WACE,IAAMC,EACY,WAAhBrtB,KAAKspB,QACW,YAAhBtpB,KAAKspB,OAIP,OAHI+D,GACFrtB,KAAKypB,YAAY,WAEZ4D,C,EAOT,YAAAC,MAAA,WACE,IAAMD,EAAwB,YAAhBrtB,KAAKspB,OAInB,OAHI+D,GACFrtB,KAAKypB,YAAY,WAEZ4D,C,EAQT,YAAAjR,OAAA,WACE,IAAMiR,EACY,YAAhBrtB,KAAKspB,QACW,YAAhBtpB,KAAKspB,OAIP,OAHI+D,GACFrtB,KAAKypB,YAAY,aAEZ4D,C,EAEX,EAvkBA,GCNA,cAGE,WACUE,EACRhc,GADQ,KAAAgc,WAINvtB,KAAK4qB,UADHrZ,aAAoBuJ,GACLvJ,EAEAuJ,GAASC,YAAYxJ,EAAUgc,EAASvpB,KAE5D,CA4EH,OArEE,YAAApC,SAAA,WACE,MAAO,QAAU5B,KAAK4qB,UAAUvQ,OAAS,IAAMra,KAAK4qB,UAAUtQ,I,EAGtD,YAAAkT,QAAV,SACErJ,EACA5S,GAEA,OAAO,IAAIkc,EAAUtJ,EAAS5S,E,EAMhC,sBAAI,mBAAI,C,IAAR,WACE,IAAMA,EAAW,IAAIuJ,GAAS9a,KAAK4qB,UAAUvQ,OAAQ,IACrD,OAAOra,KAAKwtB,QAAQxtB,KAAKutB,SAAUhc,E,kCAMrC,sBAAI,qBAAM,C,IAAV,WACE,OAAOvR,KAAK4qB,UAAUvQ,M,kCAMxB,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOra,KAAK4qB,UAAUtQ,I,kCAOxB,sBAAI,mBAAI,C,IAAR,WACE,OAAO2I,GAAcjjB,KAAK4qB,UAAUtQ,K,kCAMtC,sBAAI,sBAAO,C,IAAX,WACE,OAAOta,KAAKutB,Q,kCAOd,sBAAI,qBAAM,C,IAAV,WACE,IAAMG,E,SRvGapT,GACrB,GAAoB,IAAhBA,EAAKxS,OACP,OAAO,KAET,IAAMqB,EAAQmR,EAAK4I,YAAY,KAC/B,OAAe,IAAX/Z,EACK,GAEOmR,EAAKqB,MAAM,EAAGxS,EAEhC,CQ6FoB,CAAOnJ,KAAK4qB,UAAUtQ,MACtC,GAAgB,OAAZoT,EACF,OAAO,KAET,IAAMnc,EAAW,IAAIuJ,GAAS9a,KAAK4qB,UAAUvQ,OAAQqT,GACrD,OAAO,IAAID,EAAUztB,KAAKutB,SAAUhc,E,kCAMtC,YAAAoc,aAAA,SAAa/pB,GACX,GAA4B,KAAxB5D,KAAK4qB,UAAUtQ,KACjB,MAAM5E,GAAqB9R,E,EAGjC,EAxFA,G,SAyLgBgqB,GAAQtF,GACtB,IAAMuF,EAA0B,CAC9B5I,SAAU,GACVC,MAAO,IAET,OAAO4I,GAAcxF,EAAKuF,GAAaztB,KAAK,WAAM,OAAAytB,CAAW,EAC/D,CAQA,SAAeC,GACbxF,EACAuF,EACA/G,G,wIAMiB,SAAMF,GAAK0B,EAJH,CAEvBxB,UAAS,K,cAELiH,EAAW,UACjB,EAAAF,EAAY5I,UAAS9N,KAAI,QAAI4W,EAAS9I,WACtC,EAAA4I,EAAY3I,OAAM/N,KAAI,QAAI4W,EAAS7I,OACL,MAA1B6I,EAAS5I,cAAT,MACF,GAAM2I,GAAcxF,EAAKuF,EAAaE,EAAS5I,gB,OAA/C,S,+BAEH,C,SAwBqByB,GACpB0B,EACAxkB,G,sIAoBQ,OAlBO,MAAXA,GACgC,kBAAvBA,EAAQijB,YACjBpK,GACE,qBACgB,EACA,IAChB7Y,EAAQijB,YAIRiH,EAAKlqB,GAAW,CAAC,EACjB4iB,EAAcuH,GAClB3F,EAAIiC,QACJjC,EAAIsC,UACY,IAChBoD,EAAGlH,UACHkH,EAAGjH,YAEG,GAAMuB,EAAIiC,QAAQ2D,sBAAsBxH,I,OAAhD,MAAO,CAAP,EAAQ,SAAsDvK,c,IAC/D,C,SA8BqBgS,GACpB7F,EACAlF,G,oIASQ,OAPRkF,EAAIqF,aAAa,kBACXjH,E,SJ3HNvC,EACA5S,EACA6R,EACAO,GAEA,IACMtgB,EAAM0Z,GADIxL,EAASiJ,gBACI2J,EAAQngB,MAE/BK,EAAOugB,GAAiBxB,EAAUO,GAElC3e,EAAUmf,EAAQsC,sBAClBC,EAAc,IAAIC,GACtBtjB,EALa,QAObuiB,GAAgBzB,EAASR,GACzB3e,GAKF,OAHA0hB,EAAYpiB,QARI,CAAE,eAAgB,mCASlCoiB,EAAYriB,KAAOA,EACnBqiB,EAAYjB,aAAea,GAAmB/U,GACvCmV,CACT,CIsGsB0H,CAClB9F,EAAIiC,QACJjC,EAAIsC,UACJxH,EACAM,MAEM,GAAM4E,EAAIiC,QAAQ2D,sBAAsBxH,I,OAAhD,MAAO,CAAP,EAAQ,SAAsDvK,c,IAC/D,C,SAQqBkS,GAAe/F,G,oIAO3B,OANRA,EAAIqF,aAAa,kBACXjH,E,SJ/JNvC,EACA5S,EACAoS,GAEA,IACMtgB,EAAM0Z,GADIxL,EAASiJ,gBACI2J,EAAQngB,MAE/BgB,EAAUmf,EAAQsC,sBAClBC,EAAc,IAAIC,GACtBtjB,EAHa,MAKb0iB,GAAmB5B,EAASR,GAC5B3e,GAGF,OADA0hB,EAAYjB,aAAea,GAAmB/U,GACvCmV,CACT,CI+IsB4H,CAClBhG,EAAIiC,QACJjC,EAAIsC,UACJlH,MAEM,GAAM4E,EAAIiC,QAAQ2D,sBAAsBxH,I,OAAhD,MAAO,CAAP,EAAQ,SACLvK,aACA/b,KAAK,SAAAiD,GACJ,GAAY,OAARA,EACF,MxBnIC,IAAI,GAAqB,kBAE9B,mDwBmIE,OAAOA,C,QAEZ,C,SAQqBkrB,GAAajG,G,oIAGzB,OAFRA,EAAIqF,aAAa,gBACXjH,E,SJ3INvC,EACA5S,GAEA,IACMlO,EAAM0Z,GADIxL,EAASiJ,gBACI2J,EAAQngB,MAE/BgB,EAAUmf,EAAQsC,sBAGlBC,EAAc,IAAIC,GAAYtjB,EAJrB,SAGf,SAAiBmrB,EAAkBC,GAAa,EACUzpB,GAG1D,OAFA0hB,EAAYrJ,aAAe,CAAC,IAAK,KACjCqJ,EAAYjB,aAAea,GAAmB/U,GACvCmV,CACT,CI8HsBgI,CAAqBpG,EAAIiC,QAASjC,EAAIsC,WAClD,GAAMtC,EAAIiC,QAAQ2D,sBAAsBxH,I,OAAhD,MAAO,CAAP,EAAQ,SAAsDvK,c,IAC/D,C,SAYewS,GAAUrG,EAAgBsG,GACxC,IAAMlB,E,SRlXcpT,EAAcsU,GAClC,IAAMC,EAAqBD,EACxB3I,MAAM,KACN6I,OAAO,SAAAC,GAAa,OAAAA,EAAUjnB,OAAS,CAAC,GACxCknB,KAAK,KACR,OAAoB,IAAhB1U,EAAKxS,OACA+mB,EAEAvU,EAAO,IAAMuU,CAExB,CQwWkBI,CAAM3G,EAAIsC,UAAUtQ,KAAMsU,GACpCrd,EAAW,IAAIuJ,GAASwN,EAAIsC,UAAUvQ,OAAQqT,GACpD,OAAO,IAAID,GAAUnF,EAAIiC,QAAShZ,EACpC,C,SC9WgB2d,GAAM5U,GACpB,MAAO,kBAAkB6U,KAAK7U,EAChC,CAaA,SAAS8U,GACP9G,EACAhO,GAEA,GAAIgO,aAAe,GAAqB,CACtC,IAAMnE,EAAUmE,EAChB,GAAuB,MAAnBnE,EAAQkL,QACV,MzB6JG,IAAI,GAAqB,oBAE9B,6CAEEta,GACA,yCyBhKF,IAAMsQ,EAAY,IAAIoI,GAAUtJ,EAASA,EAAQkL,SACjD,OAAY,MAAR/U,EACK8U,GAAY/J,EAAW/K,GAEvB+K,C,CAIT,YAAa/kB,IAATga,EACKqU,GAAUrG,EAAKhO,GAEfgO,CAGb,C,SAqBgBA,GACdgH,EACAC,GAEA,GAAIA,GAAaL,GAAMK,GAAY,CACjC,GAAID,aAAwB,GAC1B,OAzDG,IAAI7B,GAyDW6B,EAAcC,GAEhC,MAAM/Z,GACJ,2E,CAIJ,OAAO4Z,GAAYE,EAAcC,EAErC,CAEA,SAASC,GACPxrB,EACAyrB,GAEA,IAAM7U,EAAqB,OAAN6U,QAAM,IAANA,OAAM,EAANA,EAAS1a,IAC9B,OAAoB,MAAhB6F,EACK,KAEFE,GAASH,mBAAmBC,EAAc5W,EACnD,CAyBA,kBAgBE,WAIWwC,EACAkpB,EAIAC,EAIAC,EACAjsB,EACAksB,GAXA,KAAArpB,MACA,KAAAkpB,gBAIA,KAAAC,oBAIA,KAAAC,QACA,KAAAjsB,OACA,KAAAksB,mBA9BX,KAAAR,QAA2B,KAOnB,KAAAS,MAAgBhb,GACL,KAAAib,OAAwB,KAEnC,KAAAC,UAAoB,EAsB1BhwB,KAAKiwB,uB1BvJuC,K0BwJ5CjwB,KAAKkwB,oB1BjJoC,I0BkJzClwB,KAAKmwB,UAAY,IAAIC,IAEnBpwB,KAAKqvB,QADK,MAAR1rB,EACamX,GAASH,mBAAmBhX,EAAM3D,KAAK8vB,OAEvCN,GAAcxvB,KAAK8vB,MAAO9vB,KAAKwG,IAAI1C,QAErD,CA8IH,OA5IE,sBAAI,mBAAI,C,IAAR,WACE,OAAO9D,KAAK8vB,K,MAQd,SAAS9rB,GACPhE,KAAK8vB,MAAQ9rB,EACI,MAAbhE,KAAK2D,KACP3D,KAAKqvB,QAAUvU,GAASH,mBAAmB3a,KAAK2D,KAAMK,GAEtDhE,KAAKqvB,QAAUG,GAAcxrB,EAAMhE,KAAKwG,IAAI1C,Q,kCAOhD,sBAAI,iCAAkB,C,IAAtB,WACE,OAAO9D,KAAKkwB,mB,MAGd,SAAuBG,GACrB1T,GACE,OACe,EACClb,OAAO6uB,kBACvBD,GAEFrwB,KAAKkwB,oBAAsBG,C,kCAO7B,sBAAI,oCAAqB,C,IAAzB,WACE,OAAOrwB,KAAKiwB,sB,MAGd,SAA0BI,GACxB1T,GACE,OACe,EACClb,OAAO6uB,kBACvBD,GAEFrwB,KAAKiwB,uBAAyBI,C,kCAG1B,YAAA7F,cAAN,W,sIACE,OAAIxqB,KAAKuwB,mBACA,CAAP,EAAOvwB,KAAKuwB,qBAERzwB,EAAOE,KAAK0vB,cAAczvB,aAAa,CAAEC,UAAU,KAErC,GAAMJ,EAAKS,YAD3B,M,OAEF,GAAkB,QADZiwB,EAAY,UAEhB,MAAO,CAAP,EAAOA,EAAU/vB,a,iBAGrB,MAAO,CAAP,EAAO,M,MAGH,YAAAgqB,kBAAN,W,2IACQ3lB,EAAW9E,KAAK2vB,kBAAkB1vB,aAAa,CAAEC,UAAU,KAEhD,GAAM4E,EAASvE,YAD5B,M,OAMF,MAAO,CAAP,EALe,SAKDC,O,OAEhB,MAAO,CAAP,EAAO,M,MAMT,YAAAiwB,QAAA,WAME,OALKzwB,KAAKgwB,WACRhwB,KAAKgwB,UAAW,EAChBhwB,KAAKmwB,UAAUvN,QAAQ,SAAA8N,GAAW,OAAAA,EAAQtU,QAAQ,GAClDpc,KAAKmwB,UAAU/mB,SAEVpG,QAAQC,S,EAOjB,YAAAuhB,sBAAA,SAAsBpJ,GACpB,OAAO,IAAIqS,GAAUztB,KAAMob,E,EAO7B,YAAA0P,aAAA,SACEpE,EACA3lB,EACAyD,GAHF,WAKE,GAAKxE,KAAKgwB,SAiBR,OAAO,IAAIW,GAAYlb,MAhBvB,IAAM,E,SdZViR,EACA3b,EACAhK,EACAyD,EACAiZ,EACAmT,GAEA,IAAMxT,EAAYF,GAAgBwJ,EAAYlB,WACxCniB,EAAMqjB,EAAYrjB,IAAM+Z,EACxB9Y,EAAU9E,OAAOyT,OAAO,CAAC,EAAGyT,EAAYpiB,SAK9C,O,SA9B8BA,EAAkByG,GAC5CA,IACFzG,EAAQ,oBAAsByG,EAElC,CAsBE8lB,CAAgBvsB,EAASyG,G,SA1CzBzG,EACAvD,GAEkB,OAAdA,GAAsBA,EAAU+G,OAAS,IAC3CxD,EAAuB,cAAI,YAAcvD,EAE7C,CAqCE+vB,CAAexsB,EAASvD,G,SAlCxBuD,EACAssB,GAEAtsB,EAAQ,8BACN,UAA2B,OAAfssB,QAAe,IAAfA,IAAmB,aACnC,CA8BEG,CAAkBzsB,EAASssB,G,SArB3BtsB,EACAE,GAEsB,OAAlBA,IACFF,EAAQ,uBAAyBE,EAErC,CAgBEwsB,CAAmB1sB,EAASE,GACrB,IAAIysB,GACT5tB,EACAqjB,EAAYjiB,OACZH,EACAoiB,EAAYriB,KACZqiB,EAAYrJ,aACZqJ,EAAYpJ,qBACZoJ,EAAY/G,QACZ+G,EAAYjB,aACZiB,EAAY1hB,QACZ0hB,EAAYlJ,iBACZC,EAEJ,CcfsByT,CACdxK,EACA1mB,KAAK+vB,OACLhvB,EACAyD,EACAxE,KAAK4vB,MACL5vB,KAAK6vB,kBAQP,OANA7vB,KAAKmwB,UAAUgB,IAAI,GAEnB,EAAQhV,aAAa/b,KACnB,WAAM,SAAK+vB,UAAUptB,OAAO,EAAQ,EACpC,WAAM,SAAKotB,UAAUptB,OAAO,EAAQ,GAE/B,C,EAML,YAAAmrB,sBAAN,SACExH,G,wIAEmC,SAAM1jB,QAAQsnB,IAAI,CACnDtqB,KAAKwqB,gBACLxqB,KAAKyqB,uB,OAGP,OALM,EAA6B,SAA5B1pB,EAAS,KAAEyD,EAAa,KAKxB,CAAP,EAAOxE,KAAK8qB,aAAapE,EAAa3lB,EAAWyD,I,MAErD,EAvLA,G,SCjCgB4sB,GACd9I,EACA9mB,EACA4hB,GAGA,O,SF8DAkF,EACA9mB,EACA4hB,GAGA,OADAkF,EAAIqF,aAAa,wBACV,IAAI0D,GAAW/I,EAAK,IAAI/F,GAAQ/gB,GAAO4hB,EAChD,CEpESkO,CADPhJ,EAAM,6BAAmBA,GAGvB9mB,EACA4hB,EAEJ,C,SASgBoD,GAAY8B,GAE1B,O,SFuLgCA,G,oIAOxB,OANRA,EAAIqF,aAAa,eACXjH,EAAc6K,GAClBjJ,EAAIiC,QACJjC,EAAIsC,UACJlH,MAEM,GAAM4E,EAAIiC,QAAQ2D,sBAAsBxH,I,OAAhD,MAAO,CAAP,EAAQ,SAAsDvK,c,IAC/D,CE/LQqV,CADPlJ,EAAM,6BAAmBA,GAE3B,C,SAsHgB,GACdgH,EACAC,GAGA,OAAOkC,GADPnC,EAAe,6BAAmBA,GAGhCC,EAEJ,C,SA2CgBmC,GACdnH,EACAvmB,EACAC,EACAH,QAAA,IAAAA,MAAA,I,SD1LAymB,EACAvmB,EACAC,EACAH,QAAA,IAAAA,MAAA,IAIAymB,EAAQvmB,KAAO,UAAUA,EAAI,IAAIC,EACzB,IAAA0tB,EAAkB7tB,EAAO,cAC7B6tB,IACFpH,EAAQgG,mBACmB,kBAAlBoB,EACHA,EACA,8BAAoBA,EAAepH,EAAQ/jB,IAAI1C,QAAQD,WAEjE,CC+KE+tB,CAAwBrH,EAAgCvmB,EAAMC,EAAMH,EACtE,CC3SA,kBAEE,WACW+tB,EACAxF,EACA/D,GAFA,KAAAuJ,YACA,KAAAxF,OACA,KAAA/D,KACP,CAcN,OAZE,sBAAI,+BAAgB,C,IAApB,WACE,OAAOtoB,KAAK6xB,UAAU1F,gB,kCAExB,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOnsB,KAAK6xB,UAAUzO,Q,kCAExB,sBAAI,oBAAK,C,IAAT,WACE,OAAOpjB,KAAK6xB,UAAUlZ,K,kCAExB,sBAAI,yBAAU,C,IAAd,WACE,OAAO3Y,KAAK6xB,UAAUzF,U,kCAE1B,EApBA,GCMA,cACE,WACWyF,EACQ5I,GADR,KAAA4I,YACQ,KAAA5I,OAWnB,KAAA7M,OAASpc,KAAK6xB,UAAUzV,OAAO8Q,KAAKltB,KAAK6xB,WACzC,KAAAhe,MAAQ7T,KAAK6xB,UAAUhe,MAAMqZ,KAAKltB,KAAK6xB,WACvC,KAAAvE,MAAQttB,KAAK6xB,UAAUvE,MAAMJ,KAAKltB,KAAK6xB,WACvC,KAAAzE,OAASptB,KAAK6xB,UAAUzE,OAAOF,KAAKltB,KAAK6xB,UAbrC,CAmEN,OAjEE,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO,IAAIC,GACT9xB,KAAK6xB,UAAU1E,SACfntB,KACAA,KAAKipB,K,kCAST,YAAA7oB,KAAA,SACEusB,EACAC,GAFF,WAIE,OAAO5sB,KAAK6xB,UAAUzxB,KAAK,SAAA+sB,GACzB,GAAIR,EACF,OAAOA,EACL,IAAImF,GAAyB3E,EAAU,EAAM,EAAKlE,M,EAGrD2D,E,EAGL,YAAAN,GAAA,SACE/Z,EACA9D,EAIA9I,EACA4mB,GAPF,WASMwF,OAGuCzxB,EAoB3C,OAnBMmO,IAEFsjB,EAD4B,oBAAnBtjB,EACe,SAACujB,GACvB,OAAAvjB,EACE,IAAIqjB,GAAyBE,EAAc,EAAM,EAAK/I,M,EAGlC,CACtB9X,KAAQ1C,EAAe0C,KACnB,SAAC6gB,GACC,OAAAvjB,EAAe0C,KACb,IAAI2gB,GAAyBE,EAAc,EAAM,EAAK/I,M,OAE1D3oB,EACJuK,SAAU4D,EAAe5D,eAAYvK,EACrCqF,MAAO8I,EAAe9I,YAASrF,IAI9BN,KAAK6xB,UAAUvF,GACpB/Z,EACAwf,EACApsB,QAASrF,EACTisB,QAAajsB,E,EAGnB,EAvEA,GCPA,cACE,WACWuxB,EACQtE,GADR,KAAAsE,YACQ,KAAAtE,UACf,CAeN,OAbE,sBAAI,uBAAQ,C,IAAZ,sBACE,OAAOvtB,KAAK6xB,UAAU5M,SAAS/iB,IAC7B,SAAAomB,GAAO,WAAI,GAAgBA,EAAK,EAAKiF,SAAS,E,kCAGlD,sBAAI,oBAAK,C,IAAT,sBACE,OAAOvtB,KAAK6xB,UAAU3M,MAAMhjB,IAC1B,SAAAomB,GAAO,WAAI,GAAgBA,EAAK,EAAKiF,SAAS,E,kCAGlD,sBAAI,4BAAa,C,IAAjB,WACE,OAAOvtB,KAAK6xB,UAAU1M,eAAiB,I,kCAE3C,EAnBA,GCsBA,cAGE,WACW0M,EACFtH,GADE,KAAAsH,YACF,KAAAtH,SACL,CA0LN,OAxLE,sBAAI,mBAAI,C,IAAR,WACE,OAAOvqB,KAAK6xB,UAAUjuB,I,kCAGxB,sBAAI,qBAAM,C,IAAV,WACE,OAAO5D,KAAK6xB,UAAUxX,M,kCAGxB,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOra,KAAK6xB,UAAU9N,Q,kCAGxB,YAAAniB,SAAA,WACE,OAAO5B,KAAK6xB,UAAUjwB,U,EAQxB,YAAAqtB,MAAA,SAAML,GACJ,IAAMvJ,E,SJyMgBiD,EAAuBsG,GAC/C,OAAOqD,GAAkB3J,EAAkBsG,EAC7C,CI3MsBD,CAAU3uB,KAAK6xB,UAAWjD,GAC5C,OAAO,IAAIsD,EAAgB7M,EAAWrlB,KAAKuqB,Q,EAG7C,sBAAI,mBAAI,C,IAAR,WACE,OAAO,IAAI2H,EAAgBlyB,KAAK6xB,UAAUM,KAAMnyB,KAAKuqB,Q,kCAOvD,sBAAI,qBAAM,C,IAAV,WACE,IAAMlF,EAAYrlB,KAAK6xB,UAAUO,OACjC,OAAiB,MAAb/M,EACK,KAEF,IAAI6M,EAAgB7M,EAAWrlB,KAAKuqB,Q,kCAS7C,YAAA3f,IAAA,SACEpJ,EACA4hB,GAGA,OADApjB,KAAK2tB,aAAa,OACX,IAAI0E,GACTjB,GAAqBpxB,KAAK6xB,UAAWrwB,EAAM4hB,GAC3CpjB,K,EAWJ,YAAAsyB,UAAA,SACEhwB,EACAsT,EACAwN,QADA,IAAAxN,MAAuBE,GAAaC,KAGpC/V,KAAK2tB,aAAa,aAClB,IAAMnsB,EAAO4U,GAAeR,EAAQtT,GAC9B6kB,EAAgB,sBAAK/D,GAI3B,OAHoC,MAAhC+D,EAA2B,aAAiC,MAApB3lB,EAAK2U,cAC/CgR,EAA2B,YAAI3lB,EAAK2U,aAE/B,IAAIkc,GACT,IAAIE,GACFvyB,KAAK6xB,UACL,IAAIW,GAAShxB,EAAKA,MAAM,GACxB2lB,GAEFnnB,K,EAqBJ,YAAA4tB,QAAA,eJ0DsBtF,EI1DtB,OACE,OJyDoBA,EIzDLtoB,KAAK6xB,UJ2DfY,GADPnK,EAAM,6BAAmBA,KI1DQloB,KAC7B,SAAAsyB,GAAK,WAAIC,GAAiBD,EAAG,EAAKnI,QAAQ,E,EAuB9C,YAAA3D,KAAA,SAAK9iB,GAAL,WACE,O,SJMFwkB,EACAxkB,GAGA,OAAO8uB,GADPtK,EAAM,6BAAmBA,GACaxkB,EACxC,CIXW8iB,CAAK5mB,KAAK6xB,UAAW/tB,QAAWxD,GAAWF,KAChD,SAAAsyB,GAAK,WAAIC,GAAiBD,EAAG,EAAKnI,QAAQ,E,EAS9C,YAAA/D,YAAA,WACE,OAAOA,GAAYxmB,KAAK6xB,U,EAY1B,YAAA1D,eAAA,SACE/K,GAEA,O,SJrDFkF,EACAlF,GAGA,OAAOyP,GADPvK,EAAM,6BAAmBA,GAGvBlF,EAEJ,CI6CW+K,CACLnuB,KAAK6xB,UACLzO,E,EAQJ,YAAAiL,eAAA,WACE,OJO2B/F,EIPLtoB,KAAK6xB,UJStBiB,GADPxK,EAAM,6BAAmBA,I,IADIA,C,EIA7B,YAAAvlB,OAAA,WAEE,OADA/C,KAAK2tB,aAAa,UJUOrF,EITLtoB,KAAK6xB,UJWpBkB,GADPzK,EAAM,6BAAmBA,I,IADEA,C,EINnB,YAAAqF,aAAR,SAAqB/pB,GACnB,GAAsD,KAAjD5D,KAAK6xB,UAAyBjH,UAAUtQ,KAC3C,MAAM5E,GAAqB9R,E,EAGjC,EAhMA,GCTA,cAGE,WAAmB4C,EAA2BqrB,GAA3B,KAAArrB,MAA2B,KAAAqrB,WAA8B,CA4D9E,OA1DE,sBAAI,oCAAqB,C,IAAzB,WACE,OAAO7xB,KAAK6xB,UAAUpL,qB,kCAGxB,sBAAI,iCAAkB,C,IAAtB,WACE,OAAOzmB,KAAK6xB,UAAU5J,kB,kCAOxB,YAAAK,IAAA,SAAIhO,GACF,GAAI4U,GAAM5U,GACR,MAAM9E,GACJ,sEAGJ,OAAO,IAAI,GAAgB,GAAIxV,KAAK6xB,UAAWvX,GAAOta,K,EAOxD,YAAAgzB,WAAA,SAAW3vB,GACT,IAAK6rB,GAAM7rB,GACT,MAAMmS,GACJ,6EAGJ,IACEyd,GAAUlY,YAAY1X,EAAMrD,KAAK6xB,UAAkC7tB,K,CACnE,MAAON,GACP,MAAM8R,GACJ,iEAEH,CACD,OAAO,IAAI,GAAgB,GAAIxV,KAAK6xB,UAAWxuB,GAAMrD,K,EAGvD,YAAAkzB,sBAAA,SAAsB7C,GACpBrwB,KAAK6xB,UAAU5J,mBAAqBoI,C,EAGtC,YAAA8C,yBAAA,SAAyB9C,GACvBrwB,KAAK6xB,UAAUpL,sBAAwB4J,C,EAGzC,YAAAtsB,YAAA,SACEC,EACAC,EACAH,QAAA,IAAAA,MAAA,IAIA4tB,GAAuB1xB,KAAK6xB,UAAW7tB,EAAMC,EAAMH,E,EAEvD,EA/DA,GhDQA,SAAS,GACP,EACA,G,IAAsB,EAAG,qBAInB,EAAM,EAAU,YAAY,OAAO,eACnC,EAAe,EAAU,YAAY,iBACrC,EAAmB,EAAU,YAAY,sBAe/C,OAXmD,IAAI,GACrD,EACA,IAAI,GACF,EACA,EACA,EACA,IAAI,GACJ,EACA,UAAS,aAIf,E,SAEgC,GAC9B,IAAM,EAAmB,CAEvB,UAAS,GACT,UAAS,GACT,aAAY,GACZ,QAAS,GACT,UAAW,IAEb,EAAS,SAAS,kBAChB,IAAI,YAtCa,UAsCW,GAAO,UAChC,gBAAgB,GAChB,sBAAqB,IAG1B,EAAS,gB,4BACX,CAEA,CAAgB,W,OiD3DZsvB,GACAC,G,YCVS,GAAc,GAMd,GAAuB,wBAEvB,GAA6B,OAI7B,GAAsC,OAEtC,GAAiC,OAEjC,GAA2B,+BAE3B,GACX,qCAGW,GAAe,cCHtBC,KAAqB,OACzB,iBAAkC,yCAClC,oBAAkC,qCAClC,kCACE,mDACF,iCACE,kDACF,gBAAuB,2BACvB,gBAAuB,2BACvB,oBAA2B,+BAC3B,iBAAwB,4BACxB,qBAA4B,sCAC5B,qBACE,4EACF,yBAAuB,wBACvB,6BACE,8CACF,8BACE,gDACF,iCACE,oDACF,kCACE,uE,IAaS,GAAgB,IAAI,eDjCV,cCmCrBC,GACAD,ICxDWE,GAAgB,IAAI,SAAOD,IACxCC,GAAcC,SAAW,WAASC,KHsBlC,IIrBIC,GJqBJ,cAWE,WAAqBC,GACnB,GADmB,KAAAA,UACdA,EACH,MAAM,GAActoB,OAAO,aAE7BtL,KAAK6zB,YAAcD,EAAOC,YAC1B7zB,KAAK8zB,oBAAsBF,EAAOE,oBAClC9zB,KAAK+zB,eAAiBH,EAAOriB,SAC7BvR,KAAK6S,UAAY+gB,EAAO/gB,UACxB7S,KAAKg0B,SAAWJ,EAAOI,SACnBh0B,KAAK6S,WAAa7S,KAAK6S,UAAUohB,gBAGnCj0B,KAAKk0B,aAAeN,EAAOM,cAEzBN,EAAOO,aAAeP,EAAOO,YAAYC,oBAC3Cp0B,KAAKo0B,kBAAoBR,EAAOO,YAAYC,kBAE/C,CAuFH,OArFE,YAAAC,OAAA,WAEE,OAAOr0B,KAAK+zB,eAAetiB,KAAKwU,MAAM,KAAK,E,EAG7C,YAAAqO,KAAA,SAAK1wB,GACE5D,KAAK6zB,aAAgB7zB,KAAK6zB,YAAYS,MAG3Ct0B,KAAK6zB,YAAYS,KAAK1wB,E,EAGxB,YAAA2wB,QAAA,SAAQC,EAAqBC,EAAeC,GACrC10B,KAAK6zB,aAAgB7zB,KAAK6zB,YAAYU,SAG3Cv0B,KAAK6zB,YAAYU,QAAQC,EAAaC,EAAOC,E,EAG/C,YAAAC,iBAAA,SAAiBpiB,GACf,OAAKvS,KAAK6zB,aAAgB7zB,KAAK6zB,YAAYc,iBAGpC30B,KAAK6zB,YAAYc,iBAAiBpiB,GAFhC,E,EAKX,YAAAqiB,iBAAA,SAAiBhxB,GACf,OAAK5D,KAAK6zB,aAAgB7zB,KAAK6zB,YAAYe,iBAGpC50B,KAAK6zB,YAAYe,iBAAiBhxB,GAFhC,E,EAKX,YAAAixB,cAAA,WAEE,OACE70B,KAAK6zB,cACJ7zB,KAAK6zB,YAAYiB,YAAc90B,KAAK6zB,YAAYkB,OAAOC,gB,EAI5D,YAAAC,sBAAA,WACE,OACG7pB,OACApI,SACAhD,KAAK6S,WACL7S,KAAK6S,UAAUohB,gBAQb,mCACHT,GAAc0B,KAAK,mDACZ,IARP1B,GAAc0B,KACZ,2GAEK,E,EAUX,YAAAC,cAAA,SACEC,EACA7mB,GAEA,GAAKvO,KAAK8zB,oBAAV,CAGA,IAAM1L,EAAW,IAAIpoB,KAAK8zB,oBAAoB,SAAAlN,GAC5C,IAAoB,UAAAA,EAAKyO,aAAL,eAAmB,CAAlC,IAAMC,EAAK,KAEd/mB,EAAS+mB,EACV,C,GAIHlN,EAASmN,QAAQ,CAAEC,WAAY,CAACJ,IAT/B,C,EAYI,EAAAK,YAAP,WAIE,YAHoBn1B,IAAhB8yB,KACFA,GAAc,IAAIsC,EAAIrC,KAEjBD,E,EAEX,EAnHA,G,SKxBgBuC,GAAaC,EAAeC,GAC1C,IAAMC,EAAWF,EAAM9tB,OAAS+tB,EAAM/tB,OACtC,GAAIguB,EAAW,GAAKA,EAAW,EAC7B,MAAM,GAAcxqB,OAAO,+BAI7B,IADA,IAAMyqB,EAAc,GACX7tB,EAAI,EAAGA,EAAI0tB,EAAM9tB,OAAQI,IAChC6tB,EAAY5e,KAAKye,EAAMla,OAAOxT,IAC1B2tB,EAAM/tB,OAASI,GACjB6tB,EAAY5e,KAAK0e,EAAMna,OAAOxT,IAIlC,OAAO6tB,EAAY/G,KAAK,GAC1B,CDVA,IENIgH,GCSQC,GHHZ,2BAEE,KAAAC,wBAAyB,EAGzB,KAAAC,uBAAwB,EAGxB,KAAAC,gBAAiB,EAEjB,KAAAC,mBAAqB,EACrB,KAAAC,4BAA8B,EAG9B,KAAAC,eACE,oEAGF,KAAAC,uBAAyBb,GACvB,mCACA,mCAGF,KAAAc,aAAed,GAAa,uBAAwB,uBAGpD,KAAAe,UAAY,IAGZ,KAAAC,uBAAwB,EACxB,KAAAC,yBAA0B,EAG1B,KAAAC,iBAAmB,EAiDpB,CAAD,OA3CE,YAAAC,SAAA,WACE,IAAM/rB,EACJ/K,KAAK+2B,qBACL/2B,KAAK+2B,oBAAoBjzB,SACzB9D,KAAK+2B,oBAAoBjzB,QAAQiH,MACnC,IAAKA,EACH,MAAM,GAAcO,OAAO,aAE7B,OAAOP,C,EAGT,YAAAisB,aAAA,WACE,IAAMnzB,EACJ7D,KAAK+2B,qBACL/2B,KAAK+2B,oBAAoBjzB,SACzB9D,KAAK+2B,oBAAoBjzB,QAAQD,UACnC,IAAKA,EACH,MAAM,GAAcyH,OAAO,iBAE7B,OAAOzH,C,EAGT,YAAAozB,UAAA,WACE,IAAMjrB,EACJhM,KAAK+2B,qBACL/2B,KAAK+2B,oBAAoBjzB,SACzB9D,KAAK+2B,oBAAoBjzB,QAAQkI,OACnC,IAAKA,EACH,MAAM,GAAcV,OAAO,cAE7B,OAAOU,C,EAGT,YAAAkrB,sBAAA,WACE,OAAOl3B,KAAKw2B,uBAAuBW,OAAO,QAASn3B,KAAKy2B,a,EAGnD,EAAAhB,YAAP,WAIE,YAHgCn1B,IAA5BqzB,KACFA,GAA0B,IAAIyD,GAEzBzD,E,EAEX,EAlFA,G,SEOgB0D,KACd,OAAOrB,EACT,ECNA,SAAYC,GACV,yBACA,yBACA,sBACD,CAJD,CAAYA,QAAe,KA2B3B,IAAMqB,GAA8B,CAAC,YAAa,UAAW,OACvDC,GAAyB,IAAIrc,OAAO,kB,SAI1Bsc,KACd,IAAM3kB,EAAY,GAAI4iB,cAAc5iB,UACpC,MAAI,kBAAmBA,EACjBA,EAAUC,cAAc2kB,WACnB,EAEA,EAGF,CAEX,C,SAEgBC,KAGd,OAFiB,GAAIjC,cAAczB,SACFtkB,iBAE/B,IAAK,UACH,OAAOumB,GAAgB0B,QACzB,IAAK,SACH,OAAO1B,GAAgB2B,OACzB,QACE,OAAO3B,GAAgB33B,QAE7B,C,SAEgBu5B,KACd,IACMC,EADY,GAAIrC,cAAc5iB,UAC+BiM,WAGnE,OADEgZ,GAAuBA,EAAoBC,eAE3C,IAAK,UACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAEb,CCzEA,IAAMC,GAA4B,QAa5BC,IACY,EAqBZC,GAAkB,8B,SAERC,GAAUnC,GACxB,IAAMvG,EAeR,WACE,IAAMyE,EAAe,GAAIuB,cAAcvB,aACvC,IAAKA,EACH,OAEF,IAAMkE,EAAelE,EAAamE,QAAQC,IAC1C,IAAKF,IA0IcG,EA1IeH,IA2I3B32B,OAAO82B,GAAUz2B,KAAK4H,QA1I3B,OAyIJ,IAAqB6uB,EAtInB,IAAMC,EAAoBtE,EAAamE,QAAQI,IAC/C,IAAKD,EACH,OAEF,IAEE,OAD6C9zB,KAAKse,MAAMwV,E,CAExD,SACA,MACD,CACH,CAnCiBE,GACf,OAAIjJ,GACFkJ,GAAclJ,GACPzsB,QAAQC,WAqDnB,SACE+yB,GAGA,O,WF3FA,IAAM4C,EAAmBxB,GAAgB3B,cAAcoD,qBAAqBt4B,WAK5E,OAHAq4B,EAAiBx4B,KAAK,SAAC04B,G,GAGhBF,CACT,CEqFSG,GACJ34B,KAAK,SAAAW,GACJ,IACMi4B,EAAiB,2DADL5B,GAAgB3B,cAAcuB,eAC2C,kCAAkCI,GAAgB3B,cAAcwB,YACrJvG,EAAU,IAAIuI,QAAQD,EAAgB,CAC1Cv0B,OAAQ,OACRH,QAAS,CAAE40B,cAAkBhB,GAAe,IAAIn3B,GAEhDsD,KAAMK,KAAKC,UAAU,CACnBw0B,gBAAiBnD,EACjBoD,sBAAuBr4B,EACvBs4B,OAAQjC,GAAgB3B,cAAcqB,WACtCwC,YAAaC,GACbC,YAAaxB,OAIjB,OAAO5sB,MAAMslB,GAAStwB,KAAK,SAAAwE,GACzB,GAAIA,EAAS60B,GACX,OAAO70B,EAASvC,OAGlB,MAAM,GAAciJ,OAAO,qB,KAG9BuI,MAAM,WACL2f,GAAc0B,KAAKwE,G,EAGzB,CAnFSC,CAAgB3D,GACpB51B,KAAKu4B,IACLv4B,KACC,SAAAqvB,GAAU,OA4BhB,SAAqBA,GACnB,IAAMyE,EAAe,GAAIuB,cAAcvB,aACvC,IAAKzE,IAAWyE,EACd,OAGFA,EAAa0F,QAAQnB,GAA0B/zB,KAAKC,UAAU8qB,IAC9DyE,EAAa0F,QACXtB,GACA/wB,OACEzF,KAAK4H,MAC8C,GAAjD0tB,GAAgB3B,cAAcoB,iBAAwB,GAAK,KAGnE,CA1CgBgD,CAAYpK,EAAO,EAE7B,aAEN,CAwCA,IAAMiK,GACJ,mDA0CF,SAASf,GACPlJ,GAEA,IAAKA,EACH,OAAOA,EAET,IAAMkE,EAA0ByD,GAAgB3B,cAC1CqE,EAAUrK,EAAOqK,SAAW,CAAC,EAqDnC,YApD4Bx5B,IAAxBw5B,EAAQC,YAGVpG,EAAwByC,eACU,SAAhC7uB,OAAOuyB,EAAQC,aAIjBpG,EAAwByC,eAAiB6B,GAEvC6B,EAAQE,iBACVrG,EAAwB+C,UAAYj1B,OAAOq4B,EAAQE,iBAKjDF,EAAQG,uBACVtG,EAAwB4C,eAAiBuD,EAAQG,sBAM/CH,EAAQI,wBACVvG,EAAwB8C,aAAeqD,EAAQI,4BAKI55B,IAAjDw5B,EAAQK,uCACVxG,EAAwB2C,4BAA8B70B,OACpDq4B,EAAQK,4CAM+B75B,IAAvCw5B,EAAQM,6BACVzG,EAAwB0C,mBAAqB50B,OAC3Cq4B,EAAQM,6BAOZzG,EAAwBgD,sBAAwB0D,GAC9C1G,EAAwB0C,oBAE1B1C,EAAwBiD,wBAA0ByD,GAChD1G,EAAwB2C,6BAEnB7G,CACT,CAMA,SAAS4K,GAAuBC,GAC9B,OAAO/lB,KAAKuL,UAAYwa,CAC1B,CC7MA,IAEIC,GAFAC,GAAuB,E,SAIXC,KAKd,OAJAD,GAAuB,EAEvBD,GAAwBA,IAuB1B,WACE,IAAMvG,EAAW,GAAIyB,cAAczB,SACnC,OAAO,IAAIhxB,QAAQ,SAAAC,GACjB,GAAI+wB,GAAoC,aAAxBA,EAAS0G,WAA2B,CAClD,IAAM,EAAU,WACc,aAAxB1G,EAAS0G,aACX1G,EAAS9Z,oBAAoB,mBAAoB,GACjDjX,I,EAGJ+wB,EAAS/lB,iBAAiB,mBAAoB,E,MAE9ChL,G,EAGN,CA5BS03B,GACJv6B,KAAK,WAAM,O,WHvBd,IAAMw6B,EAAaxD,GAAgB3B,cAAcoD,qBAAqBgC,QAKtE,OAHAD,EAAWx6B,KAAK,SAAC06B,GACf9E,GAAM8E,C,GAEDF,CACT,CGiBgBG,EAAe,GAC1B36B,KAAK,SAAA41B,GAAO,OAAAmC,GAAUnC,EAAI,GAC1B51B,KACC,WAAM,OAAA46B,IAA4B,EAClC,WAAM,OAAAA,IAA4B,EAZxC,CAqCA,SAASA,KACPR,GAAuB,CACzB,CCvDA,ICkEI,GDlEES,GAA2B,IAK7BC,GAF4B,EAiC5BC,GAAsB,GAEtBC,IAA4B,EAiBhC,SAASC,GAAaC,GACpBh2B,WAAW,WAET,GAAuB,IAAnB41B,GAKJ,OAAKC,GAAMrzB,YAQf,WAIE,IAAMyzB,EAASJ,GAAMrO,OAAO,EAvEM,KA2E5B0O,EAAmBD,EAAOr5B,IAAI,SAAAu5B,GAAO,MAAC,CAC1CC,6BAA8BD,EAAIn8B,QAClCq8B,cAAep0B,OAAOk0B,EAAIG,WAC3B,IAuBH,SACEp6B,EACA+5B,GAEA,OAiCF,SAA0B/5B,GACxB,IAAMq6B,EAAqBzE,GAAgB3B,cAAcyB,wBACzD,OAAO9rB,MAAMywB,EAAoB,CAC/Bp3B,OAAQ,OACRJ,KAAMK,KAAKC,UAAUnD,IAEzB,CAvCSs6B,CAAiBt6B,GACrBpB,KAAK,SAAA27B,GAIJ,OAHKA,EAAItC,IACPjG,GAAc0B,KAAK,oCAEd6G,EAAI15B,M,GAEZjC,KAAK,SAAA27B,GAEJ,IAAMC,EAAgBv6B,OAAOs6B,EAAIE,uBAC7BC,EAAgBjB,GACf14B,MAAMy5B,KACTE,EAAgB3nB,KAAK4nB,IAAIH,EAAeE,IAK1C,IAAME,EAA2CL,EAAIK,mBAEnDp6B,MAAMC,QAAQm6B,IACdA,EAAmBt0B,OAAS,GACa,wBAAzCs0B,EAAmB,GAAGC,iBAEtBlB,GAAQ,OAAH,gBAAG,CAAH,2BAAOI,GAAWJ,IACvB3H,GAAc0B,KAAK,mCAGrBgG,GArI0B,EAuI1BG,GAAaa,E,EAEnB,EA7CEI,CAXsC,CACpCC,gBAAiBh1B,OAAOzF,KAAK4H,OAC7B8yB,YAAa,CACXC,YAAa,EACbC,eAAgB,CAAC,GAEnBC,WAAYvF,GAAgB3B,cAAciB,UAC1C8E,UAAS,GAIUD,GAAQ1nB,MAAM,WAGjCsnB,GAAQ,OAAH,gBAAG,CAAH,2BAAOI,GAAWJ,IACvBD,KACA1H,GAAc0B,KAAK,eAAegG,GAAc,KAChDG,GAAaJ,G,EAEjB,CApCI2B,GAHSvB,GAAaJ,G,EAIrBK,EACL,C,SA0FgBuB,GAEdj6B,GAEA,OAAO,W,IAAC,uDAbV,SAAoB64B,GAClB,IAAKA,EAAIG,YAAcH,EAAIn8B,QACzB,MAAM,GAAcgM,OAAO,kBAG7B6vB,GAAQ,OAAH,gBAAG,CAAH,2BAAOA,IAAK,CAAEM,GACrB,CASIqB,CAAW,CACTx9B,QAFcsD,EAAU,aAAI6c,GAG5Bmc,UAAW95B,KAAK4H,O,CAGtB,CCnGA,SAASqzB,GACP3Y,EACA4Y,GAEK,KACH,GAASH,GAAiBj6B,KAE5B,GAAOwhB,EAAU4Y,EACnB,C,SAEgBC,GAASC,GACvB,IAAMC,EAAkB/F,GAAgB3B,eAEnC0H,EAAgBjH,wBAA0BgH,EAAME,SAIhDD,EAAgBhH,uBAA0B+G,EAAME,SAIhD,GAAI3H,cAAcR,0BAKnBiI,EAAME,QAAU1F,OAAyBzB,GAAgB0B,UF9E7B,IAAzB6C,GEmFL6C,GAAaH,GAKbzC,KAA2Br6B,KACzB,WAAM,OAAAi9B,GAAaH,EAAM,EACzB,WAAM,OAAAG,GAAaH,EAAM,IAG/B,CAEA,SAASG,GAAaH,GACpB,GAAK7F,KAAL,CAIA,IAAM8F,EAAkB/F,GAAgB3B,cAErC0H,EAAgB/G,gBAChB+G,EAAgBxG,uBAKnBrxB,WAAW,WAAM,OAAAy3B,GAAQG,EAAO,EAAmB,EAAE,EAVpD,CAWH,CAkCA,SAASt6B,GACPwhB,EACA4Y,GAEA,OAAqB,IAAjBA,EAMN,SAAiCM,GAC/B,IAAMC,EAA6C,CACjDl6B,IAAKi6B,EAAej6B,IACpBm6B,YAAaF,EAAeG,YAAc,EAC1CC,mBAAoB,IACpBC,uBAAwBL,EAAeM,qBACvCC,qBAAsBP,EAAeQ,YACrCC,8BAA+BT,EAAeU,0BAC9CC,8BAA+BX,EAAeY,2BAE1CC,EAA6B,CACjCC,iBAAkBC,KAClBC,uBAAwBf,GAE1B,OAAO74B,KAAKC,UAAUw5B,EACxB,CApBWI,CAAwBna,GAsBnC,SAAwB8Y,GACtB,IAAMsB,EAA2B,CAC/B56B,KAAMs5B,EAAMt5B,KACZ66B,QAASvB,EAAME,OACfS,qBAAsBX,EAAMY,YAC5BY,YAAaxB,EAAMyB,YAGsB,IAAvCn/B,OAAOo/B,KAAK1B,EAAM2B,UAAU/2B,SAC9B02B,EAAYK,SAAW3B,EAAM2B,UAE/B,IAAMC,EAAmB5B,EAAM6B,gBACc,IAAzCv/B,OAAOo/B,KAAKE,GAAkBh3B,SAChC02B,EAAYQ,kBAAoBF,GAGlC,IAAMX,EAA2B,CAC/BC,iBAAkBC,KAClBY,aAAcT,GAEhB,OAAO95B,KAAKC,UAAUw5B,EACxB,CAzCSe,CAAe9a,EACxB,CA0CA,SAASia,KACP,MAAO,CACLc,cAAe/H,GAAgB3B,cAAcqB,WAC7CqC,gBAAiB9B,KACjB+H,aAAc,CACZ5F,YAAaD,GACb8F,SAAU,GAAI5J,cAAcpB,SAC5BiL,sBAAuB9H,KACvB+H,iBAAkB7H,KAClB8H,0BAA2B3H,MAE7B4H,0BAA2B,EAE/B,CC7NA,IAEMC,GAAa,CXEqB,MWAtCC,GACAC,ICeF,kBAmBE,WACWh8B,EACAw5B,EACTyC,QADS,IAAAzC,OAAS,GADT,KAAAx5B,OACA,KAAAw5B,SApBH,KAAAzkB,MAAK,EAGL,KAAAmmB,iBAA8C,CAAC,EACvD,KAAAD,SAA8C,CAAC,EACvC,KAAAiB,IAAM,GAAIrK,cACV,KAAAsK,SAAWxrB,KAAKC,MAAsB,IAAhBD,KAAKuL,UAiB5B9f,KAAKo9B,SACRp9B,KAAKggC,eAAoBC,uBAA2BjgC,KAAK+/B,SAAQ,IAAI//B,KAAK4D,KAC1E5D,KAAKkgC,cAAmBC,sBAA0BngC,KAAK+/B,SAAQ,IAAI//B,KAAK4D,KACxE5D,KAAKogC,aACHP,GACGQ,GAAoB,IAAIrgC,KAAK+/B,SAAQ,IAAI//B,KAAK4D,KAE/Ci8B,GAGF7/B,KAAKsgC,wBAGV,CAiQH,OA5PE,YAAApgB,MAAA,WACE,GAAmB,IAAflgB,KAAK2Y,MACP,MAAM,GAAcrN,OAAO,gBAAgC,CACzDi1B,UAAWvgC,KAAK4D,OAGpB5D,KAAK8/B,IAAIxL,KAAKt0B,KAAKggC,gBACnBhgC,KAAK2Y,MAAQ,C,EAOf,YAAAqH,KAAA,WACE,GAAmB,IAAfhgB,KAAK2Y,MACP,MAAM,GAAcrN,OAAO,gBAAgC,CACzDi1B,UAAWvgC,KAAK4D,OAGpB5D,KAAK2Y,MAAQ,EACb3Y,KAAK8/B,IAAIxL,KAAKt0B,KAAKkgC,eACnBlgC,KAAK8/B,IAAIvL,QACPv0B,KAAKogC,aACLpgC,KAAKggC,eACLhgC,KAAKkgC,eAEPlgC,KAAKsgC,wBACLrD,GAASj9B,K,EAUX,YAAAwgC,OAAA,SACEC,EACAC,EACA58B,GAKA,GAAI28B,GAAa,EACf,MAAM,GAAcn1B,OAAO,8BAAwC,CACjEi1B,UAAWvgC,KAAK4D,OAGpB,GAAI88B,GAAY,EACd,MAAM,GAAcp1B,OAAO,6BAAsC,CAC/Di1B,UAAWvgC,KAAK4D,OASpB,GALA5D,KAAK2+B,WAAapqB,KAAKC,MAAiB,IAAXksB,GAC7B1gC,KAAK89B,YAAcvpB,KAAKC,MAAkB,IAAZisB,GAC1B38B,GAAWA,EAAQ68B,aACrB3gC,KAAK8+B,iBAAmB,OAAH,WAAG,CAAH,GAAQh7B,EAAQ68B,aAEnC78B,GAAWA,EAAQ88B,QACrB,IAAqB,UAAAphC,OAAOo/B,KAAK96B,EAAQ88B,SAApB,eAA8B,CAA9C,IAAMC,EAAM,KACVt+B,MAAMd,OAAOqC,EAAQ88B,QAAQC,OAChC7gC,KAAK6+B,SAASgC,GAAUp/B,OAAO8S,KAAKC,MAAM1Q,EAAQ88B,QAAQC,KAE7D,CAEH5D,GAASj9B,K,EAUX,YAAA8gC,gBAAA,SAAgBC,EAAiBC,QAAA,IAAAA,MAAe,QACf1gC,IAA3BN,KAAK6+B,SAASkC,GAChB/gC,KAAKihC,UAAUF,EAASC,GAExBhhC,KAAKihC,UAAUF,EAAS/gC,KAAK6+B,SAASkC,GAAWC,E,EAUrD,YAAAC,UAAA,SAAUF,EAAiBC,GACzB,GDhJ8Bp9B,ECgJRm9B,EDhJsBR,ECgJbvgC,KAAK4D,KD/IlB,IAAhBA,EAAKkE,QAAgBlE,EAAKkE,OAbD,OAiB1By4B,GACCA,EAAU5wB,WAAWuxB,KACrBxB,GAAWroB,QAAQzT,IAAS,IAC7BA,EAAK+L,WAnBmB,KC8JvB,MAAM,GAAcrE,OAAO,6BAAsC,CAC/D61B,iBAAkBJ,I,IDpJQn9B,EAAc28B,ECiJ1CvgC,KAAK6+B,SAASkC,G,SD/HwBK,GAC1C,IAAMC,EAAyB9sB,KAAKC,MAAM4sB,GAM1C,OALIC,EAAiBD,GACnB5N,GAAc0B,KACZ,6DAA6DmM,EAAc,KAGxEA,CACT,CCuH+BC,CAA4BN,E,EAazD,YAAAO,UAAA,SAAUR,GACR,OAAO/gC,KAAK6+B,SAASkC,IAAY,C,EAQnC,YAAAS,aAAA,SAAaC,EAAcn/B,GACzB,INrGuCsB,EMqGjC89B,INpGY,KADqB99B,EMqGQ69B,GNpGxC35B,QAAgBlE,EAAKkE,OAjDE,MAoDFwvB,GAA4B9nB,KAAK,SAAAmyB,GAC7D,OAAA/9B,EAAK+L,WAAWgyB,E,MAEiB/9B,EAAKgU,MAAM2f,IM+FtCqK,E,SN5FkCt/B,GAC1C,OAAwB,IAAjBA,EAAMwF,QAAgBxF,EAAMwF,QA1DF,GA2DnC,CM0FyB+5B,CAA4Bv/B,GACjD,GAAIo/B,GAAeE,EACjB5hC,KAAK8+B,iBAAiB2C,GAAQn/B,MADhC,CAKA,IAAKo/B,EACH,MAAM,GAAcp2B,OAAO,yBAAkC,CAC3Dw2B,cAAeL,IAGnB,IAAKG,EACH,MAAM,GAAct2B,OAAO,0BAAmC,CAC5Dy2B,eAAgBz/B,GATnB,C,EAkBH,YAAA0/B,aAAA,SAAaP,GACX,OAAOzhC,KAAK8+B,iBAAiB2C,E,EAG/B,YAAAQ,gBAAA,SAAgBR,QACsBnhC,IAAhCN,KAAK8+B,iBAAiB2C,WAGnBzhC,KAAK8+B,iBAAiB2C,E,EAG/B,YAAA1C,cAAA,WACE,OAAO,OAAP,WAAO,CAAP,GAAY/+B,KAAK8+B,iB,EAGX,YAAAoD,aAAR,SAAqBzB,GACnBzgC,KAAK89B,YAAc2C,C,EAGb,YAAA0B,YAAR,SAAoBzB,GAClB1gC,KAAK2+B,WAAa+B,C,EAOZ,YAAAJ,sBAAR,WACE,IAAM8B,EAAqBpiC,KAAK8/B,IAAIlL,iBAAiB50B,KAAKogC,cACpDiC,EAAmBD,GAAsBA,EAAmB,GAC9DC,IACFriC,KAAK2+B,WAAapqB,KAAKC,MAAkC,IAA5B6tB,EAAiB3B,UAC9C1gC,KAAK89B,YAAcvpB,KAAKC,MACoC,KAAzD6tB,EAAiB5B,UAAYzgC,KAAK8/B,IAAIjL,kB,EAWtC,EAAAyN,eAAP,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAQ,GAAIjN,cAAcpB,SAChC,GAAKqO,EAAL,CAGA,IAAMxF,EAAQ,IAAIyF,EAAMzB,GAA6BwB,GAAO,GACtDE,EAAeruB,KAAKC,MAA0C,IAApC,GAAIihB,cAAcZ,iBAClDqI,EAAMgF,aAAaU,GAGfL,GAAqBA,EAAkB,KACzCrF,EAAMiF,YAAY5tB,KAAKC,MAAsC,IAAhC+tB,EAAkB,GAAG7B,WAClDxD,EAAM+D,UACJ,iBACA1sB,KAAKC,MAA4C,IAAtC+tB,EAAkB,GAAGM,iBAElC3F,EAAM+D,UACJ,2BACA1sB,KAAKC,MAAsD,IAAhD+tB,EAAkB,GAAGO,2BAElC5F,EAAM+D,UACJ,eACA1sB,KAAKC,MAA0C,IAApC+tB,EAAkB,GAAGQ,gBAMpC,GAAIP,EAAc,CAChB,IAAMQ,EAAaR,EAAaS,KAC9B,SAAAC,GAAe,MAJC,gBAIDA,EAAYt/B,IAAoB,GAE7Co/B,GAAcA,EAAWvC,WAC3BvD,EAAM+D,UZxR0B,MY0R9B1sB,KAAKC,MAA6B,IAAvBwuB,EAAWvC,YAG1B,IAAM0C,EAAuBX,EAAaS,KACxC,SAAAC,GAAe,MAZY,2BAYZA,EAAYt/B,IAA+B,GAExDu/B,GAAwBA,EAAqB1C,WAC/CvD,EAAM+D,UACJtB,GACAprB,KAAKC,MAAuC,IAAjC2uB,EAAqB1C,YAIhCgC,GACFvF,EAAM+D,UACJrB,GACArrB,KAAKC,MAAwB,IAAlBiuB,GAGhB,CAEDxF,GAASC,EApDR,C,EAuDI,EAAAkG,sBAAP,SAA6B5O,GAE3ByI,GADc,IAAI0F,EAAMnO,GAAa,EAAOA,G,EAGhD,EAtSA,G,SCGgB6O,GAA0B/N,GACxC,IAAMgO,EAAmBhO,EACzB,GAAKgO,QAAuDhjC,IAAnCgjC,EAAiBC,cAA1C,CAGA,IAAMzO,EAAa,GAAIW,cAAcZ,gBAC/BiJ,EAAcvpB,KAAKC,MACqB,KAA3C8uB,EAAiB7C,UAAY3L,IAE1BkJ,EAA4BsF,EAAiBC,cAC/ChvB,KAAKC,MAC6D,KAA/D8uB,EAAiBC,cAAgBD,EAAiB7C,iBAErDngC,EACE49B,EAA4B3pB,KAAKC,MACyB,KAA7D8uB,EAAiBE,YAAcF,EAAiB7C,a,SHwFnBnD,GAChC,IAAMH,EAAkB/F,GAAgB3B,cAExC,GAAK0H,EAAgBjH,uBAArB,CAMA,IAAMuN,EAAoBnG,EAAej6B,IAInCqgC,EAAiBvG,EAAgB5G,eAAetQ,MAAM,KAAK,GAC3D0d,EAAgBxG,EAAgB3G,uBAAuBvQ,MAAM,KAAK,GAEtEwd,IAAsBC,GACtBD,IAAsBE,GAMrBxG,EAAgB/G,gBAChB+G,EAAgBvG,yBAKnBtxB,WAAW,WAAM,OAAAy3B,GAAQO,EAAgB,EAA4B,EAAE,EAxBtE,CAyBH,CG1GEsG,CARuC,CACrCvgC,IAFUigC,EAAiB1/B,MAAQ0/B,EAAiB1/B,KAAKqiB,MAAM,KAAK,GAGpE2X,qBAAsB0F,EAAiBO,aACvC/F,YAAW,EACXE,0BAAyB,EACzBE,0BAAyB,GApB1B,CAwBH,C,SCpDgB4F,KAETzM,OAKL/xB,WAAW,WAAM,OAcnB,WACE,IAAMw6B,EAAM,GAAIrK,cACV8M,EAAoBzC,EAAInL,iBAC5B,cAEI6N,EAAe1C,EAAInL,iBAAiB,SAG1C,GAAImL,EAAI1L,kBAAmB,CAGzB,IAAI,EAAiB9uB,WAAW,WAC9B,GAAMg9B,eAAeC,EAAmBC,GACxC,OAAYliC,C,EApCO,KAsCrBw/B,EAAI1L,kBAAkB,SAAC2P,GACjB,IACF79B,aAAa,GACb,GAAMo8B,eAAeC,EAAmBC,EAAcuB,G,QAI1D,GAAMzB,eAAeC,EAAmBC,EAE5C,CAtCmBwB,EAAgB,EAAE,GACnC1+B,WAAW,WAAM,OAInB,WAGE,IAFA,IAAMw6B,EAAM,GAAIrK,cACVwO,EAAYnE,EAAInL,iBAAiB,YAChB,MAAAsP,EAAA,eAAW,CAChCZ,GADiB,KAElB,CACDvD,EAAI3K,cAAc,WAAYkO,GAChC,CAXmBa,EAAsB,EAAE,GACzC5+B,WAAW,WAAM,OAsCnB,WAIE,IAHA,IAAMw6B,EAAM,GAAIrK,cAEV0O,EAAWrE,EAAInL,iBAAiB,WAChB,MAAAwP,EAAA,eAAU,CAC9Bf,GADgB,KAEjB,CAEDtD,EAAI3K,cAAc,UAAWiO,GAC/B,CA/CmBgB,EAAuB,EAAE,GAC5C,CAgDA,SAAShB,GAAsB7O,GAC7B,IAAMC,EAAcD,EAAQ3wB,KAG1B4wB,EAAYxc,UAAU,EAAGqoB,MACzBA,IAIF,GAAM+C,sBAAsB5O,EAC9B,CClEA,kBACE,WAAqBhuB,GAAA,KAAAA,MACf,GAAIivB,cAAcR,yBACpB,sCACG70B,KAAK,SAAAikC,GACAA,IN+BPjJ,KACHC,GAzC+B,MA0C/BD,IAAmB,GM/BXX,KAA2Br6B,KACzB0jC,GACAA,I,GAILjwB,MAAM,SAAAlO,GACL6tB,GAAc0B,KAAK,0CAA0CvvB,E,EAGpE,CAmBH,OAjBE,YAAAu3B,MAAA,SAAMt5B,GACJ,OAAO,IAAI,GAAMA,E,EAGnB,sBAAI,qCAAsB,C,IAG1B,WACE,OAAOwzB,GAAgB3B,cAAcS,sB,MAJvC,SAA2BxT,GACzB0U,GAAgB3B,cAAcS,uBAAyBxT,C,kCAMzD,sBAAI,oCAAqB,C,IAGzB,WACE,OAAO0U,GAAgB3B,cAAcU,qB,MAJvC,SAA0BzT,GACxB0U,GAAgB3B,cAAcU,sBAAwBzT,C,kCAK1D,EApCA,I,SjEMoC,GAClC,IAAM,EAAgB,SACpB,EACA,GAEA,GAPuB,cAOnB,EAAI,KACN,MAAM,GAAc,OAAM,kBAE5B,GAAsB,qBAAX,OACT,MAAM,GAAc,OAAM,aAK5B,O,SiDkHqBkR,GACvBP,GAAiBO,CACnB,CjDvHI,CAAS,QACT,GAAgB,cAAc,oBAAsB,EACpD,GAAgB,cAAc,qBAAuB,EAC9C,IAAI,GAAsB,E,EAIlC,EAAgC,SAAS,kBACxC,IAAI,YACF,cACA,YAGE,IAAM,EAAM,EAAU,YAAY,OAAO,eAEnC,EAAgB,EACnB,YAAY,iBACZ,eAEH,OAAO,EAAc,EAAK,E,EAC3B,WAKL,EAAS,gB,wBAAsB,GACjC,CAEA,CAAoB,W,ckEtCpB,cACE,WACmBnkB,EACA8a,EACA+Z,EACAC,GAHA,KAAA90B,SACA,KAAA8a,UACA,KAAA+Z,eACA,KAAAC,QACf,CAmFN,OAxEE,YAAAC,kBAAA,SACEC,EACAC,GAGA,IAAKA,EAEH,OADA1kC,KAAKukC,OAAOl1B,MAAM,iDACX,EAIT,IAAMs1B,EAAiB7iC,KAAK4H,MAAQg7B,EAE9BF,EAAoBG,GAAkBF,EAS5C,OAPAzkC,KAAKukC,OAAOl1B,MACV,+CACwBs1B,EADxB,gEAEiEF,EAFjE,mBAGoBD,EAAiB,KAGhCA,C,EAGH,YAAAp5B,MAAN,SAAYslB,G,4IAKN,SAAM1tB,QAAQsnB,IAAI,CACpBtqB,KAAKuqB,QAAQqa,wCACb5kC,KAAKuqB,QAAQsa,oC,OAIf,OATM,EAGF,SAFFH,EAAkC,MAClCI,EAA2B,OAS3B9kC,KAAKwkC,kBACH9T,EAAQ+T,kBACRC,GAGK,CAAP,EAAOI,IAKTpU,EAAQqU,KACND,GAA+BA,EAA4BC,KAG5C,GAAM/kC,KAAKyP,OAAOrE,MAAMslB,K,OAgBzC,OAhBM9rB,EAAW,SAIXogC,EAAoB,CAExBhlC,KAAKskC,aAAaW,sCAAsCnjC,KAAK4H,QAGvC,MAApB9E,EAASC,QAEXmgC,EAAkB7tB,KAChBnX,KAAKuqB,QAAQ2a,+BAA+BtgC,IAIhD,GAAM5B,QAAQsnB,IAAI0a,I,OAElB,OAFA,SAEO,CAAP,EAAOpgC,G,MAEX,EAzFA,GCEM,KAAqB,OACzB,uBACE,kFACF,8BACE,mEACF,2BACE,wDACF,0BACE,+DACF,mBACE,8EACF,kBACE,mFACF,kBACE,iFACF,qBACE,oFACF,2BACE,mHAEF,oBACE,iGAEF,qBACE,mOAGF,yBACE,kFAEF,mBACE,0E,IAqBS,GAAgB,IAAI,eAC/B,eACA,gBACA,ICzCF,kBACE,WACmBugC,EACAC,EACAC,EACAxhC,EACAmI,EACAjB,GALA,KAAAo6B,wBACA,KAAAC,aACA,KAAAC,YACA,KAAAxhC,YACA,KAAAmI,SACA,KAAAjB,OACf,CAsHN,OA3GQ,YAAAK,MAAN,SAAYslB,G,wKACkC,SAAM1tB,QAAQsnB,IAAI,CAC5DtqB,KAAKmlC,sBAAsBtK,QAC3B76B,KAAKmlC,sBAAsB5kC,c,OAFvB,EAAsC,SAArC+kC,EAAc,KAAEC,EAAiB,KAKlCC,EACJ5R,OAAO6R,iCACP,8CAEIpiC,EAASmiC,EAAO,gBAAgBxlC,KAAK6D,UAAS,eAAe7D,KAAKqlC,UAAS,cAAcrlC,KAAKgM,OAE9F1H,EAAU,CACd,eAAgB,mBAChB,mBAAoB,OAGpB,gBAAiBosB,EAAQqU,MAAQ,KAG7BW,EAAgC,CAEpClM,YAAax5B,KAAKolC,WAClBjM,gBAAiBmM,EACjBlM,sBAAuBmM,EACvBlM,OAAQr5B,KAAK+K,MACb46B,oBCnEJ,IAAAC,MAAA/yB,WAIG+yB,EAAkBC,WAAaD,EAAkBC,UAAU,IAG5DD,EAAkBE,WDgEZhiC,EAAU,CACdW,OAAQ,OACRH,QAAO,EACPD,KAAMK,KAAKC,UAAU+gC,IAIjBK,EAAe36B,MAAM/H,EAAKS,GAC1BkiC,EAAiB,IAAIhjC,QAAQ,SAAC+lB,EAAU1jB,GAE5CqrB,EAAQuV,OAAOh4B,iBAAiB,WAE9B,IAAMtI,EAAQ,IAAIhG,MAAM,8BACxBgG,EAAM/B,KAAO,aACbyB,EAAOM,E,sBAMT,O,sBAAA,GAAM3C,QAAQyC,KAAK,CAACsgC,EAAcC,K,OACvB,OADX,SACW,GAAMD,G,cAAjBnhC,EAAW,S,aAMX,M,WAJIshC,EAAY,uBACW,eAAvB,EAActiC,OAChBsiC,EAAY,iBAER,GAAc56B,OAAO46B,EAAW,CACpCC,qBAAsB,EAAc7mC,U,UAIpCuF,EAASD,EAASC,OAGhBuhC,EAAexhC,EAASN,QAAQnE,IAAI,cAAWG,EAO7B,MAApBsE,EAASC,OAAT,aACEwhC,OAAY,E,iBAEC,O,uBAAA,GAAMzhC,EAASvC,Q,cAA9BgkC,EAAe,S,cAEf,M,WAAM,GAAc/6B,OAAO,qBAAuB,CAChD66B,qBAAsB,EAAc7mC,U,QAGxCmwB,EAAS4W,EAAsB,QAC/B1tB,EAAQ0tB,EAAoB,M,mBAiB9B,GAbc,+BAAV1tB,EACF9T,EAAS,IACU,cAAV8T,EACT9T,EAAS,IACU,gBAAV8T,GAAqC,iBAAVA,IAEpC8W,EAAS,CAAC,GAOG,MAAX5qB,GAA6B,MAAXA,EACpB,MAAM,GAAcyG,OAAO,eAAwB,CACjDg7B,WAAYzhC,IAIhB,MAAO,CAAP,EAAO,CAAEA,OAAM,EAAEkgC,KAAMqB,EAAc3W,OAAM,I,IClJ7CmW,C,MDoJF,EA9HA,GEEA,2BACE,KAAAW,UAA+B,EAOhC,CAAD,OANE,YAAAt4B,iBAAA,SAAiB8L,GACf/Z,KAAKumC,UAAUpvB,KAAK4C,E,EAEtB,YAAAJ,MAAA,WACE3Z,KAAKumC,UAAU3jB,QAAQ,SAAA7I,GAAY,OAAAA,GAAU,E,EAEjD,EARA,GC5BMysB,GAAwB,CAAC,IAAK,OAAQ,IAAK,MAAO,IAAK,MAE7D,cACE,WACmBC,EACAC,QAAA,IAAAA,MARY,IAOZ,KAAAD,UACA,KAAAC,QACf,CA2BN,OAzBE,YAAAC,SAAA,WACE,OAAO3mC,KAAK0mC,M,EAGd,YAAAE,UAAA,WACE,MAAqB,WAAjB5mC,KAAKymC,SAGFD,GAAsBnvB,QAAQrX,KAAK0mC,OAAOG,gBAAkB,C,EAGrE,YAAAC,SAAA,WACE,GAAqB,WAAjB9mC,KAAKymC,QACP,OAvB2B,EAyB7B,IAAIM,EAAMtlC,OAAOzB,KAAK0mC,QAItB,OAHInkC,MAAMwkC,KACRA,EA3B2B,GA6BtBA,C,EAGT,YAAAC,UAAA,WACE,OAAOhnC,KAAKymC,O,EAEhB,EA/BA,GCkBA,cAqCE,WAEWjgC,EAIQygC,EACAC,EACAC,EACAC,GAPR,KAAA5gC,MAIQ,KAAAygC,UACA,KAAAC,gBACA,KAAAC,WACA,KAAAC,UA5CX,KAAAC,2BAA4B,EAKpC,KAAAC,SAAqB,CACnBC,mBAhBiC,IAiBjCC,2BAhBiC,OAmBnC,KAAAC,cAA8D,CAAC,CAmC3D,CAyHN,OAxJE,YAAAC,YAAA,SAAYjU,GACV,OAAQA,GACN,IAAK,QACHzzB,KAAKonC,QAAQ3T,SAAWkU,WAAiBC,MACzC,MACF,IAAK,SACH5nC,KAAKonC,QAAQ3T,SAAWkU,WAAiBE,OACzC,MACF,QACE7nC,KAAKonC,QAAQ3T,SAAWkU,WAAiBlvB,M,EAI/C,sBAAI,8BAAe,C,IAAnB,WACE,OAAOzY,KAAKknC,cAActC,0CAA4C,C,kCAGxE,sBAAI,8BAAe,C,IAAnB,WACE,OAAO5kC,KAAKknC,cAAcY,sBAAwB,c,kCAe9C,YAAAC,SAAN,W,wIAC0D,SAAM/kC,QAAQsnB,IAAI,CACxEtqB,KAAKmnC,SAAStC,iCACd7kC,KAAKmnC,SAASa,yB,OAEhB,OAJM,EAAkD,SAAjDlD,EAA2B,KAAEmD,EAAgB,KAKjDnD,GACAA,EAA4BrV,QAC5BqV,EAA4BC,MAC7BD,EAA4BC,OAASkD,EAMvC,GAAMjlC,QAAQsnB,IAAI,CAChBtqB,KAAKknC,cAAcgB,gBAAgBpD,EAA4BrV,QAC/DzvB,KAAKmnC,SAASgB,oBAAoBrD,EAA4BC,SAJvD,CAAP,GAAO,G,OAMT,OAJA,SAIO,CAAP,GAAO,G,MAGT,YAAAqD,kBAAA,sBAQE,OAPKpoC,KAAKqoC,qBACRroC,KAAKqoC,mBAAqBroC,KAAKknC,cAC5BoB,kBACAloC,KAAK,WACJ,EAAKinC,2BAA4B,C,IAGhCrnC,KAAKqoC,kB,EAQR,YAAAj9B,MAAN,W,+IAWQm9B,EAAc,IAAIC,GAExBljC,WAAW,iE,qDAETijC,EAAY5uB,Q,SACX3Z,KAAKsnC,SAASC,oB,iBAIf,O,sBAAA,GAAMvnC,KAAKinC,QAAQ77B,MAAM,CACvBq5B,kBAAmBzkC,KAAKsnC,SAASE,2BACjCvB,OAAQsC,K,OAGV,OALA,SAKA,GAAMvoC,KAAKknC,cAAcuB,mBAAmB,Y,cAA5C,S,aAKA,O,WLlEiC,EK+DO,iBAAlCC,GL/DiB,EK+Dc,aL9DrB,kBAAgD,IAA/B,EAAE,KAAK,QAAQ,GK+D5C,WACA,UACJ,GAAM1oC,KAAKknC,cAAcuB,mBAAmBC,I,OAC5C,MADA,SACM,E,qBLnEiB,EAAU,C,MKuE/B,YAAAC,iBAAN,W,8HACE,SAAM3oC,KAAKoL,S,OACX,OADA,SACO,CAAP,EAAOpL,KAAK+nC,Y,MAGd,YAAAa,OAAA,sBACE,OA6CJ,SAAoBC,EAAeC,QAAf,IAAAD,MAAA,SAAe,IAAAC,MAAA,IACjC,OAAOtpC,OAAOo/B,KAAK,OAAD,WAAC,CAAD,sBAAMiK,GAASC,GACnC,CA/CWC,CACL/oC,KAAKknC,cAAc8B,kBACnBhpC,KAAKynC,eACLwB,OAAO,SAACC,EAAY7nC,GAEpB,OADA6nC,EAAW7nC,GAAO,EAAK8nC,SAAS9nC,GACzB6nC,C,EACN,CAAC,E,EAGN,YAAAE,WAAA,SAAW/nC,GACT,OAAOrB,KAAKmpC,SAAS9nC,GAAKulC,W,EAG5B,YAAAyC,UAAA,SAAUhoC,GACR,OAAOrB,KAAKmpC,SAAS9nC,GAAKylC,U,EAG5B,YAAAwC,UAAA,SAAUjoC,GACR,OAAOrB,KAAKmpC,SAAS9nC,GAAKslC,U,EAG5B,YAAAwC,SAAA,SAAS9nC,GACFrB,KAAKqnC,2BACRrnC,KAAKonC,QAAQ/3B,MACX,kCAAkChO,EAAlC,4HAIJ,IAAMkoC,EAAevpC,KAAKknC,cAAc8B,kBACxC,OAAIO,QAAsCjpC,IAAtBipC,EAAaloC,GACxB,IAAImoC,GAAM,SAAUD,EAAaloC,IAC/BrB,KAAKynC,oBAA6CnnC,IAA5BN,KAAKynC,cAAcpmC,GAC3C,IAAImoC,GAAM,UAAWjiC,OAAOvH,KAAKynC,cAAcpmC,MAExDrB,KAAKonC,QAAQ/3B,MACX,mCAAmChO,EAAnC,iEAGK,IAAImoC,GAAM,U,EAErB,EAxKA,GCfA,SAASC,GAAgBz6B,EAAck3B,GACrC,IAAMwD,EAAiB16B,EAAM26B,OAAsBhkC,YAASrF,EAC5D,OAAO,GAAcgL,OAAO46B,EAAW,CACrCC,qBAAsBuD,GAAiBA,EAAcpqC,SAEzD,CAYO,IAAMsqC,GAAsB,sBA4DnC,kBAME,WACmB7+B,EACA6J,EACAywB,EACAwE,QAAA,IAAAA,MAvCZ,IAAI7mC,QAAQ,SAACC,EAASoC,GAC3B,IAAMqrB,EAAUloB,UAAU6Q,KA9Bd,yBACG,GA8BfqX,EAAQoZ,QAAU,SAAA96B,GAChB3J,EAAOokC,GAAgBz6B,EAAO,gB,EAEhC0hB,EAAQqZ,UAAY,SAAA/6B,GAClB/L,EAAS+L,EAAM26B,OAA4BvoC,O,EAE7CsvB,EAAQsZ,gBAAkB,SAAAh7B,GACxB,IAAMrG,EAAMqG,EAAM26B,OAA4BvoC,OAQvC,IADC4N,EAAMlG,YAEVH,EAAGyB,kBAAkBw/B,GAAqB,CACxCK,QAAS,gB,KAiBA,KAAAl/B,QACA,KAAA6J,UACA,KAAAywB,YACA,KAAAwE,eACf,CA+IN,OA7IE,YAAA/B,mBAAA,WACE,OAAO9nC,KAAKG,IAAiB,oB,EAG/B,YAAAsoC,mBAAA,SAAmB5jC,GACjB,OAAO7E,KAAK6hB,IAAiB,oBAAqBhd,E,EAKpD,YAAA+/B,sCAAA,WACE,OAAO5kC,KAAKG,IAAY,yC,EAG1B,YAAA8kC,sCAAA,SAAsCiF,GACpC,OAAOlqC,KAAK6hB,IACV,yCACAqoB,E,EAIJ,YAAArF,+BAAA,WACE,OAAO7kC,KAAKG,IAAmB,iC,EAGjC,YAAA+kC,+BAAA,SAA+BtgC,GAC7B,OAAO5E,KAAK6hB,IAAmB,iCAAkCjd,E,EAGnE,YAAAokC,gBAAA,WACE,OAAOhpC,KAAKG,IAAgC,gB,EAG9C,YAAA+nC,gBAAA,SAAgBzY,GACd,OAAOzvB,KAAK6hB,IAAgC,gBAAiB4N,E,EAG/D,YAAAuY,oBAAA,WACE,OAAOhoC,KAAKG,IAAY,qB,EAG1B,YAAAgoC,oBAAA,SAAoBgC,GAClB,OAAOnqC,KAAK6hB,IAAY,qBAAsBsoB,E,EAGhD,YAAAC,oBAAA,WACE,OAAOpqC,KAAKG,IAAsB,oB,EAGpC,YAAAkqC,oBAAA,SAAoBjnB,GAClB,OAAOpjB,KAAK6hB,IAAsB,oBAAqBuB,E,EAGzD,YAAAknB,uBAAA,WACE,OAAOtqC,KAAK+C,OAAO,oB,EAGf,YAAA5C,IAAN,SAAakB,G,2IACA,SAAMrB,KAAK6pC,e,OACtB,OADMlhC,EAAK,SACJ,CAAP,EAAO,IAAI3F,QAAQ,SAACC,EAASoC,GAC3B,IACM4D,EADcN,EAAGO,YAAY,CAAC0gC,IAAsB,YAC1B3gC,YAAY2gC,IACtCW,EAAe,EAAKC,mBAAmBnpC,GAC7C,IACE,IAAMqvB,EAAUznB,EAAY9I,IAAIoqC,GAChC7Z,EAAQoZ,QAAU,SAAA96B,GAChB3J,EAAOokC,GAAgBz6B,EAAO,e,EAEhC0hB,EAAQqZ,UAAY,SAAA/6B,GAClB,IAAM5N,EAAU4N,EAAM26B,OAAsBvoC,OAE1C6B,EADE7B,EACMA,EAAOkB,WAEPhC,E,EAGZ,MAAOoD,GACP2B,EACE,GAAciG,OAAO,cAAuB,CAC1C66B,qBAAsBziC,GAAKA,EAAEpE,UAGlC,C,UAIC,YAAAuiB,IAAN,SAAaxgB,EAAoCiB,G,2IACpC,SAAMtC,KAAK6pC,e,OACtB,OADMlhC,EAAK,SACJ,CAAP,EAAO,IAAI3F,QAAQ,SAACC,EAASoC,GAC3B,IACM4D,EADcN,EAAGO,YAAY,CAAC0gC,IAAsB,aAC1B3gC,YAAY2gC,IACtCW,EAAe,EAAKC,mBAAmBnpC,GAC7C,IACE,IAAMqvB,EAAUznB,EAAY2B,IAAI,CAC9B2/B,aAAY,EACZjoC,MAAK,IAEPouB,EAAQoZ,QAAU,SAAC96B,GACjB3J,EAAOokC,GAAgBz6B,EAAO,e,EAEhC0hB,EAAQqZ,UAAY,WAClB9mC,G,EAEF,MAAOS,GACP2B,EACE,GAAciG,OAAO,cAAuB,CAC1C66B,qBAAsBziC,GAAKA,EAAEpE,UAGlC,C,UAIC,YAAAyD,OAAN,SAAa1B,G,2IACA,SAAMrB,KAAK6pC,e,OACtB,OADMlhC,EAAK,SACJ,CAAP,EAAO,IAAI3F,QAAQ,SAACC,EAASoC,GAC3B,IACM4D,EADcN,EAAGO,YAAY,CAAC0gC,IAAsB,aAC1B3gC,YAAY2gC,IACtCW,EAAe,EAAKC,mBAAmBnpC,GAC7C,IACE,IAAMqvB,EAAUznB,EAAYlG,OAAOwnC,GACnC7Z,EAAQoZ,QAAU,SAAC96B,GACjB3J,EAAOokC,GAAgBz6B,EAAO,kB,EAEhC0hB,EAAQqZ,UAAY,WAClB9mC,G,EAEF,MAAOS,GACP2B,EACE,GAAciG,OAAO,iBAA0B,CAC7C66B,qBAAsBziC,GAAKA,EAAEpE,UAGlC,C,UAKL,YAAAkrC,mBAAA,SAAmBnpC,GACjB,MAAO,CAACrB,KAAK+K,MAAO/K,KAAK4U,QAAS5U,KAAKqlC,UAAWhkC,GAAK2tB,M,EAE3D,EA1JA,GCjFA,cACE,WAA6BzE,GAAA,KAAAA,SAAoB,CAyEnD,OA7DE,YAAAud,mBAAA,WACE,OAAO9nC,KAAK0oC,e,EAGd,YAAA9D,sCAAA,WACE,OAAO5kC,KAAK0kC,kC,EAGd,YAAAsE,gBAAA,WACE,OAAOhpC,KAAKupC,Y,EAMR,YAAAjB,gBAAN,W,8IAW0B,OAVlBmC,EAAyBzqC,KAAKuqB,QAAQud,qBACtC4C,EAA4C1qC,KAAKuqB,QAAQqa,wCACzD+F,EAAsB3qC,KAAKuqB,QAAQye,kBAQjB,GAAMyB,G,OAKa,OALrC/B,EAAkB,YAEtB1oC,KAAK0oC,gBAAkBA,GAGkB,GAAMgC,G,OAK5B,OALfhG,EAAqC,YAEzC1kC,KAAK0kC,mCAAqCA,GAGvB,GAAMiG,G,cAArBpB,EAAe,YAEnBvpC,KAAKupC,aAAeA,G,UAOxB,YAAAd,mBAAA,SAAmB5jC,GAEjB,OADA7E,KAAK0oC,gBAAkB7jC,EAChB7E,KAAKuqB,QAAQke,mBAAmB5jC,E,EAGzC,YAAAogC,sCAAA,SACE2F,GAGA,OADA5qC,KAAK0kC,mCAAqCkG,EACnC5qC,KAAKuqB,QAAQ0a,sCAAsC2F,E,EAG5D,YAAA1C,gBAAA,SAAgBqB,GAEd,OADAvpC,KAAKupC,aAAeA,EACbvpC,KAAKuqB,QAAQ2d,gBAAgBqB,E,EAExC,EA1EA,G,SCegBsB,GACd5E,EACA6E,GAEA,OAAO,IAAI9nC,QAAQ,SAACC,EAASoC,GAE3B,IAAM0lC,EAAgBx2B,KAAK4nB,IAAI2O,EAAwBhpC,KAAK4H,MAAO,GAE7D1E,EAAUM,WAAWrC,EAAS8nC,GAGpC9E,EAAOh4B,iBAAiB,WACtB/H,aAAalB,GAGbK,EACE,GAAciG,OAAO,iBAA0B,CAC7Cw/B,sBAAqB,I,IAK/B,CA4BA,I3EzCEE,G2EyCF,cACE,WACmBv7B,EACA8a,GADA,KAAA9a,SACA,KAAA8a,SACf,CAkDN,OAhDQ,YAAAnf,MAAN,SAAYslB,G,oIACgB,SAAM1wB,KAAKuqB,QAAQ6f,uB,OAK7C,OALMa,EAAoB,UAA6C,CACrEC,aAAc,EACdJ,sBAAuBhpC,KAAK4H,OAGvB,CAAP,EAAO1J,KAAKmrC,aAAaza,EAASua,I,MAQ9B,YAAAE,aAAN,SACEza,EACA,G,IAAEoa,EAAqB,wBAAEI,EAAY,e,wIAKrC,SAAML,GAAoBna,EAAQuV,OAAQ6E,I,OAA1C,S,iBAGmB,O,sBAAA,GAAM9qC,KAAKyP,OAAOrE,MAAMslB,I,OAGzC,OAHM9rB,EAAW,SAGjB,GAAM5E,KAAKuqB,QAAQ+f,0B,OAEnB,OAFA,SAEO,CAAP,EAAO1lC,G,OAEP,IA3DN,SAA0BlB,GACxB,KAAMA,aAAa,mBAAmBA,EAAEuR,WACtC,OAAO,EAIT,IAAMqxB,EAAa7kC,OAAOiC,EAAEuR,WAAuB,YAEnD,OACiB,MAAfqxB,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,CAEJ,CA6CW8E,C,YACH,MAAM,EAWR,OAPMH,EAAmB,CACvBH,sBACEhpC,KAAK4H,MAAQ,iCAAuBwhC,GACtCA,aAAcA,EAAe,GAI/B,GAAMlrC,KAAKuqB,QAAQ8f,oBAAoBY,I,OAEvC,OAFA,SAEO,CAAP,EAAOjrC,KAAKmrC,aAAaza,EAASua,I,uBAGxC,EAtDA,G,8B3EzCED,GAkFmB,WAhFF9rC,SAASmH,kBACxB,IAAI,YACF,eAQJ,SACEC,EACA,G,IAAsB++B,EAAS,qBAIzB7+B,EAAMF,EAAUG,YAAY,OAAOxG,eAEnC4L,EAAgBvF,EAAUG,YAAY,iBAAiBxG,eAG7D,GAAsB,qBAAX2zB,OACT,MAAM,GAActoB,OAAO,uBAIvB,MAA+B9E,EAAI1C,QAAjCD,EAAS,YAAEmI,EAAM,SAAEjB,EAAK,QAChC,IAAKlH,EACH,MAAM,GAAcyH,OAAO,2BAE7B,IAAKU,EACH,MAAM,GAAcV,OAAO,wBAE7B,IAAKP,EACH,MAAM,GAAcO,OAAO,uBAE7B+5B,EAAYA,GAAa,WAEzB,IAAM9a,EAAU,IAAI,GAAQxf,EAAOvE,EAAI5C,KAAMyhC,GACvCf,EAAe,IAAI,GAAa/Z,GAEhCga,EAAS,IAAI,SAAO8G,IAI1B9G,EAAO9Q,SAAWkU,WAAiBlvB,MAEnC,IAAM6yB,EAAa,IAAI,GACrBz/B,EAEAm/B,GAAiBzR,YACjB8L,EACAxhC,EACAmI,EACAjB,GAEIwgC,EAAiB,IAAI,GAAeD,EAAY/gB,GAChDihB,EAAgB,IAAI,GACxBD,EACAhhB,EACA+Z,EACAC,GAGIkH,EAAuB,IAAI,GAC/BjlC,EACAglC,EACAlH,EACA/Z,EACAga,GAOF,OAFAkH,EAAqBrD,oBAEdqD,CACR,EA1EsB,UAEnB9kC,sBAAqB,IAGzBqkC,GAAiBU,gBAAgBL,G,iC4EtCnC,UAASK,gB,WAAsBC,GAAS,OACxC,UAASpS,YAAcoS,G7DJvB,QAAQ,KAAK,wmBAoCb,UAAS,gB,wD8DrDT,uDA0BIpS,EAAc,GAElB,SAASqS,EAAcD,GACnBpS,EAAcoS,CAClB,CA2BA,IAAIE,EAAmC,WAInC,SAASA,EAAkBC,GACvB9rC,KAAK8rC,YAAcA,EAEnB9rC,KAAK+rC,QAAU,WACnB,CAkCA,OA7BAF,EAAkB7tC,UAAU6jB,IAAM,SAAUxgB,EAAKiB,GAChC,MAATA,EACAtC,KAAK8rC,YAAYE,WAAWhsC,KAAKisC,cAAc5qC,IAG/CrB,KAAK8rC,YAAYlS,QAAQ55B,KAAKisC,cAAc5qC,GAAMsD,oBAAUrC,GAEpE,EAIAupC,EAAkB7tC,UAAUmC,IAAM,SAAUkB,GACxC,IAAI6qC,EAAYlsC,KAAK8rC,YAAYzT,QAAQr4B,KAAKisC,cAAc5qC,IAC5D,OAAiB,MAAb6qC,EACO,KAGAC,mBAASD,EAExB,EACAL,EAAkB7tC,UAAUouC,OAAS,SAAU/qC,GAC3CrB,KAAK8rC,YAAYE,WAAWhsC,KAAKisC,cAAc5qC,GACnD,EACAwqC,EAAkB7tC,UAAUiuC,cAAgB,SAAUroC,GAClD,OAAO5D,KAAK+rC,QAAUnoC,CAC1B,EACAioC,EAAkB7tC,UAAU4D,SAAW,WACnC,OAAO5B,KAAK8rC,YAAYlqC,UAC5B,EACOiqC,CACX,CA3CuC,GAiEnCQ,EAA+B,WAC/B,SAASA,IACLrsC,KAAKssC,OAAS,CAAC,EACftsC,KAAKusC,mBAAoB,CAC7B,CAkBA,OAjBAF,EAAcruC,UAAU6jB,IAAM,SAAUxgB,EAAKiB,GAC5B,MAATA,SACOtC,KAAKssC,OAAOjrC,GAGnBrB,KAAKssC,OAAOjrC,GAAOiB,CAE3B,EACA+pC,EAAcruC,UAAUmC,IAAM,SAAUkB,GACpC,OAAI2H,mBAAShJ,KAAKssC,OAAQjrC,GACfrB,KAAKssC,OAAOjrC,GAEhB,IACX,EACAgrC,EAAcruC,UAAUouC,OAAS,SAAU/qC,UAChCrB,KAAKssC,OAAOjrC,EACvB,EACOgrC,CACX,CAvBmC,GAkD/BG,EAAmB,SAAUC,GAC7B,IAGI,GAAsB,qBAAX7Y,QAC2B,qBAA3BA,OAAO6Y,GAAiC,CAE/C,IAAIC,EAAa9Y,OAAO6Y,GAGxB,OAFAC,EAAW9S,QAAQ,oBAAqB,SACxC8S,EAAWV,WAAW,qBACf,IAAIH,EAAkBa,EACjC,CACJ,CACA,MAAOhpC,GAAK,CAGZ,OAAO,IAAI2oC,CACf,EAEIM,EAAoBH,EAAiB,gBAErCI,EAAiBJ,EAAiB,kBAkBlCK,EAAY,IAAIC,SAAO,sBAIvBC,EAAiB,WACjB,IAAIC,EAAK,EACT,OAAO,WACH,OAAOA,GACX,CACJ,CALqB,GAWjBC,EAAO,SAAU1hB,GACjB,IAAI2hB,EAAYC,4BAAkB5hB,GAC9B0hB,EAAO,IAAIG,OACfH,EAAKr5B,OAAOs5B,GACZ,IAAIG,EAAYJ,EAAKK,SACrB,OAAO1lC,SAAO2lC,gBAAgBF,EAClC,EACIG,EAAmB,WAEnB,IADA,IAAIC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAG5B,IADA,IAAIpuC,EAAU,GACL4I,EAAI,EAAGA,EAAIulC,EAAQ3lC,OAAQI,IAAK,CACrC,IAAI0lC,EAAMH,EAAQvlC,GACdlG,MAAMC,QAAQ2rC,IACbA,GACkB,kBAARA,GAEe,kBAAfA,EAAI9lC,OACfxI,GAAWkuC,EAAiBhuB,MAAM,KAAMouB,GAGxCtuC,GADoB,kBAARsuC,EACDjpC,oBAAUipC,GAGVA,EAEftuC,GAAW,GACf,CACA,OAAOA,CACX,EAIIilC,EAAS,KAITsJ,GAAY,EAMZC,EAAgB,SAAUC,EAASC,GACnCC,kBAAQD,IAA0B,IAAZD,IAAgC,IAAZA,EAAmB,+CAC7C,IAAZA,GACAlB,EAAUpZ,SAAWya,WAASC,QAC9B5J,EAASsI,EAAUuB,IAAIlhB,KAAK2f,GACxBmB,GACApB,EAAe/qB,IAAI,mBAAmB,IAGlB,oBAAZksB,EACZxJ,EAASwJ,GAGTxJ,EAAS,KACTqI,EAAeR,OAAO,mBAE9B,EACIgC,EAAM,WAEN,IADA,IAAIX,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAQ5B,IANkB,IAAdG,IACAA,GAAY,EACG,OAAXtJ,IAA6D,IAA1CqI,EAAezsC,IAAI,oBACtC2tC,GAAc,IAGlBvJ,EAAQ,CACR,IAAIjlC,EAAUkuC,EAAiBhuB,MAAM,KAAMiuB,GAC3ClJ,EAAOjlC,EACX,CACJ,EACI+uC,EAAa,SAAU1M,GACvB,OAAO,WAEH,IADA,IAAI8L,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAE5BU,EAAI5uB,WAAM,EAAQ8uB,wBAAc,CAAC3M,GAAS4M,iBAAOd,IACrD,CACJ,EACI9nC,EAAQ,WAER,IADA,IAAI8nC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,IAAIpuC,EAAU,4BAA8BkuC,EAAiBhuB,WAAM,EAAQ8uB,wBAAc,GAAIC,iBAAOd,KACpGZ,EAAUlnC,MAAMrG,EACpB,EACIkvC,EAAQ,WAER,IADA,IAAIf,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,IAAIpuC,EAAU,yBAA2BkuC,EAAiBhuB,WAAM,EAAQ8uB,wBAAc,GAAIC,iBAAOd,KAEjG,MADAZ,EAAUlnC,MAAMrG,GACV,IAAIK,MAAML,EACpB,EACI0N,EAAO,WAEP,IADA,IAAIygC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,IAAIpuC,EAAU,qBAAuBkuC,EAAiBhuB,WAAM,EAAQ8uB,wBAAc,GAAIC,iBAAOd,KAC7FZ,EAAU7/B,KAAK1N,EACnB,EAkBImvC,EAAsB,SAAUjtC,GAChC,MAAwB,kBAATA,IACVA,IAASA,GACNA,IAASC,OAAO6uB,mBAChB9uB,IAASC,OAAOitC,kBAC5B,EA6CIC,EAAW,aAIXC,EAAW,aAIXC,EAAc,SAAUC,EAAG73B,GAC3B,GAAI63B,IAAM73B,EACN,OAAO,EAEN,GAAI63B,IAAMH,GAAY13B,IAAM23B,EAC7B,OAAQ,EAEP,GAAI33B,IAAM03B,GAAYG,IAAMF,EAC7B,OAAO,EAGP,IAAIG,EAASC,EAAYF,GAAIG,EAASD,EAAY/3B,GAClD,OAAe,OAAX83B,EACe,OAAXE,EACOF,EAASE,IAAW,EAAIH,EAAEhnC,OAASmP,EAAEnP,OAASinC,EAASE,GAGtD,EAGI,OAAXA,EACE,EAGAH,EAAI73B,GAAK,EAAI,CAGhC,EAIIi4B,EAAgB,SAAUJ,EAAG73B,GAC7B,OAAI63B,IAAM73B,EACC,EAEF63B,EAAI73B,GACD,EAGD,CAEf,EACIk4B,EAAa,SAAU9tC,EAAK0hB,GAC5B,GAAIA,GAAO1hB,KAAO0hB,EACd,OAAOA,EAAI1hB,GAGX,MAAM,IAAI1B,MAAM,yBAA2B0B,EAAM,gBAAkBsD,oBAAUoe,GAErF,EACIqsB,EAAoB,SAAUrsB,GAC9B,GAAmB,kBAARA,GAA4B,OAARA,EAC3B,OAAOpe,oBAAUoe,GAErB,IAAI6b,EAAO,GAEX,IAAK,IAAIyQ,KAAKtsB,EACV6b,EAAKznB,KAAKk4B,GAGdzQ,EAAK0Q,OAEL,IADA,IAAIjuC,EAAM,IACD6G,EAAI,EAAGA,EAAI02B,EAAK92B,OAAQI,IACnB,IAANA,IACA7G,GAAO,KAEXA,GAAOsD,oBAAUi6B,EAAK12B,IACtB7G,GAAO,IACPA,GAAO+tC,EAAkBrsB,EAAI6b,EAAK12B,KAGtC,OADA7G,GAAO,GAEX,EAOIkuC,EAAoB,SAAUhkB,EAAKikB,GACnC,IAAInrB,EAAMkH,EAAIzjB,OACd,GAAIuc,GAAOmrB,EACP,MAAO,CAACjkB,GAGZ,IADA,IAAIkkB,EAAW,GACNv4B,EAAI,EAAGA,EAAImN,EAAKnN,GAAKs4B,EACtBt4B,EAAIs4B,EAAUnrB,EACdorB,EAASt4B,KAAKoU,EAAIvT,UAAUd,EAAGmN,IAG/BorB,EAASt4B,KAAKoU,EAAIvT,UAAUd,EAAGA,EAAIs4B,IAG3C,OAAOC,CACX,EAOA,SAASC,EAAK3sB,EAAK4sB,GACf,IAAK,IAAItuC,KAAO0hB,EACRA,EAAIzhB,eAAeD,IACnBsuC,EAAGtuC,EAAK0hB,EAAI1hB,GAGxB,CAQA,IAAIuuC,EAAwB,SAAUC,GAClC5B,kBAAQQ,EAAoBoB,GAAI,uBAChC,IAEI/3B,EAAGpU,EAAGvC,EAAG2uC,EAAI5nC,EADb6nC,EAAO,KAID,IAANF,GACAnsC,EAAI,EACJvC,EAAI,EACJ2W,EAAI,EAAI+3B,KAAOG,IAAW,EAAI,IAG9Bl4B,EAAI+3B,EAAI,GACRA,EAAIt7B,KAAK07B,IAAIJ,KACJt7B,KAAK27B,IAAI,GAAG,OAGjBxsC,GADAosC,EAAKv7B,KAAKyT,IAAIzT,KAAKC,MAAMD,KAAK65B,IAAIyB,GAAKt7B,KAAK47B,KAAMJ,IACzCA,EACT5uC,EAAIoT,KAAK67B,MAAMP,EAAIt7B,KAAK27B,IAAI,EAjBZ,GAiBuBJ,GAAMv7B,KAAK27B,IAAI,EAjBtC,OAqBhBxsC,EAAI,EACJvC,EAAIoT,KAAK67B,MAAMP,EAAIt7B,KAAK27B,IAAI,GAAG,SAIvC,IAAIG,EAAO,GACX,IAAKnoC,EA3BmB,GA2BRA,EAAGA,GAAK,EACpBmoC,EAAKl5B,KAAKhW,EAAI,EAAI,EAAI,GACtBA,EAAIoT,KAAKC,MAAMrT,EAAI,GAEvB,IAAK+G,EA/BO,GA+BIA,EAAGA,GAAK,EACpBmoC,EAAKl5B,KAAKzT,EAAI,EAAI,EAAI,GACtBA,EAAI6Q,KAAKC,MAAM9Q,EAAI,GAEvB2sC,EAAKl5B,KAAKW,EAAI,EAAI,GAClBu4B,EAAKC,UACL,IAAI/kB,EAAM8kB,EAAKrhB,KAAK,IAEhBuhB,EAAgB,GACpB,IAAKroC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CACxB,IAAIsoC,EAAUC,SAASllB,EAAImlB,OAAOxoC,EAAG,GAAI,GAAGtG,SAAS,IAC9B,IAAnB4uC,EAAQ1oC,SACR0oC,EAAU,IAAMA,GAEpBD,GAAgCC,CACpC,CACA,OAAOD,EAAc1J,aACzB,EA0CA,IAAI8J,EAAkB,IAAIz1B,OAAO,qBAI7B01B,GAAkB,WAIlBC,EAAiB,WAIjB7B,EAAc,SAAUzjB,GACxB,GAAIolB,EAAgBxhB,KAAK5D,GAAM,CAC3B,IAAIulB,EAASrvC,OAAO8pB,GACpB,GAAIulB,GAAUF,GAAkBE,GAAUD,EACtC,OAAOC,CAEf,CACA,OAAO,IACX,EAkBIC,EAAiB,SAAUpB,GAC3B,IACIA,GACJ,CACA,MAAOjsC,GAEH4B,WAAW,WAKP,IAAI0rC,EAAQttC,EAAEstC,OAAS,GAEvB,MADAhkC,EAAK,yCAA0CgkC,GACzCttC,CACV,EAAG6Q,KAAKC,MAAM,GAClB,CACJ,EAwBIy8B,EAAwB,SAAUtB,EAAItf,GACtC,IAAIrrB,EAAUM,WAAWqqC,EAAItf,GAM7B,MAJuB,kBAAZrrB,GAAwBA,EAAe,OAE9CA,EAAe,QAEZA,CACX,EAqBIksC,EAAuC,WACvC,SAASA,EAAsBC,EAAU1uC,GACrC,IAAI2uC,EAAQpxC,KACZA,KAAKmxC,SAAWA,EAChBnxC,KAAKyC,iBAAmBA,EACxBzC,KAAK8E,SAAgC,OAArBrC,QAAkD,IAArBA,OAA8B,EAASA,EAAiBxC,aAAa,CAAEC,UAAU,IACzHF,KAAK8E,UACe,OAArBrC,QAAkD,IAArBA,GAAuCA,EAAiBtC,MAAMC,KAAK,SAAU0E,GAAY,OAAQssC,EAAMtsC,SAAWA,CAAW,EAElK,CA6BA,OA5BAosC,EAAsBlzC,UAAUuC,SAAW,SAAU8wC,GACjD,IAAID,EAAQpxC,KACZ,OAAKA,KAAK8E,SAgBH9E,KAAK8E,SAASvE,SAAS8wC,GAfnB,IAAIruC,QAAQ,SAAUC,EAASoC,GAKlCC,WAAW,WACH8rC,EAAMtsC,SACNssC,EAAM7wC,SAAS8wC,GAAcjxC,KAAK6C,EAASoC,GAG3CpC,EAAQ,KAEhB,EAAG,EACP,EAGR,EACAiuC,EAAsBlzC,UAAUszC,uBAAyB,SAAUv3B,GAC/D,IAAIw3B,EAC6B,QAAhCA,EAAKvxC,KAAKyC,wBAAqC,IAAP8uC,GAAyBA,EAAGpxC,MAAMC,KAAK,SAAU0E,GAAY,OAAOA,EAAS0sC,iBAAiBz3B,EAAW,EACtJ,EACAm3B,EAAsBlzC,UAAUyzC,sBAAwB,WACpDzkC,EAAK,oDAAuDhN,KAAKmxC,SAA5D,gFAET,EACOD,CACX,CAvC2C,GA4DvCQ,EAA2C,WAC3C,SAASA,EAA0BP,EAAUQ,EAAkBC,GAC3D,IAAIR,EAAQpxC,KACZA,KAAKmxC,SAAWA,EAChBnxC,KAAK2xC,iBAAmBA,EACxB3xC,KAAK4xC,cAAgBA,EACrB5xC,KAAK6xC,MAAQ,KACb7xC,KAAK6xC,MAAQD,EAAc3xC,aAAa,CAAEC,UAAU,IAC/CF,KAAK6xC,OACND,EAAcE,OAAO,SAAUhyC,GAAQ,OAAQsxC,EAAMS,MAAQ/xC,CAAO,EAE5E,CAyEA,OAxEA4xC,EAA0B1zC,UAAUuC,SAAW,SAAU8wC,GACrD,IAAID,EAAQpxC,KACZ,OAAKA,KAAK6xC,MAgBH7xC,KAAK6xC,MAAMtxC,SAAS8wC,GAAcx9B,MAAM,SAAUlO,GAGrD,OAAIA,GAAwB,+BAAfA,EAAMtG,MACf+uC,EAAI,kEACG,MAGAprC,QAAQqC,OAAOM,EAE9B,GAzBW,IAAI3C,QAAQ,SAAUC,EAASoC,GAKlCC,WAAW,WACH8rC,EAAMS,MACNT,EAAM7wC,SAAS8wC,GAAcjxC,KAAK6C,EAASoC,GAG3CpC,EAAQ,KAEhB,EAAG,EACP,EAaR,EACAyuC,EAA0B1zC,UAAUszC,uBAAyB,SAAUv3B,GAG/D/Z,KAAK6xC,MACL7xC,KAAK6xC,MAAME,qBAAqBh4B,GAGhC/Z,KAAK4xC,cACAzxC,MACAC,KAAK,SAAUN,GAAQ,OAAOA,EAAKiyC,qBAAqBh4B,EAAW,EAEhF,EACA23B,EAA0B1zC,UAAUg0C,0BAA4B,SAAUj4B,GACtE/Z,KAAK4xC,cACAzxC,MACAC,KAAK,SAAUN,GAAQ,OAAOA,EAAKmyC,wBAAwBl4B,EAAW,EAC/E,EACA23B,EAA0B1zC,UAAUyzC,sBAAwB,WACxD,IAAIS,EAAe,0DACflyC,KAAKmxC,SADU,iFAIf,eAAgBnxC,KAAK2xC,iBACrBO,GACI,uJAIC,mBAAoBlyC,KAAK2xC,iBAC9BO,GACI,2JAKJA,GACI,kKAIRllC,EAAKklC,EACT,EACOR,CACX,CArF+C,GAuF3CS,EAAuC,WACvC,SAASA,EAAsB1xC,GAC3BT,KAAKS,YAAcA,CACvB,CAeA,OAdA0xC,EAAsBn0C,UAAUuC,SAAW,SAAU8wC,GACjD,OAAOruC,QAAQC,QAAQ,CACnBxC,YAAaT,KAAKS,aAE1B,EACA0xC,EAAsBn0C,UAAUszC,uBAAyB,SAAUv3B,GAG/DA,EAAS/Z,KAAKS,YAClB,EACA0xC,EAAsBn0C,UAAUg0C,0BAA4B,SAAUj4B,GAAY,EAClFo4B,EAAsBn0C,UAAUyzC,sBAAwB,WAAc,EAEtEU,EAAsBC,MAAQ,QACvBD,CACX,CAnB2C,GAqCvCE,EAAmB,IAOnBC,EAAkB,6EAGlBC,EAAwB,KACxBC,EAAY,YACZC,EAAe,eAqBfC,EAA0B,WAS1B,SAASA,EAAS1uC,EAAM2uC,EAAQtN,EAAWuN,EAAeC,EAAWC,EAAgBC,QAC/D,IAAdF,IAAwBA,GAAY,QACjB,IAAnBC,IAA6BA,EAAiB,SACZ,IAAlCC,IAA4CA,GAAgC,GAChF/yC,KAAK2yC,OAASA,EACd3yC,KAAKqlC,UAAYA,EACjBrlC,KAAK4yC,cAAgBA,EACrB5yC,KAAK6yC,UAAYA,EACjB7yC,KAAK8yC,eAAiBA,EACtB9yC,KAAK+yC,8BAAgCA,EACrC/yC,KAAK8vB,MAAQ9rB,EAAK6iC,cAClB7mC,KAAKgzC,QAAUhzC,KAAK8vB,MAAM4gB,OAAO1wC,KAAK8vB,MAAMzY,QAAQ,KAAO,GAC3DrX,KAAKizC,aACDtG,EAAkBxsC,IAAI,QAAU6D,IAAShE,KAAK8vB,KACtD,CAqCA,OApCA4iB,EAAS10C,UAAUk1C,gBAAkB,WACjC,MAA0C,OAAnClzC,KAAKizC,aAAavC,OAAO,EAAG,EACvC,EACAgC,EAAS10C,UAAUm1C,aAAe,WAC9B,MAAyB,mBAAjBnzC,KAAKgzC,SACQ,wBAAjBhzC,KAAKgzC,OACb,EACAxzC,OAAO+kB,eAAemuB,EAAS10C,UAAW,OAAQ,CAC9CmC,IAAK,WACD,OAAOH,KAAK8vB,KAChB,EACAjO,IAAK,SAAUuxB,GACPA,IAAYpzC,KAAKizC,eACjBjzC,KAAKizC,aAAeG,EAChBpzC,KAAKkzC,mBACLvG,EAAkB9qB,IAAI,QAAU7hB,KAAK8vB,MAAO9vB,KAAKizC,cAG7D,EACAI,YAAY,EACZC,cAAc,IAElBZ,EAAS10C,UAAU4D,SAAW,WAC1B,IAAI2pB,EAAMvrB,KAAKuzC,cAIf,OAHIvzC,KAAK8yC,iBACLvnB,GAAO,IAAMvrB,KAAK8yC,eAAiB,KAEhCvnB,CACX,EACAmnB,EAAS10C,UAAUu1C,YAAc,WAC7B,IAAIC,EAAWxzC,KAAK2yC,OAAS,WAAa,UACtCc,EAAQzzC,KAAK+yC,8BACX,OAAS/yC,KAAKqlC,UACd,GACN,MAAO,GAAKmO,EAAWxzC,KAAKgE,KAAO,IAAMyvC,CAC7C,EACOf,CACX,CA7D8B,GA0E9B,SAASgB,EAAsBC,EAAUphC,EAAM4K,GAG3C,IAAIy2B,EACJ,GAHA3F,iBAAuB,kBAAT17B,EAAmB,8BACjC07B,iBAAyB,kBAAX9wB,EAAqB,gCAE/B5K,IAASigC,EACToB,GACKD,EAAShB,OAAS,SAAW,SAAWgB,EAASV,aAAe,YAEpE,IAAI1gC,IAASkgC,EAOd,MAAM,IAAI9yC,MAAM,4BAA8B4S,GAN9CqhC,GACKD,EAAShB,OAAS,WAAa,WAC5BgB,EAASV,aACT,OAIZ,EA5BJ,SAAiCU,GAC7B,OAAQA,EAAS3vC,OAAS2vC,EAASV,cAC/BU,EAASR,gBACTQ,EAASZ,6BACjB,EAyBQc,CAAwBF,KACxBx2B,EAAW,GAAIw2B,EAAStO,WAE5B,IAAIyO,EAAQ,GAIZ,OAHApE,EAAKvyB,EAAQ,SAAU9b,EAAKiB,GACxBwxC,EAAM38B,KAAK9V,EAAM,IAAMiB,EAC3B,GACOsxC,EAAUE,EAAM9kB,KAAK,IAChC,CAqBA,IAAI+kB,EAAiC,WACjC,SAASA,IACL/zC,KAAKg0C,UAAY,CAAC,CACtB,CAWA,OAVAD,EAAgB/1C,UAAUi2C,iBAAmB,SAAUrwC,EAAMswC,QAC1C,IAAXA,IAAqBA,EAAS,GAC7BlrC,mBAAShJ,KAAKg0C,UAAWpwC,KAC1B5D,KAAKg0C,UAAUpwC,GAAQ,GAE3B5D,KAAKg0C,UAAUpwC,IAASswC,CAC5B,EACAH,EAAgB/1C,UAAUmC,IAAM,WAC5B,OAAOg0C,mBAASn0C,KAAKg0C,UACzB,EACOD,CACX,CAfqC,GAiCjCK,GAAc,CAAC,EACfC,GAAY,CAAC,EACjB,SAASC,GAA0BX,GAC/B,IAAIY,EAAaZ,EAAS/xC,WAI1B,OAHKwyC,GAAYG,KACbH,GAAYG,GAAc,IAAIR,GAE3BK,GAAYG,EACvB,CA6BA,IAAIC,GAAgC,WAIhC,SAASA,EAAeC,GACpBz0C,KAAKy0C,WAAaA,EAClBz0C,KAAK00C,iBAAmB,GACxB10C,KAAK20C,mBAAqB,EAC1B30C,KAAK40C,oBAAsB,EAC3B50C,KAAK60C,QAAU,IACnB,CA8CA,OA7CAL,EAAex2C,UAAU82C,WAAa,SAAUC,EAAaxmC,GACzDvO,KAAK40C,mBAAqBG,EAC1B/0C,KAAK60C,QAAUtmC,EACXvO,KAAK40C,mBAAqB50C,KAAK20C,qBAC/B30C,KAAK60C,UACL70C,KAAK60C,QAAU,KAEvB,EAMAL,EAAex2C,UAAUg3C,eAAiB,SAAUC,EAAYzzC,GAC5D,IAAI4vC,EAAQpxC,KACZA,KAAK00C,iBAAiBO,GAAczzC,EAwBpC,IAvBA,IAAI0zC,EAAU,WACV,IAAIC,EAAYC,EAAOV,iBAAiBU,EAAOT,2BACxCS,EAAOV,iBAAiBU,EAAOT,oBAQtC,IAPA,IAAIU,EAAU,SAAUntC,GAChBitC,EAAUjtC,IACV6oC,EAAe,WACXK,EAAMqD,WAAWU,EAAUjtC,GAC/B,EAER,EACSA,EAAI,EAAGA,EAAIitC,EAAUrtC,SAAUI,EACpCmtC,EAAQntC,GAEZ,GAAIktC,EAAOT,qBAAuBS,EAAOR,mBAKrC,OAJIQ,EAAOP,UACPO,EAAOP,UACPO,EAAOP,QAAU,MAEd,QAEXO,EAAOT,oBACX,EACIS,EAASp1C,KACNA,KAAK00C,iBAAiB10C,KAAK20C,qBAAqB,CAEnD,GAAgB,UADFO,IAEV,KACR,CACJ,EACOV,CACX,CAzDoC,GA4EhCc,GAAgC,QA+BhCC,GAAuC,WAYvC,SAASA,EAAsBC,EAAQ7B,EAAU8B,EAAejxC,EAAezD,EAAW20C,EAAoBC,GAC1G,IAAIvE,EAAQpxC,KACZA,KAAKw1C,OAASA,EACdx1C,KAAK2zC,SAAWA,EAChB3zC,KAAKy1C,cAAgBA,EACrBz1C,KAAKwE,cAAgBA,EACrBxE,KAAKe,UAAYA,EACjBf,KAAK01C,mBAAqBA,EAC1B11C,KAAK21C,cAAgBA,EACrB31C,KAAK41C,UAAY,EACjB51C,KAAK61C,cAAgB,EACrB71C,KAAK81C,gBAAiB,EACtB91C,KAAK+1C,KAAO1H,EAAWmH,GACvBx1C,KAAKg2C,OAAS1B,GAA0BX,GACxC3zC,KAAKi2C,MAAQ,SAAU94B,GAKnB,OAHIi0B,EAAM5sC,gBACN2Y,EAAOo1B,GAAyBnB,EAAM5sC,eAEnCkvC,EAAsBC,EAAUlB,EAAct1B,EACzD,CACJ,CA6OA,OAxOAo4B,EAAsBv3C,UAAUqb,KAAO,SAAUvK,EAAWonC,GACxD,IAAI9E,EAAQpxC,KACZA,KAAKm2C,cAAgB,EACrBn2C,KAAKo2C,cAAgBF,EACrBl2C,KAAKq2C,gBAAkB,IAAI7B,GAAe1lC,GAC1C9O,KAAKs2C,WAAY,EACjBt2C,KAAKu2C,qBAAuBjxC,WAAW,WACnC8rC,EAAM2E,KAAK,gCAEX3E,EAAMoF,YACNpF,EAAMmF,qBAAuB,IAEjC,EAAGhiC,KAAKC,MAtDS,MA52BC,SAAUm7B,GAChC,GAAI8G,uBAAuC,aAAxBziB,SAAS0G,WACxBiV,QAEC,CAGD,IAAI+G,GAAW,EACXC,EAAc,WACT3iB,SAAS3vB,KAITqyC,IACDA,GAAW,EACX/G,KALArqC,WAAWqxC,EAAapiC,KAAKC,MAAM,IAO3C,EACIwf,SAAS/lB,kBACT+lB,SAAS/lB,iBAAiB,mBAAoB0oC,GAAa,GAE3D/iB,OAAO3lB,iBAAiB,OAAQ0oC,GAAa,IAGxC3iB,SAAS4iB,cAGd5iB,SAAS4iB,YAAY,qBAAsB,WACX,aAAxB5iB,SAAS0G,YACTic,GAER,GAGA/iB,OAAOgjB,YAAY,SAAUD,GAKrC,CACJ,CA43BQE,CAAoB,WAChB,IAAIzF,EAAMkF,UAAV,CAIAlF,EAAM0F,gBAAkB,IAAIC,GAA2B,WAEnD,IADA,IAAIt3B,EAAO,GACFiuB,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCjuB,EAAKiuB,GAAMC,UAAUD,GAEzB,IAAI6D,EAAKhD,iBAAO9uB,EAAM,GAAIu3B,EAAUzF,EAAG,GAAI0F,EAAO1F,EAAG,GAAI2F,EAAO3F,EAAG,GAEnE,GAFuEA,EAAG,GAAIA,EAAG,GACjFH,EAAM+F,wBAAwB13B,GACzB2xB,EAAM0F,gBAQX,GALI1F,EAAMmF,uBACNrwC,aAAakrC,EAAMmF,sBACnBnF,EAAMmF,qBAAuB,MAEjCnF,EAAM0E,gBAAiB,EACnBkB,IAAY1B,GACZlE,EAAMpE,GAAKiK,EACX7F,EAAMgG,SAAWF,MAEhB,IA1GiB,UA0GbF,EAiBL,MAAM,IAAIr3C,MAAM,kCAAoCq3C,GAfhDC,GAGA7F,EAAM0F,gBAAgBO,cAAe,EAGrCjG,EAAMiF,gBAAgBvB,WAAWmC,EAAM,WACnC7F,EAAMoF,WACV,IAGApF,EAAMoF,WAKd,CACJ,EAAG,WAEC,IADA,IAAI/2B,EAAO,GACFiuB,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCjuB,EAAKiuB,GAAMC,UAAUD,GAEzB,IAAI6D,EAAKhD,iBAAO9uB,EAAM,GAAI63B,EAAK/F,EAAG,GAAI/vC,EAAO+vC,EAAG,GAChDH,EAAM+F,wBAAwB13B,GAC9B2xB,EAAMiF,gBAAgBrB,eAAesC,EAAI91C,EAC7C,EAAG,WACC4vC,EAAMoF,WACV,EAAGpF,EAAM6E,OAGT,IAAIzwB,EAAY,CAAC,EACjBA,EAAU8vB,IAAiC,IAC3C9vB,EAAwC,IAAIjR,KAAKC,MAAsB,IAAhBD,KAAKuL,UACxDsxB,EAAM0F,gBAAgBS,2BACtB/xB,EAA6C,GAAI4rB,EAAM0F,gBAAgBS,0BAE3E/xB,EAAuB,EAAI6sB,EACvBjB,EAAMsE,qBACNlwB,EAAiC,EAAI4rB,EAAMsE,oBAE3CtE,EAAMuE,gBACNnwB,EAA4B,GAAI4rB,EAAMuE,eAEtCvE,EAAMqE,gBACNjwB,EAA8B,EAAI4rB,EAAMqE,eAExCrE,EAAM5sC,gBACNghB,EAAU+sB,GAAyBnB,EAAM5sC,eAErB,qBAAb+M,UACPA,SAASimC,UACTlF,EAAgBnjB,KAAK5d,SAASimC,YAC9BhyB,EAAuB,EAxcvB,KA0cJ,IAAIiyB,EAAarG,EAAM6E,MAAMzwB,GAC7B4rB,EAAM2E,KAAK,+BAAiC0B,GAC5CrG,EAAM0F,gBAAgBY,OAAOD,EAAY,WACrC,EAhFJ,CAkFJ,EACJ,EAIAlC,EAAsBv3C,UAAUkiB,MAAQ,WACpClgB,KAAK82C,gBAAgBa,cAAc33C,KAAKgtC,GAAIhtC,KAAKo3C,UACjDp3C,KAAK43C,uBAAuB53C,KAAKgtC,GAAIhtC,KAAKo3C,SAC9C,EAIA7B,EAAsBsC,WAAa,WAC/BtC,EAAsBuC,aAAc,CACxC,EAIAvC,EAAsBwC,cAAgB,WAClCxC,EAAsByC,gBAAiB,CAC3C,EAEAzC,EAAsBlR,YAAc,WAChC,OAAIoS,0BAGKlB,EAAsBuC,cAMlBvC,EAAsByC,gBACP,qBAAbhkB,UACmB,MAA1BA,SAASikB,iBA5zBO,kBAAXrkB,QACbA,OAAe,QACfA,OAAe,OAAa,YAC3B,UAAUzE,KAAKyE,OAAOriB,SAASE,UAOV,kBAAZymC,SAA8C,kBAAfA,QAAQC,IAszBrD,EAIA5C,EAAsBv3C,UAAUo6C,sBAAwB,WAAc,EAItE7C,EAAsBv3C,UAAUq6C,UAAY,WACxCr4C,KAAKs2C,WAAY,EACbt2C,KAAK82C,kBACL92C,KAAK82C,gBAAgBhtC,QACrB9J,KAAK82C,gBAAkB,MAGvB92C,KAAKs4C,iBACLtkB,SAAS3vB,KAAKk0C,YAAYv4C,KAAKs4C,gBAC/Bt4C,KAAKs4C,eAAiB,MAEtBt4C,KAAKu2C,uBACLrwC,aAAalG,KAAKu2C,sBAClBv2C,KAAKu2C,qBAAuB,KAEpC,EAIAhB,EAAsBv3C,UAAUw4C,UAAY,WACnCx2C,KAAKs2C,YACNt2C,KAAK+1C,KAAK,8BACV/1C,KAAKq4C,YACDr4C,KAAKo2C,gBACLp2C,KAAKo2C,cAAcp2C,KAAK81C,gBACxB91C,KAAKo2C,cAAgB,MAGjC,EAKAb,EAAsBv3C,UAAU8L,MAAQ,WAC/B9J,KAAKs2C,YACNt2C,KAAK+1C,KAAK,6BACV/1C,KAAKq4C,YAEb,EAMA9C,EAAsBv3C,UAAUob,KAAO,SAAU5X,GAC7C,IAAIg3C,EAAU7zC,oBAAUnD,GACxBxB,KAAK41C,WAAa4C,EAAQ1wC,OAC1B9H,KAAKg2C,OAAO/B,iBAAiB,aAAcuE,EAAQ1wC,QAQnD,IANA,IAAI2wC,EAAaC,uBAAaF,GAG1B/I,EAAWF,EAAkBkJ,EAzPlBE,MA4PNzwC,EAAI,EAAGA,EAAIunC,EAAS3nC,OAAQI,IACjClI,KAAK82C,gBAAgB8B,eAAe54C,KAAKm2C,cAAe1G,EAAS3nC,OAAQ2nC,EAASvnC,IAClFlI,KAAKm2C,eAEb,EAMAZ,EAAsBv3C,UAAU45C,uBAAyB,SAAU5K,EAAI6L,GACnE,IAAIpC,sBAAJ,CAGAz2C,KAAKs4C,eAAiBtkB,SAASikB,cAAc,UAC7C,IAAIzyB,EAAY,CAChBA,OAA2D,KAC3DA,EAAoC,GAAIwnB,EACxCxnB,EAAoC,GAAIqzB,EACxC74C,KAAKs4C,eAAeQ,IAAM94C,KAAKi2C,MAAMzwB,GACrCxlB,KAAKs4C,eAAeS,MAAMC,QAAU,OACpChlB,SAAS3vB,KAAK40C,YAAYj5C,KAAKs4C,eAR/B,CASJ,EAIA/C,EAAsBv3C,UAAUm5C,wBAA0B,SAAU13B,GAEhE,IAAIo2B,EAAgBlxC,oBAAU8a,GAAM3X,OACpC9H,KAAK61C,eAAiBA,EACtB71C,KAAKg2C,OAAO/B,iBAAiB,iBAAkB4B,EACnD,EACON,CACX,CA/Q2C,GAmRvCwB,GAA4C,WAO5C,SAASA,EAA2BmC,EAAWC,EAAajD,EAAcD,GAiBtE,GAhBAj2C,KAAKk2C,aAAeA,EACpBl2C,KAAKi2C,MAAQA,EAGbj2C,KAAKo5C,oBAAsB,IAAIhpB,IAE/BpwB,KAAKq5C,YAAc,GAMnBr5C,KAAKs5C,cAAgB/kC,KAAKC,MAAsB,IAAhBD,KAAKuL,UAGrC9f,KAAKq3C,cAAe,EACfZ,sBAkCDz2C,KAAKk5C,UAAYA,EACjBl5C,KAAKm5C,YAAcA,MAnCL,CAKdn5C,KAAKu3C,yBAA2BxK,IAChCnZ,OA9U4B,aA8Ue5zB,KAAKu3C,0BAA4B2B,EAC5EtlB,OA9UyB,UA8Ue5zB,KAAKu3C,0BAA4B4B,EAEzEn5C,KAAKu5C,SAAWxC,EAA2ByC,gBAE3C,IAAIC,EAAS,GAGb,GAAIz5C,KAAKu5C,SAAST,KACwC,gBAAtD94C,KAAKu5C,SAAST,IAAIpI,OAAO,EAAG,IAE5B+I,EAAS,4BADWzlB,SAAS0lB,OAC0B,eAE3D,IAAIC,EAAiB,eAAiBF,EAAS,iBAC/C,IACIz5C,KAAKu5C,SAASK,IAAIvgC,OAClBrZ,KAAKu5C,SAASK,IAAIC,MAAMF,GACxB35C,KAAKu5C,SAASK,IAAI9vC,OACtB,CACA,MAAOpG,GACH0qC,EAAI,2BACA1qC,EAAEstC,OACF5C,EAAI1qC,EAAEstC,OAEV5C,EAAI1qC,EACR,CACJ,CAKJ,CA6OA,OAxOAqzC,EAA2ByC,cAAgB,WACvC,IAAIM,EAAS9lB,SAASikB,cAAc,UAGpC,GAFA6B,EAAOf,MAAMC,QAAU,QAEnBhlB,SAAS3vB,KAuBT,KAAM,oGAtBN2vB,SAAS3vB,KAAK40C,YAAYa,GAC1B,IAIYA,EAAOC,cAAc/lB,UAGzBoa,EAAI,gCAEZ,CACA,MAAO1qC,GACH,IAAIg2C,EAAS1lB,SAAS0lB,OACtBI,EAAOhB,IACH,gEACIY,EACA,0BACZ,CAmBJ,OAXII,EAAOE,gBACPF,EAAOF,IAAME,EAAOE,gBAEfF,EAAOC,cACZD,EAAOF,IAAME,EAAOC,cAAc/lB,SAG7B8lB,EAAO9lB,WAEZ8lB,EAAOF,IAAME,EAAO9lB,UAEjB8lB,CACX,EAIA/C,EAA2B/4C,UAAU8L,MAAQ,WACzC,IAAIsnC,EAAQpxC,KAEZA,KAAKi6C,OAAQ,EACTj6C,KAAKu5C,WAILv5C,KAAKu5C,SAASK,IAAIv1C,KAAK61C,UAAY,GACnC50C,WAAW,WACgB,OAAnB8rC,EAAMmI,WACNvlB,SAAS3vB,KAAKk0C,YAAYnH,EAAMmI,UAChCnI,EAAMmI,SAAW,KAEzB,EAAGhlC,KAAKC,MAAM,KAGlB,IAAI0hC,EAAel2C,KAAKk2C,aACpBA,IACAl2C,KAAKk2C,aAAe,KACpBA,IAER,EAMAa,EAA2B/4C,UAAU25C,cAAgB,SAAU3K,EAAI6L,GAK/D,IAJA74C,KAAKm6C,KAAOnN,EACZhtC,KAAKo6C,KAAOvB,EACZ74C,KAAKi6C,OAAQ,EAENj6C,KAAKq6C,gBAChB,EAQAtD,EAA2B/4C,UAAUq8C,YAAc,WAI/C,GAAIr6C,KAAKi6C,OACLj6C,KAAKq3C,cACLr3C,KAAKo5C,oBAAoB53B,MAAQxhB,KAAKq5C,YAAYvxC,OAAS,EAAI,EAAI,GAAI,CAEvE9H,KAAKs5C,gBACL,IAAI9zB,EAAY,CAAC,EACjBA,EAAoC,GAAIxlB,KAAKm6C,KAC7C30B,EAAoC,GAAIxlB,KAAKo6C,KAC7C50B,EAAwC,IAAIxlB,KAAKs5C,cAKjD,IAJA,IAAIgB,EAASt6C,KAAKi2C,MAAMzwB,GAEpB+0B,EAAgB,GAChBryC,EAAI,EACDlI,KAAKq5C,YAAYvxC,OAAS,GAAG,CAGhC,KADc9H,KAAKq5C,YAAY,GACnBmB,EAAE1yC,OAhdR,GAkdFyyC,EAAczyC,QAndV,MA2eJ,MArBA,IAAI2yC,EAASz6C,KAAKq5C,YAAYqB,QAC9BH,EACIA,SAGIryC,EACA,IACAuyC,EAAOE,IALXJ,MAQIryC,EACA,IACAuyC,EAAOG,GAVXL,KAaIryC,EACA,IACAuyC,EAAOD,EACftyC,GAKR,CAGA,OAFAoyC,GAAkBC,EAClBv6C,KAAK66C,gBAAgBP,EAAQt6C,KAAKs5C,gBAC3B,CACX,CAEI,OAAO,CAEf,EAOAvC,EAA2B/4C,UAAU46C,eAAiB,SAAUkC,EAAQC,EAAWv5C,GAE/ExB,KAAKq5C,YAAYliC,KAAK,CAAEwjC,IAAKG,EAAQF,GAAIG,EAAWP,EAAGh5C,IAGnDxB,KAAKi6C,OACLj6C,KAAKq6C,aAEb,EAMAtD,EAA2B/4C,UAAU68C,gBAAkB,SAAUx3C,EAAK23C,GAClE,IAAI5J,EAAQpxC,KAEZA,KAAKo5C,oBAAoBjoB,IAAI6pB,GAC7B,IAAIC,EAAe,WACf7J,EAAMgI,oBAAoBr2C,OAAOi4C,GACjC5J,EAAMiJ,aACV,EAGIa,EAAmB51C,WAAW21C,EAAc1mC,KAAKC,MA5gB5B,OAmhBzBxU,KAAK03C,OAAOr0C,EANO,WAEf6C,aAAag1C,GAEbD,GACJ,EAEJ,EAMAlE,EAA2B/4C,UAAU05C,OAAS,SAAUr0C,EAAK83C,GACzD,IAAI/J,EAAQpxC,KACRy2C,sBAEAz2C,KAAKo7C,eAAe/3C,EAAK83C,GAGzB71C,WAAW,WACP,IAEI,IAAK8rC,EAAMiG,aACP,OAEJ,IAAIgE,EAAcjK,EAAMmI,SAASK,IAAI3B,cAAc,UACnDoD,EAAY9oC,KAAO,kBACnB8oC,EAAYC,OAAQ,EACpBD,EAAYvC,IAAMz1C,EAElBg4C,EAAYE,OAASF,EAAYG,mBAAqB,WAElD,IAAIC,EAASJ,EAAY3gB,WACpB+gB,GAAqB,WAAXA,GAAkC,aAAXA,IAElCJ,EAAYE,OAASF,EAAYG,mBAAqB,KAClDH,EAAYK,YACZL,EAAYK,WAAWnD,YAAY8C,GAEvCF,IAER,EACAE,EAAYvR,QAAU,WAClBsE,EAAI,oCAAsC/qC,GAC1C+tC,EAAMiG,cAAe,EACrBjG,EAAMtnC,OACV,EACAsnC,EAAMmI,SAASK,IAAIv1C,KAAK40C,YAAYoC,EACxC,CACA,MAAO33C,GACH,CAER,EAAG6Q,KAAKC,MAAM,GAEtB,EACOuiC,CACX,CA3SgD,GA+T5C4E,GAAgB,KACQ,qBAAjBC,aACPD,GAAgBC,aAEU,qBAAdC,YACZF,GAAgBE,WAKpB,IAAIC,GAAqC,WAYrC,SAASA,EAAoBtG,EAAQ7B,EAAU8B,EAAejxC,EAAezD,EAAW20C,EAAoBC,GACxG31C,KAAKw1C,OAASA,EACdx1C,KAAKy1C,cAAgBA,EACrBz1C,KAAKwE,cAAgBA,EACrBxE,KAAKe,UAAYA,EACjBf,KAAK+7C,eAAiB,KACtB/7C,KAAKg8C,OAAS,KACdh8C,KAAKi8C,YAAc,EACnBj8C,KAAK41C,UAAY,EACjB51C,KAAK61C,cAAgB,EACrB71C,KAAK+1C,KAAO1H,EAAWruC,KAAKw1C,QAC5Bx1C,KAAKg2C,OAAS1B,GAA0BX,GACxC3zC,KAAK4zC,QAAUkI,EAAoBI,eAAevI,EAAU+B,EAAoBC,EAAenxC,GAC/FxE,KAAK6yC,UAAYc,EAASd,SAC9B,CA2SA,OAnSAiJ,EAAoBI,eAAiB,SAAUvI,EAAU+B,EAAoBC,EAAenxC,GACxF,IAAIghB,EAAY,CAAC,EAiBjB,OAhBAA,EAAuB,EAAI6sB,GACtBoE,uBACmB,qBAAbllC,UACPA,SAASimC,UACTlF,EAAgBnjB,KAAK5d,SAASimC,YAC9BhyB,EAAuB,EA38BnB,KA68BJkwB,IACAlwB,EAAiC,EAAIkwB,GAErCC,IACAnwB,EAA4B,GAAImwB,GAEhCnxC,IACAghB,EAAU+sB,GAAyB/tC,GAEhCkvC,EAAsBC,EAAUnB,EAAWhtB,EACtD,EAKAs2B,EAAoB99C,UAAUqb,KAAO,SAAUvK,EAAWonC,GACtD,IAAI9E,EAAQpxC,KACZA,KAAKk2C,aAAeA,EACpBl2C,KAAK8O,UAAYA,EACjB9O,KAAK+1C,KAAK,2BAA6B/1C,KAAK4zC,SAC5C5zC,KAAK81C,gBAAiB,EAEtBnJ,EAAkB9qB,IAAI,8BAA8B,GACpD,IACI,GAAI40B,sBAAa,CACb,IAAI0F,EAASn8C,KAAK6yC,UAAY,YAAc,OAExC/uC,EAAU,CACVQ,QAAS,CACL,aAAc,cAAuCi1B,EAAc,IAAM6iB,EAAQC,SAAW,IAAMF,EAClG,mBAAoBn8C,KAAKy1C,eAAiB,KAQ9Cz1C,KAAKe,YACL+C,EAAQQ,QAAuB,cAAI,UAAYtE,KAAKe,WAEpDf,KAAKwE,gBACLV,EAAQQ,QAAQ,uBAAyBtE,KAAKwE,eAGlD,IAAI83C,EAAMF,uKACNG,EAA2C,IAAnCv8C,KAAK4zC,QAAQv8B,QAAQ,UAC3BilC,EAAiB,aAAKA,EAAiB,YACvCA,EAAgB,YAAKA,EAAgB,WACvCC,IACAz4C,EAAe,MAAI,CAAEN,OAAQ+4C,IAEjCv8C,KAAKw8C,OAAS,IAAIb,GAAc37C,KAAK4zC,QAAS,GAAI9vC,EACtD,KACK,CACGA,EAAU,CACVQ,QAAS,CACL,mBAAoBtE,KAAKy1C,eAAiB,GAC1C,sBAAuBz1C,KAAKwE,eAAiB,KAGrDxE,KAAKw8C,OAAS,IAAIb,GAAc37C,KAAK4zC,QAAS,GAAI9vC,EACtD,CACJ,CACA,MAAOJ,GACH1D,KAAK+1C,KAAK,kCACV,IAAIpwC,EAAQjC,EAAEpE,SAAWoE,EAAElC,KAK3B,OAJImE,GACA3F,KAAK+1C,KAAKpwC,QAEd3F,KAAKw2C,WAET,CACAx2C,KAAKw8C,OAAOC,OAAS,WACjBrL,EAAM2E,KAAK,wBACX3E,EAAM0E,gBAAiB,CAC3B,EACA91C,KAAKw8C,OAAOE,QAAU,WAClBtL,EAAM2E,KAAK,0CACX3E,EAAMoL,OAAS,KACfpL,EAAMoF,WACV,EACAx2C,KAAKw8C,OAAOG,UAAY,SAAUC,GAC9BxL,EAAMyL,oBAAoBD,EAC9B,EACA58C,KAAKw8C,OAAO1S,QAAU,SAAUpmC,GAC5B0tC,EAAM2E,KAAK,yCAEX,IAAIpwC,EAAQjC,EAAEpE,SAAWoE,EAAElC,KACvBmE,GACAyrC,EAAM2E,KAAKpwC,GAEfyrC,EAAMoF,WACV,CACJ,EAIAsF,EAAoB99C,UAAUkiB,MAAQ,WAAc,EACpD47B,EAAoB/D,cAAgB,WAChC+D,EAAoB9D,gBAAiB,CACzC,EACA8D,EAAoBzX,YAAc,WAC9B,IAAIyY,GAAe,EACnB,GAAyB,qBAAdjqC,WAA6BA,UAAUkqC,UAAW,CACzD,IACIC,EAAkBnqC,UAAUkqC,UAAUnlC,MADpB,kCAElBolC,GAAmBA,EAAgBl1C,OAAS,GACxCm1C,WAAWD,EAAgB,IAAM,MACjCF,GAAe,EAG3B,CACA,OAASA,GACa,OAAlBnB,KACCG,EAAoB9D,cAC7B,EAIA8D,EAAoBoB,iBAAmB,WAGnC,OAAQvQ,EAAkBJ,oBACkC,IAAxDI,EAAkBxsC,IAAI,6BAC9B,EACA27C,EAAoB99C,UAAUo6C,sBAAwB,WAClDzL,EAAkBP,OAAO,6BAC7B,EACA0P,EAAoB99C,UAAUm/C,aAAe,SAAU37C,GAEnD,GADAxB,KAAKg8C,OAAO7kC,KAAK3V,GACbxB,KAAKg8C,OAAOl0C,SAAW9H,KAAKi8C,YAAa,CACzC,IAAImB,EAAWp9C,KAAKg8C,OAAOhtB,KAAK,IAChChvB,KAAKg8C,OAAS,KACd,IAAIqB,EAAWlR,mBAASiR,GAExBp9C,KAAK8O,UAAUuuC,EACnB,CACJ,EAIAvB,EAAoB99C,UAAUs/C,qBAAuB,SAAUC,GAC3Dv9C,KAAKi8C,YAAcsB,EACnBv9C,KAAKg8C,OAAS,EAClB,EAKAF,EAAoB99C,UAAUw/C,mBAAqB,SAAUh8C,GAIzD,GAHAysC,iBAAuB,OAAhBjuC,KAAKg8C,OAAiB,kCAGzBx6C,EAAKsG,QAAU,EAAG,CAClB,IAAIy1C,EAAa97C,OAAOD,GACxB,IAAKe,MAAMg7C,GAEP,OADAv9C,KAAKs9C,qBAAqBC,GACnB,IAEf,CAEA,OADAv9C,KAAKs9C,qBAAqB,GACnB97C,CACX,EAKAs6C,EAAoB99C,UAAU6+C,oBAAsB,SAAUY,GAC1D,GAAoB,OAAhBz9C,KAAKw8C,OAAT,CAGA,IAAIh7C,EAAOi8C,EAAW,KAItB,GAHAz9C,KAAK61C,eAAiBr0C,EAAKsG,OAC3B9H,KAAKg2C,OAAO/B,iBAAiB,iBAAkBzyC,EAAKsG,QACpD9H,KAAK09C,iBACe,OAAhB19C,KAAKg8C,OAELh8C,KAAKm9C,aAAa37C,OAEjB,CAED,IAAIm8C,EAAgB39C,KAAKw9C,mBAAmBh8C,GACtB,OAAlBm8C,GACA39C,KAAKm9C,aAAaQ,EAE1B,CAfA,CAgBJ,EAKA7B,EAAoB99C,UAAUob,KAAO,SAAU5X,GAC3CxB,KAAK09C,iBACL,IAAIlF,EAAU7zC,oBAAUnD,GACxBxB,KAAK41C,WAAa4C,EAAQ1wC,OAC1B9H,KAAKg2C,OAAO/B,iBAAiB,aAAcuE,EAAQ1wC,QAGnD,IAAI2nC,EAAWF,EAAkBiJ,EA9PV,OAgQnB/I,EAAS3nC,OAAS,GAClB9H,KAAK49C,YAAYr2C,OAAOkoC,EAAS3nC,SAGrC,IAAK,IAAII,EAAI,EAAGA,EAAIunC,EAAS3nC,OAAQI,IACjClI,KAAK49C,YAAYnO,EAASvnC,GAElC,EACA4zC,EAAoB99C,UAAUq6C,UAAY,WACtCr4C,KAAKs2C,WAAY,EACbt2C,KAAK+7C,iBACL8B,cAAc79C,KAAK+7C,gBACnB/7C,KAAK+7C,eAAiB,MAEtB/7C,KAAKw8C,SACLx8C,KAAKw8C,OAAO1yC,QACZ9J,KAAKw8C,OAAS,KAEtB,EACAV,EAAoB99C,UAAUw4C,UAAY,WACjCx2C,KAAKs2C,YACNt2C,KAAK+1C,KAAK,+BACV/1C,KAAKq4C,YAEDr4C,KAAKk2C,eACLl2C,KAAKk2C,aAAal2C,KAAK81C,gBACvB91C,KAAKk2C,aAAe,MAGhC,EAKA4F,EAAoB99C,UAAU8L,MAAQ,WAC7B9J,KAAKs2C,YACNt2C,KAAK+1C,KAAK,6BACV/1C,KAAKq4C,YAEb,EAKAyD,EAAoB99C,UAAU0/C,eAAiB,WAC3C,IAAItM,EAAQpxC,KACZ69C,cAAc79C,KAAK+7C,gBACnB/7C,KAAK+7C,eAAiB+B,YAAY,WAE1B1M,EAAMoL,QACNpL,EAAMwM,YAAY,KAEtBxM,EAAMsM,gBAEV,EAAGnpC,KAAKC,MArTmB,MAsT/B,EAMAsnC,EAAoB99C,UAAU4/C,YAAc,SAAUryB,GAIlD,IACIvrB,KAAKw8C,OAAOpjC,KAAKmS,EACrB,CACA,MAAO7nB,GACH1D,KAAK+1C,KAAK,0CAA2CryC,EAAEpE,SAAWoE,EAAElC,KAAM,uBAC1E8D,WAAWtF,KAAKw2C,UAAUtpB,KAAKltB,MAAO,EAC1C,CACJ,EAIA87C,EAAoBiC,6BAA+B,EAInDjC,EAAoBkC,eAAiB,IAC9BlC,CACX,CAtUyC,GA+VrCmC,GAAkC,WAIlC,SAASA,EAAiBtK,GACtB3zC,KAAKk+C,gBAAgBvK,EACzB,CA8DA,OA7DAn0C,OAAO+kB,eAAe05B,EAAkB,iBAAkB,CACtD99C,IAAK,WACD,MAAO,CAACo1C,GAAuBuG,GACnC,EACAzI,YAAY,EACZC,cAAc,IAElB2K,EAAiBjgD,UAAUkgD,gBAAkB,SAAUvK,GACnD,IAAIwK,EAAK5M,EACL6M,EAAwBtC,IAAuBA,GAAiC,cAChFuC,EAAuBD,IAA0BtC,GAAoBoB,mBAOzE,GANIvJ,EAASf,gBACJwL,GACDpxC,EAAK,mFAETqxC,GAAuB,GAEvBA,EACAr+C,KAAKs+C,YAAc,CAACxC,QAEnB,CACD,IAAIyC,EAAcv+C,KAAKs+C,YAAc,GACrC,IACI,IAAK,IAAIE,EAAKC,mBAASR,EAAiBS,gBAAiBC,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CAC/F,IAAI0tC,EAAYF,EAAGr8C,MACfu8C,GAAaA,EAAuB,eACpCN,EAAWpnC,KAAK0nC,EAExB,CACJ,CACA,MAAOC,GAASX,EAAM,CAAEx4C,MAAOm5C,EAAS,CAAC,QAErC,IACQH,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIL,EAAK,MAAMA,EAAIx4C,KAAO,CACxC,CACJ,CACJ,EAIAs4C,EAAiBjgD,UAAUghD,iBAAmB,WAC1C,GAAIh/C,KAAKs+C,YAAYx2C,OAAS,EAC1B,OAAO9H,KAAKs+C,YAAY,GAGxB,MAAM,IAAI3+C,MAAM,0BAExB,EAIAs+C,EAAiBjgD,UAAUihD,iBAAmB,WAC1C,OAAIj/C,KAAKs+C,YAAYx2C,OAAS,EACnB9H,KAAKs+C,YAAY,GAGjB,IAEf,EACOL,CACX,CArEsC,GA+GlCiB,GAA4B,WAa5B,SAASA,EAAWlS,EAAImS,EAAWC,EAAgBC,EAAgBC,EAAY7K,EAAY8K,EAAUnJ,EAAeoJ,EAAS7J,GACzH31C,KAAKgtC,GAAKA,EACVhtC,KAAKm/C,UAAYA,EACjBn/C,KAAKo/C,eAAiBA,EACtBp/C,KAAKq/C,eAAiBA,EACtBr/C,KAAKs/C,WAAaA,EAClBt/C,KAAKy0C,WAAaA,EAClBz0C,KAAKu/C,SAAWA,EAChBv/C,KAAKo2C,cAAgBA,EACrBp2C,KAAKw/C,QAAUA,EACfx/C,KAAK21C,cAAgBA,EACrB31C,KAAKy/C,gBAAkB,EACvBz/C,KAAK0/C,oBAAsB,GAC3B1/C,KAAK2/C,OAAS,EACd3/C,KAAK+1C,KAAO1H,EAAW,KAAOruC,KAAKgtC,GAAK,KACxChtC,KAAK4/C,kBAAoB,IAAI3B,GAAiBkB,GAC9Cn/C,KAAK+1C,KAAK,sBACV/1C,KAAK2e,QACT,CA8YA,OA1YAugC,EAAWlhD,UAAU2gB,OAAS,WAC1B,IAAIyyB,EAAQpxC,KACR6/C,EAAO7/C,KAAK4/C,kBAAkBZ,mBAClCh/C,KAAK8/C,MAAQ,IAAID,EAAK7/C,KAAK+/C,mBAAoB//C,KAAKm/C,UAAWn/C,KAAKo/C,eAAgBp/C,KAAKq/C,eAAgBr/C,KAAKs/C,WAAY,KAAMt/C,KAAK21C,eAGrI31C,KAAKggD,0BAA4BH,EAAmC,8BAAK,EACzE,IAAII,EAAoBjgD,KAAKkgD,cAAclgD,KAAK8/C,OAC5CK,EAAmBngD,KAAKogD,iBAAiBpgD,KAAK8/C,OAClD9/C,KAAKqgD,IAAMrgD,KAAK8/C,MAChB9/C,KAAKsgD,IAAMtgD,KAAK8/C,MAChB9/C,KAAKugD,eAAiB,KACtBvgD,KAAKwgD,YAAa,EAOlBl7C,WAAW,WAEP8rC,EAAM0O,OAAS1O,EAAM0O,MAAMzmC,KAAK4mC,EAAmBE,EACvD,EAAG5rC,KAAKC,MAAM,IACd,IAAIisC,EAAmBZ,EAAqB,gBAAK,EAC7CY,EAAmB,IACnBzgD,KAAK0gD,gBAAkBzP,EAAsB,WACzCG,EAAMsP,gBAAkB,KACnBtP,EAAMoP,aACHpP,EAAM0O,OACN1O,EAAM0O,MAAMjK,cA/EE,QAgFdzE,EAAM2E,KAAK,wDACP3E,EAAM0O,MAAMjK,cACZ,wCACJzE,EAAMoP,YAAa,EACnBpP,EAAM0O,MAAM1H,yBAEPhH,EAAM0O,OACX1O,EAAM0O,MAAMlK,UAxFF,MAyFVxE,EAAM2E,KAAK,oDACP3E,EAAM0O,MAAMlK,UACZ,uCAKJxE,EAAM2E,KAAK,+CACX3E,EAAMtnC,SAIlB,EAAGyK,KAAKC,MAAMisC,IAEtB,EACAvB,EAAWlhD,UAAU+hD,iBAAmB,WACpC,MAAO,KAAO//C,KAAKgtC,GAAK,IAAMhtC,KAAKy/C,iBACvC,EACAP,EAAWlhD,UAAUoiD,iBAAmB,SAAUP,GAC9C,IAAIzO,EAAQpxC,KACZ,OAAO,SAAU2gD,GACTd,IAASzO,EAAM0O,MACf1O,EAAMwP,kBAAkBD,GAEnBd,IAASzO,EAAMmP,gBACpBnP,EAAM2E,KAAK,8BACX3E,EAAMyP,8BAGNzP,EAAM2E,KAAK,4BAEnB,CACJ,EACAmJ,EAAWlhD,UAAUkiD,cAAgB,SAAUL,GAC3C,IAAIzO,EAAQpxC,KACZ,OAAO,SAAUV,GACQ,IAAjB8xC,EAAMuO,SACFE,IAASzO,EAAMkP,IACflP,EAAM0P,0BAA0BxhD,GAE3BugD,IAASzO,EAAMmP,eACpBnP,EAAM2P,4BAA4BzhD,GAGlC8xC,EAAM2E,KAAK,6BAGvB,CACJ,EAIAmJ,EAAWlhD,UAAUgjD,YAAc,SAAUC,GAEzC,IAAIC,EAAM,CAAEC,EAAG,IAAK3G,EAAGyG,GACvBjhD,KAAKohD,UAAUF,EACnB,EACAhC,EAAWlhD,UAAUqjD,qBAAuB,WACpCrhD,KAAKqgD,MAAQrgD,KAAKugD,gBAAkBvgD,KAAKsgD,MAAQtgD,KAAKugD,iBACtDvgD,KAAK+1C,KAAK,2CAA6C/1C,KAAKugD,eAAe/K,QAC3Ex1C,KAAK8/C,MAAQ9/C,KAAKugD,eAClBvgD,KAAKugD,eAAiB,KAG9B,EACArB,EAAWlhD,UAAUsjD,oBAAsB,SAAUC,GACjD,GAzJW,MAyJSA,EAAa,CAC7B,IAAIC,EAAMD,EAAwB,EApJ7B,MAqJDC,EACAxhD,KAAKyhD,6BAzJD,MA2JCD,GAELxhD,KAAK+1C,KAAK,wCACV/1C,KAAKugD,eAAez2C,QAEhB9J,KAAKqgD,MAAQrgD,KAAKugD,gBAClBvgD,KAAKsgD,MAAQtgD,KAAKugD,gBAClBvgD,KAAK8J,SAhKN,MAmKE03C,IACLxhD,KAAK+1C,KAAK,0BACV/1C,KAAK0hD,8BACL1hD,KAAKyhD,6BAEb,CACJ,EACAvC,EAAWlhD,UAAU+iD,4BAA8B,SAAUY,GACzD,IAAIC,EAAQzS,EAAW,IAAKwS,GACxBngD,EAAO2tC,EAAW,IAAKwS,GAC3B,GAAc,MAAVC,EACA5hD,KAAKshD,oBAAoB9/C,OAExB,IAAc,MAAVogD,EAKL,MAAM,IAAIjiD,MAAM,2BAA6BiiD,GAH7C5hD,KAAK0/C,oBAAoBvoC,KAAK3V,EAIlC,CACJ,EACA09C,EAAWlhD,UAAUyjD,2BAA6B,WAC1CzhD,KAAK0hD,6BAA+B,GACpC1hD,KAAK+1C,KAAK,oCACV/1C,KAAKwgD,YAAa,EAClBxgD,KAAKugD,eAAenI,wBACpBp4C,KAAK6hD,wBAIL7hD,KAAK+1C,KAAK,8BACV/1C,KAAKugD,eAAennC,KAAK,CAAE+nC,EAAG,IAAK3G,EAAG,CAAE2G,EA/LzC,IA+LkD3G,EAAG,CAAC,KAE7D,EACA0E,EAAWlhD,UAAU6jD,oBAAsB,WAEvC7hD,KAAKugD,eAAergC,QAEpBlgB,KAAK+1C,KAAK,mCACV/1C,KAAKugD,eAAennC,KAAK,CAAE+nC,EAAG,IAAK3G,EAAG,CAAE2G,EAzM/B,IAyM8C3G,EAAG,CAAC,KAG3Dx6C,KAAK+1C,KAAK,kCACV/1C,KAAK8/C,MAAM1mC,KAAK,CAAE+nC,EAAG,IAAK3G,EAAG,CAAE2G,EA5MhB,IA4MqC3G,EAAG,CAAC,KACxDx6C,KAAKqgD,IAAMrgD,KAAKugD,eAChBvgD,KAAKqhD,sBACT,EACAnC,EAAWlhD,UAAU8iD,0BAA4B,SAAUa,GAEvD,IAAIC,EAAQzS,EAAW,IAAKwS,GACxBngD,EAAO2tC,EAAW,IAAKwS,GACb,MAAVC,EACA5hD,KAAK8hD,WAAWtgD,GAED,MAAVogD,GACL5hD,KAAK+hD,eAAevgD,EAE5B,EACA09C,EAAWlhD,UAAU+jD,eAAiB,SAAUziD,GAC5CU,KAAKgiD,qBAELhiD,KAAKy0C,WAAWn1C,EACpB,EACA4/C,EAAWlhD,UAAUgkD,mBAAqB,WACjChiD,KAAKwgD,aACNxgD,KAAKggD,4BACDhgD,KAAKggD,2BAA6B,IAClChgD,KAAK+1C,KAAK,kCACV/1C,KAAKwgD,YAAa,EAClBxgD,KAAK8/C,MAAM1H,yBAGvB,EACA8G,EAAWlhD,UAAU8jD,WAAa,SAAUP,GACxC,IAAIC,EAAMrS,EAlPC,IAkPwBoS,GACnC,GAlPW,MAkPSA,EAAa,CAC7B,IAAIrxC,EAAUqxC,EAAwB,EACtC,GA5OO,MA4OHC,EACAxhD,KAAKiiD,aAAa/xC,QAEjB,GAjPM,MAiPFsxC,EAA0B,CAC/BxhD,KAAK+1C,KAAK,qCACV/1C,KAAKsgD,IAAMtgD,KAAKugD,eAChB,IAAK,IAAIr4C,EAAI,EAAGA,EAAIlI,KAAK0/C,oBAAoB53C,SAAUI,EACnDlI,KAAK+hD,eAAe/hD,KAAK0/C,oBAAoBx3C,IAEjDlI,KAAK0/C,oBAAsB,GAC3B1/C,KAAKqhD,sBACT,KA9PW,MA+PFG,EAGLxhD,KAAKkiD,sBAAsBhyC,GAjQvB,MAmQCsxC,EAELxhD,KAAKmiD,SAASjyC,GApQV,MAsQCsxC,EACL77C,EAAM,iBAAmBuK,GAtQtB,MAwQEsxC,GACLxhD,KAAK+1C,KAAK,wBACV/1C,KAAKgiD,qBACLhiD,KAAKoiD,iCAGLz8C,EAAM,mCAAqC67C,EAEnD,CACJ,EAIAtC,EAAWlhD,UAAUikD,aAAe,SAAUI,GAC1C,IAAInY,EAAYmY,EAAUzH,GACtBjP,EAAU0W,EAAUxS,EACpB7rC,EAAOq+C,EAAUC,EACrBtiD,KAAKuiD,UAAYF,EAAUvqC,EAC3B9X,KAAKm/C,UAAUn7C,KAAOA,EAEF,IAAhBhE,KAAK2/C,SACL3/C,KAAK8/C,MAAM5/B,QACXlgB,KAAKwiD,yBAAyBxiD,KAAK8/C,MAAO5V,GACtCmI,IAAqB1G,GACrB3+B,EAAK,sCAGThN,KAAKyiD,mBAEb,EACAvD,EAAWlhD,UAAUykD,iBAAmB,WACpC,IAAI5C,EAAO7/C,KAAK4/C,kBAAkBX,mBAC9BY,GACA7/C,KAAK0iD,cAAc7C,EAE3B,EACAX,EAAWlhD,UAAU0kD,cAAgB,SAAU7C,GAC3C,IAAIzO,EAAQpxC,KACZA,KAAKugD,eAAiB,IAAIV,EAAK7/C,KAAK+/C,mBAAoB//C,KAAKm/C,UAAWn/C,KAAKo/C,eAAgBp/C,KAAKq/C,eAAgBr/C,KAAKs/C,WAAYt/C,KAAKuiD,WAGxIviD,KAAK0hD,4BACD7B,EAAmC,8BAAK,EAC5C,IAAI/wC,EAAY9O,KAAKkgD,cAAclgD,KAAKugD,gBACpCrK,EAAel2C,KAAKogD,iBAAiBpgD,KAAKugD,gBAC9CvgD,KAAKugD,eAAelnC,KAAKvK,EAAWonC,GAEpCjF,EAAsB,WACdG,EAAMmP,iBACNnP,EAAM2E,KAAK,gCACX3E,EAAMmP,eAAez2C,QAE7B,EAAGyK,KAAKC,MA1UM,KA2UlB,EACA0qC,EAAWlhD,UAAUmkD,SAAW,SAAUn+C,GACtChE,KAAK+1C,KAAK,qCAAuC/xC,GACjDhE,KAAKm/C,UAAUn7C,KAAOA,EAGF,IAAhBhE,KAAK2/C,OACL3/C,KAAK8J,SAIL9J,KAAK2iD,oBACL3iD,KAAK2e,SAEb,EACAugC,EAAWlhD,UAAUwkD,yBAA2B,SAAU3C,EAAM3V,GAC5D,IAAIkH,EAAQpxC,KACZA,KAAK+1C,KAAK,oCACV/1C,KAAK8/C,MAAQD,EACb7/C,KAAK2/C,OAAS,EACV3/C,KAAKu/C,WACLv/C,KAAKu/C,SAASrV,EAAWlqC,KAAKuiD,WAC9BviD,KAAKu/C,SAAW,MAImB,IAAnCv/C,KAAKggD,2BACLhgD,KAAK+1C,KAAK,kCACV/1C,KAAKwgD,YAAa,GAGlBvP,EAAsB,WAClBG,EAAMgR,+BACV,EAAG7tC,KAAKC,MAzWsB,KA2WtC,EACA0qC,EAAWlhD,UAAUokD,8BAAgC,WAE5CpiD,KAAKwgD,YAA8B,IAAhBxgD,KAAK2/C,SACzB3/C,KAAK+1C,KAAK,4BACV/1C,KAAKohD,UAAU,CAAED,EAAG,IAAK3G,EAAG,CAAE2G,EAlW/B,IAkWwC3G,EAAG,CAAC,KAEnD,EACA0E,EAAWlhD,UAAU6iD,2BAA6B,WAC9C,IAAIhB,EAAO7/C,KAAKugD,eAChBvgD,KAAKugD,eAAiB,KAClBvgD,KAAKqgD,MAAQR,GAAQ7/C,KAAKsgD,MAAQT,GAElC7/C,KAAK8J,OAEb,EAKAo1C,EAAWlhD,UAAU4iD,kBAAoB,SAAUD,GAC/C3gD,KAAK8/C,MAAQ,KAGRa,GAAiC,IAAhB3gD,KAAK2/C,OASF,IAAhB3/C,KAAK2/C,QACV3/C,KAAK+1C,KAAK,8BATV/1C,KAAK+1C,KAAK,+BAEN/1C,KAAKm/C,UAAUjM,oBACfvG,EAAkBP,OAAO,QAAUpsC,KAAKm/C,UAAUn7C,MAElDhE,KAAKm/C,UAAUlM,aAAejzC,KAAKm/C,UAAUn7C,OAMrDhE,KAAK8J,OACT,EACAo1C,EAAWlhD,UAAUkkD,sBAAwB,SAAUU,GACnD5iD,KAAK+1C,KAAK,0DACN/1C,KAAKw/C,UACLx/C,KAAKw/C,QAAQoD,GACb5iD,KAAKw/C,QAAU,MAInBx/C,KAAKo2C,cAAgB,KACrBp2C,KAAK8J,OACT,EACAo1C,EAAWlhD,UAAUojD,UAAY,SAAU5/C,GACvC,GAAoB,IAAhBxB,KAAK2/C,OACL,KAAM,8BAGN3/C,KAAKqgD,IAAIjnC,KAAK5X,EAEtB,EAIA09C,EAAWlhD,UAAU8L,MAAQ,WACL,IAAhB9J,KAAK2/C,SACL3/C,KAAK+1C,KAAK,gCACV/1C,KAAK2/C,OAAS,EACd3/C,KAAK2iD,oBACD3iD,KAAKo2C,gBACLp2C,KAAKo2C,gBACLp2C,KAAKo2C,cAAgB,MAGjC,EACA8I,EAAWlhD,UAAU2kD,kBAAoB,WACrC3iD,KAAK+1C,KAAK,iCACN/1C,KAAK8/C,QACL9/C,KAAK8/C,MAAMh2C,QACX9J,KAAK8/C,MAAQ,MAEb9/C,KAAKugD,iBACLvgD,KAAKugD,eAAez2C,QACpB9J,KAAKugD,eAAiB,MAEtBvgD,KAAK0gD,kBACLx6C,aAAalG,KAAK0gD,iBAClB1gD,KAAK0gD,gBAAkB,KAE/B,EACOxB,CACX,CA9agC,GAsc5B2D,GAA+B,WAC/B,SAASA,IACT,CAiBA,OAhBAA,EAAc7kD,UAAU4M,IAAM,SAAUk4C,EAAYthD,EAAMuhD,EAAYC,GAAQ,EAC9EH,EAAc7kD,UAAUilD,MAAQ,SAAUH,EAAYthD,EAAMuhD,EAAYC,GAAQ,EAKhFH,EAAc7kD,UAAUklD,iBAAmB,SAAU1iD,GAAS,EAK9DqiD,EAAc7kD,UAAUmlD,qBAAuB,SAAU3iD,GAAS,EAClEqiD,EAAc7kD,UAAUolD,gBAAkB,SAAUN,EAAYthD,EAAMuhD,GAAc,EACpFF,EAAc7kD,UAAUqlD,kBAAoB,SAAUP,EAAYthD,EAAMuhD,GAAc,EACtFF,EAAc7kD,UAAUslD,mBAAqB,SAAUR,EAAYC,GAAc,EACjFF,EAAc7kD,UAAUulD,YAAc,SAAUC,GAAS,EAClDX,CACX,CApBmC,GA0C/BY,GAA8B,WAC9B,SAASA,EAAaC,GAClB1jD,KAAK0jD,eAAiBA,EACtB1jD,KAAK2jD,WAAa,CAAC,EACnB1V,iBAAOjsC,MAAMC,QAAQyhD,IAAmBA,EAAe57C,OAAS,EAAG,6BACvE,CA0CA,OAtCA27C,EAAazlD,UAAU4lD,QAAU,SAAU5vC,GAEvC,IADA,IAAIy5B,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,EAAK,GAAKC,UAAUD,GAEhC,GAAI1rC,MAAMC,QAAQjC,KAAK2jD,WAAW3vC,IAG9B,IADA,IAAIuyB,EAAY+H,wBAAc,GAAIC,iBAAOvuC,KAAK2jD,WAAW3vC,KAChD9L,EAAI,EAAGA,EAAIq+B,EAAUz+B,OAAQI,IAClCq+B,EAAUr+B,GAAGqG,SAASiR,MAAM+mB,EAAUr+B,GAAGnD,QAAS0oC,EAG9D,EACAgW,EAAazlD,UAAUsuB,GAAK,SAAUtY,EAAWzF,EAAUxJ,GACvD/E,KAAK6jD,mBAAmB7vC,GACxBhU,KAAK2jD,WAAW3vC,GAAahU,KAAK2jD,WAAW3vC,IAAc,GAC3DhU,KAAK2jD,WAAW3vC,GAAWmD,KAAK,CAAE5I,SAAUA,EAAUxJ,QAASA,IAC/D,IAAI++C,EAAY9jD,KAAK+jD,gBAAgB/vC,GACjC8vC,GACAv1C,EAASiR,MAAMza,EAAS++C,EAEhC,EACAL,EAAazlD,UAAUgmD,IAAM,SAAUhwC,EAAWzF,EAAUxJ,GACxD/E,KAAK6jD,mBAAmB7vC,GAExB,IADA,IAAIuyB,EAAYvmC,KAAK2jD,WAAW3vC,IAAc,GACrC9L,EAAI,EAAGA,EAAIq+B,EAAUz+B,OAAQI,IAClC,GAAIq+B,EAAUr+B,GAAGqG,WAAaA,KACxBxJ,GAAWA,IAAYwhC,EAAUr+B,GAAGnD,SAEtC,YADAwhC,EAAUzZ,OAAO5kB,EAAG,EAIhC,EACAu7C,EAAazlD,UAAU6lD,mBAAqB,SAAU7vC,GAClDi6B,iBAAOjuC,KAAK0jD,eAAezgB,KAAK,SAAUghB,GACtC,OAAOA,IAAOjwC,CAClB,GAAI,kBAAoBA,EAC5B,EACOyvC,CACX,CAhDkC,GAyE9BS,GAA+B,SAAUC,GAEzC,SAASD,IACL,IAAI9S,EAAQ+S,EAAOtiD,KAAK7B,KAAM,CAAC,YAAcA,KAsB7C,OArBAoxC,EAAMgT,SAAU,EAKM,qBAAXxwB,QAC4B,qBAA5BA,OAAO3lB,kBACbo2C,8BACDzwB,OAAO3lB,iBAAiB,SAAU,WACzBmjC,EAAMgT,UACPhT,EAAMgT,SAAU,EAChBhT,EAAMwS,QAAQ,UAAU,GAEhC,GAAG,GACHhwB,OAAO3lB,iBAAiB,UAAW,WAC3BmjC,EAAMgT,UACNhT,EAAMgT,SAAU,EAChBhT,EAAMwS,QAAQ,UAAU,GAEhC,GAAG,IAEAxS,CACX,CAWA,OApCAkT,oBAAUJ,EAAeC,GA0BzBD,EAAczuB,YAAc,WACxB,OAAO,IAAIyuB,CACf,EACAA,EAAclmD,UAAU+lD,gBAAkB,SAAU/vC,GAEhD,OADAi6B,iBAAqB,WAAdj6B,EAAwB,uBAAyBA,GACjD,CAAChU,KAAKokD,QACjB,EACAF,EAAclmD,UAAUumD,gBAAkB,WACtC,OAAOvkD,KAAKokD,OAChB,EACOF,CACX,CAtCmC,CAsCjCT,IA2BEe,GAAsB,WAKtB,SAASA,EAAKC,EAAcC,GACxB,QAAiB,IAAbA,EAAqB,CACrB1kD,KAAK2kD,QAAUF,EAAax+B,MAAM,KAGlC,IADA,IAAI2+B,EAAS,EACJ18C,EAAI,EAAGA,EAAIlI,KAAK2kD,QAAQ78C,OAAQI,IACjClI,KAAK2kD,QAAQz8C,GAAGJ,OAAS,IACzB9H,KAAK2kD,QAAQC,GAAU5kD,KAAK2kD,QAAQz8C,GACpC08C,KAGR5kD,KAAK2kD,QAAQ78C,OAAS88C,EACtB5kD,KAAK6kD,UAAY,CACrB,MAEI7kD,KAAK2kD,QAAUF,EACfzkD,KAAK6kD,UAAYH,CAEzB,CAUA,OATAF,EAAKxmD,UAAU4D,SAAW,WAEtB,IADA,IAAIkhD,EAAa,GACR56C,EAAIlI,KAAK6kD,UAAW38C,EAAIlI,KAAK2kD,QAAQ78C,OAAQI,IAC1B,KAApBlI,KAAK2kD,QAAQz8C,KACb46C,GAAc,IAAM9iD,KAAK2kD,QAAQz8C,IAGzC,OAAO46C,GAAc,GACzB,EACO0B,CACX,CAlC0B,GAmC1B,SAASM,KACL,OAAO,IAAIN,GAAK,GACpB,CACA,SAASO,GAAazqC,GAClB,OAAIA,EAAKuqC,WAAavqC,EAAKqqC,QAAQ78C,OACxB,KAEJwS,EAAKqqC,QAAQrqC,EAAKuqC,UAC7B,CAIA,SAASG,GAAc1qC,GACnB,OAAOA,EAAKqqC,QAAQ78C,OAASwS,EAAKuqC,SACtC,CACA,SAASI,GAAa3qC,GAClB,IAAIoqC,EAAWpqC,EAAKuqC,UAIpB,OAHIH,EAAWpqC,EAAKqqC,QAAQ78C,QACxB48C,IAEG,IAAIF,GAAKlqC,EAAKqqC,QAASD,EAClC,CACA,SAASQ,GAAY5qC,GACjB,OAAIA,EAAKuqC,UAAYvqC,EAAKqqC,QAAQ78C,OACvBwS,EAAKqqC,QAAQrqC,EAAKqqC,QAAQ78C,OAAS,GAEvC,IACX,CAcA,SAASq9C,GAAU7qC,EAAM8qC,GAErB,YADc,IAAVA,IAAoBA,EAAQ,GACzB9qC,EAAKqqC,QAAQhpC,MAAMrB,EAAKuqC,UAAYO,EAC/C,CACA,SAASC,GAAW/qC,GAChB,GAAIA,EAAKuqC,WAAavqC,EAAKqqC,QAAQ78C,OAC/B,OAAO,KAGX,IADA,IAAIw9C,EAAS,GACJp9C,EAAIoS,EAAKuqC,UAAW38C,EAAIoS,EAAKqqC,QAAQ78C,OAAS,EAAGI,IACtDo9C,EAAOnuC,KAAKmD,EAAKqqC,QAAQz8C,IAE7B,OAAO,IAAIs8C,GAAKc,EAAQ,EAC5B,CACA,SAASC,GAAUjrC,EAAMkrC,GAErB,IADA,IAAIF,EAAS,GACJp9C,EAAIoS,EAAKuqC,UAAW38C,EAAIoS,EAAKqqC,QAAQ78C,OAAQI,IAClDo9C,EAAOnuC,KAAKmD,EAAKqqC,QAAQz8C,IAE7B,GAAIs9C,aAAwBhB,GACxB,IAASt8C,EAAIs9C,EAAaX,UAAW38C,EAAIs9C,EAAab,QAAQ78C,OAAQI,IAClEo9C,EAAOnuC,KAAKquC,EAAab,QAAQz8C,QAIrC,KAAIu9C,EAAcD,EAAav/B,MAAM,KACrC,IAAS/d,EAAI,EAAGA,EAAIu9C,EAAY39C,OAAQI,IAChCu9C,EAAYv9C,GAAGJ,OAAS,GACxBw9C,EAAOnuC,KAAKsuC,EAAYv9C,GAHS,CAO7C,OAAO,IAAIs8C,GAAKc,EAAQ,EAC5B,CAIA,SAASI,GAAYprC,GACjB,OAAOA,EAAKuqC,WAAavqC,EAAKqqC,QAAQ78C,MAC1C,CAIA,SAAS69C,GAAgBC,EAAWC,GAChC,IAAIC,EAAQf,GAAaa,GAAYG,EAAQhB,GAAac,GAC1D,GAAc,OAAVC,EACA,OAAOD,EAEN,GAAIC,IAAUC,EACf,OAAOJ,GAAgBV,GAAaW,GAAYX,GAAaY,IAG7D,MAAM,IAAIlmD,MAAM,8BACZkmD,EADY,8BAIZD,EACA,IAEZ,CAIA,SAASI,GAAYC,EAAMC,GAGvB,IAFA,IAAIC,EAAWhB,GAAUc,EAAM,GAC3BG,EAAYjB,GAAUe,EAAO,GACxBh+C,EAAI,EAAGA,EAAIi+C,EAASr+C,QAAUI,EAAIk+C,EAAUt+C,OAAQI,IAAK,CAC9D,IAAIm+C,EAAMxX,EAAYsX,EAASj+C,GAAIk+C,EAAUl+C,IAC7C,GAAY,IAARm+C,EACA,OAAOA,CAEf,CACA,OAAIF,EAASr+C,SAAWs+C,EAAUt+C,OACvB,EAEJq+C,EAASr+C,OAASs+C,EAAUt+C,QAAU,EAAI,CACrD,CAIA,SAASw+C,GAAWhsC,EAAMisC,GACtB,GAAIvB,GAAc1qC,KAAU0qC,GAAcuB,GACtC,OAAO,EAEX,IAAK,IAAIr+C,EAAIoS,EAAKuqC,UAAW2B,EAAID,EAAM1B,UAAW38C,GAAKoS,EAAKqqC,QAAQ78C,OAAQI,IAAKs+C,IAC7E,GAAIlsC,EAAKqqC,QAAQz8C,KAAOq+C,EAAM5B,QAAQ6B,GAClC,OAAO,EAGf,OAAO,CACX,CAIA,SAASC,GAAansC,EAAMisC,GACxB,IAAIr+C,EAAIoS,EAAKuqC,UACT2B,EAAID,EAAM1B,UACd,GAAIG,GAAc1qC,GAAQ0qC,GAAcuB,GACpC,OAAO,EAEX,KAAOr+C,EAAIoS,EAAKqqC,QAAQ78C,QAAQ,CAC5B,GAAIwS,EAAKqqC,QAAQz8C,KAAOq+C,EAAM5B,QAAQ6B,GAClC,OAAO,IAETt+C,IACAs+C,CACN,CACA,OAAO,CACX,CAWA,IAAIE,GAKA,SAAwBpsC,EAAMqsC,GAC1B3mD,KAAK2mD,aAAeA,EACpB3mD,KAAK4mD,OAASzB,GAAU7qC,EAAM,GAE9Bta,KAAK6mD,YAActyC,KAAK4nB,IAAI,EAAGn8B,KAAK4mD,OAAO9+C,QAC3C,IAAK,IAAII,EAAI,EAAGA,EAAIlI,KAAK4mD,OAAO9+C,OAAQI,IACpClI,KAAK6mD,aAAeC,uBAAa9mD,KAAK4mD,OAAO1+C,IAEjD6+C,GAAyB/mD,KAC7B,EAoBJ,SAAS+mD,GAAyBC,GAC9B,GAAIA,EAAeH,YA5OK,IA6OpB,MAAM,IAAIlnD,MAAMqnD,EAAeL,aAAfK,yCAIZA,EAAeH,YACf,MAER,GAAIG,EAAeJ,OAAO9+C,OAtPT,GAuPb,MAAM,IAAInI,MAAMqnD,EAAeL,aAAfK,gGAIZC,GAA4BD,GAExC,CAIA,SAASC,GAA4BD,GACjC,OAAqC,IAAjCA,EAAeJ,OAAO9+C,OACf,GAEJ,gBAAkBk/C,EAAeJ,OAAO53B,KAAK,KAAO,GAC/D,CAkBA,IA4/BIk4B,GAysBAC,GArsDAC,GAAmC,SAAUjD,GAE7C,SAASiD,IACL,IACIC,EACAC,EAFAlW,EAAQ+S,EAAOtiD,KAAK7B,KAAM,CAAC,aAAeA,KAqC9C,MAlCwB,qBAAbg0B,UAC8B,qBAA9BA,SAAS/lB,mBACkB,qBAAvB+lB,SAAiB,QAExBszB,EAAmB,mBACnBD,EAAS,UAE6B,qBAA1BrzB,SAAoB,WAChCszB,EAAmB,sBACnBD,EAAS,aAE4B,qBAAzBrzB,SAAmB,UAC/BszB,EAAmB,qBACnBD,EAAS,YAEgC,qBAA7BrzB,SAAuB,eACnCszB,EAAmB,yBACnBD,EAAS,iBAOjBjW,EAAMmW,UAAW,EACbD,GACAtzB,SAAS/lB,iBAAiBq5C,EAAkB,WACxC,IAAIE,GAAWxzB,SAASqzB,GACpBG,IAAYpW,EAAMmW,WAClBnW,EAAMmW,SAAWC,EACjBpW,EAAMwS,QAAQ,UAAW4D,GAEjC,GAAG,GAEApW,CACX,CAQA,OAhDAkT,oBAAU8C,EAAmBjD,GAyC7BiD,EAAkB3xB,YAAc,WAC5B,OAAO,IAAI2xB,CACf,EACAA,EAAkBppD,UAAU+lD,gBAAkB,SAAU/vC,GAEpD,OADAi6B,iBAAqB,YAAdj6B,EAAyB,uBAAyBA,GAClD,CAAChU,KAAKunD,SACjB,EACOH,CACX,CAlDuC,CAkDrC3D,IAkBEgE,GAAsB,IAetBC,GAAsC,SAAUvD,GAOhD,SAASuD,EAAqBvI,EAAWC,EAAgBuI,EAAeC,EAAkBC,EAAqBC,EAAoBC,EAAwBC,GACvJ,IAAI5W,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAsCjC,GArCAoxC,EAAM+N,UAAYA,EAClB/N,EAAMgO,eAAiBA,EACvBhO,EAAMuW,cAAgBA,EACtBvW,EAAMwW,iBAAmBA,EACzBxW,EAAMyW,oBAAsBA,EAC5BzW,EAAM0W,mBAAqBA,EAC3B1W,EAAM2W,uBAAyBA,EAC/B3W,EAAM4W,cAAgBA,EAEtB5W,EAAMpE,GAAK0a,EAAqBO,8BAChC7W,EAAM2E,KAAO1H,EAAW,KAAO+C,EAAMpE,GAAK,KAC1CoE,EAAM8W,kBAAoB,CAAC,EAC3B9W,EAAM+W,QAAU,IAAIC,IACpBhX,EAAMiX,iBAAmB,GACzBjX,EAAMkX,iBAAmB,GACzBlX,EAAMmX,qBAAuB,EAC7BnX,EAAMoX,qBAAuB,EAC7BpX,EAAMqX,0BAA4B,GAClCrX,EAAMsX,YAAa,EACnBtX,EAAMuX,gBAAkBlB,GACxBrW,EAAMwX,mBA3CoB,IA4C1BxX,EAAMyX,uBAAyB,KAC/BzX,EAAMuE,cAAgB,KACtBvE,EAAM0X,0BAA4B,KAClC1X,EAAMmW,UAAW,EAEjBnW,EAAM2X,eAAiB,CAAC,EACxB3X,EAAM4X,eAAiB,EACvB5X,EAAM6X,UAAY,KAClB7X,EAAMkO,WAAa,KACnBlO,EAAMiO,eAAiB,KACvBjO,EAAM8X,oBAAqB,EAC3B9X,EAAM+X,uBAAyB,EAC/B/X,EAAMgY,2BAA6B,EACnChY,EAAMiY,kBAAmB,EACzBjY,EAAMkY,2BAA6B,KACnClY,EAAMmY,+BAAiC,KACnCvB,IAAkBvR,sBAClB,MAAM,IAAI92C,MAAM,kFAMpB,OAJAynD,GAAkB3xB,cAAcnJ,GAAG,UAAW8kB,EAAMoY,WAAYpY,IACrB,IAAvC+N,EAAUn7C,KAAKqT,QAAQ,YACvB6sC,GAAczuB,cAAcnJ,GAAG,SAAU8kB,EAAMqY,UAAWrY,GAEvDA,CACX,CAoxBA,OAz0BAkT,oBAAUoD,EAAsBvD,GAsDhCuD,EAAqB1pD,UAAUgjD,YAAc,SAAU5vC,EAAQ/M,EAAMqlD,GACjE,IAAIC,IAAc3pD,KAAKgpD,eACnB9H,EAAM,CAAExuB,EAAGi3B,EAAW7a,EAAG19B,EAAQ6F,EAAG5S,GACxCrE,KAAK+1C,KAAKpxC,oBAAUu8C,IACpBjT,iBAAOjuC,KAAK0oD,WAAY,0DACxB1oD,KAAKipD,UAAUjI,YAAYE,GACvBwI,IACA1pD,KAAK+oD,eAAeY,GAAaD,EAEzC,EACAhC,EAAqB1pD,UAAUmC,IAAM,SAAUszC,GAC3C,IAAIrC,EAAQpxC,KACZA,KAAK4pD,kBACL,IAAIC,EAAW,IAAIC,WACfp5B,EAAU,CACVnU,EAAGk3B,EAAMsW,MAAMnoD,WACfooD,EAAGvW,EAAMwW,cAETC,EAAiB,CACjB94C,OAAQ,IACRsf,QAASA,EACTqyB,WAAY,SAAUzjD,GAClB,IAAI4Q,EAAU5Q,EAAW,EACJ,OAAjBA,EAAW,GACX8xC,EAAMuW,cAAcj3B,EAAW,EAAGxgB,GACtB,EACJ,MACR25C,EAAS5mD,QAAQiN,IAGjB25C,EAASxkD,OAAO6K,EAExB,GAEJlQ,KAAKsoD,iBAAiBnxC,KAAK+yC,GAC3BlqD,KAAKwoD,uBACL,IAAIr/C,EAAQnJ,KAAKsoD,iBAAiBxgD,OAAS,EAmB3C,OAlBK9H,KAAK0oD,YACNpjD,WAAW,WACP,IAAInF,EAAMixC,EAAMkX,iBAAiBn/C,QACrB7I,IAARH,GAAqB+pD,IAAmB/pD,WAGrCixC,EAAMkX,iBAAiBn/C,GAC9BioC,EAAMoX,uBAC6B,IAA/BpX,EAAMoX,uBACNpX,EAAMkX,iBAAmB,IAE7BlX,EAAM2E,KAAK,OAAS5sC,EAAQ,4BAC5B0gD,EAASxkD,OAAO,IAAI1F,MAAM,uBAC9B,EAtHc,KAwHdK,KAAK0oD,YACL1oD,KAAKmqD,SAAShhD,GAEX0gD,EAAS1kD,OACpB,EACAuiD,EAAqB1pD,UAAUosD,OAAS,SAAU3W,EAAO4W,EAAeC,EAAKvH,GACzE/iD,KAAK4pD,kBACL,IAAIW,EAAU9W,EAAM+W,iBAChB1H,EAAarP,EAAMsW,MAAMnoD,WAC7B5B,KAAK+1C,KAAK,qBAAuB+M,EAAa,IAAMyH,GAC/CvqD,KAAKmoD,QAAQsC,IAAI3H,IAClB9iD,KAAKmoD,QAAQtmC,IAAIihC,EAAY,IAAIsF,KAErCna,iBAAOwF,EAAMiX,aAAaC,cAAgBlX,EAAMiX,aAAaE,eAAgB,sDAC7E3c,kBAAQjuC,KAAKmoD,QAAQhoD,IAAI2iD,GAAY2H,IAAIF,GAAU,gDACnD,IAAIM,EAAa,CACb9H,WAAYA,EACZ+H,OAAQT,EACR5W,MAAOA,EACP6W,IAAKA,GAETtqD,KAAKmoD,QAAQhoD,IAAI2iD,GAAYjhC,IAAI0oC,EAASM,GACtC7qD,KAAK0oD,YACL1oD,KAAK+qD,YAAYF,EAEzB,EACAnD,EAAqB1pD,UAAUmsD,SAAW,SAAUhhD,GAChD,IAAIioC,EAAQpxC,KACRG,EAAMH,KAAKsoD,iBAAiBn/C,GAChCnJ,KAAKghD,YAAY,IAAK7gD,EAAIuwB,QAAS,SAAUpxB,UAClC8xC,EAAMkX,iBAAiBn/C,GAC9BioC,EAAMoX,uBAC6B,IAA/BpX,EAAMoX,uBACNpX,EAAMkX,iBAAmB,IAEzBnoD,EAAI4iD,YACJ5iD,EAAI4iD,WAAWzjD,EAEvB,EACJ,EACAooD,EAAqB1pD,UAAU+sD,YAAc,SAAUF,GACnD,IAAIzZ,EAAQpxC,KACRyzC,EAAQoX,EAAWpX,MACnBqP,EAAarP,EAAMsW,MAAMnoD,WACzB2oD,EAAU9W,EAAM+W,iBACpBxqD,KAAK+1C,KAAK,aAAe+M,EAAa,QAAUyH,GAChD,IAAIS,EAAM,CAAWzuC,EAAGumC,GAGpB+H,EAAWP,MACXU,EAAO,EAAIvX,EAAMwW,aACjBe,EAAO,EAAIH,EAAWP,KAE1BU,EAAgB,EAAIH,EAAWC,SAC/B9qD,KAAKghD,YAPQ,IAOYgK,EAAK,SAAU1rD,GACpC,IAAI4Q,EAAU5Q,EAAoB,EAC9BuF,EAASvF,EAAsB,EAEnCooD,EAAqBuD,sBAAsB/6C,EAASujC,IAC5BrC,EAAM+W,QAAQhoD,IAAI2iD,IACtC1R,EAAM+W,QAAQhoD,IAAI2iD,GAAY3iD,IAAIoqD,MAEZM,IACtBzZ,EAAM2E,KAAK,kBAAmBz2C,GACf,OAAXuF,GACAusC,EAAM8Z,cAAcpI,EAAYyH,GAEhCM,EAAW9H,YACX8H,EAAW9H,WAAWl+C,EAAQqL,GAG1C,EACJ,EACAw3C,EAAqBuD,sBAAwB,SAAU/6C,EAASujC,GAC5D,GAAIvjC,GAA8B,kBAAZA,GAAwBlH,mBAASkH,EAAS,KAAM,CAElE,IAAIi7C,EAAWC,kBAAQl7C,EAAS,KAChC,GAAIlO,MAAMC,QAAQkpD,KAAcA,EAAS9zC,QAAQ,YAAa,CAC1D,IAAIg0C,EAAY,gBAAkB5X,EAAMiX,aAAaY,WAAW1pD,WAAa,IACzE2pD,EAAY9X,EAAMsW,MAAMnoD,WAC5BoL,EAAK,wGAC6Cq+C,EAAY,OACzDE,EAAY,kDACrB,CACJ,CACJ,EACA7D,EAAqB1pD,UAAUklD,iBAAmB,SAAU1iD,GACxDR,KAAKs/C,WAAa9+C,EAClBR,KAAK+1C,KAAK,wBACN/1C,KAAKs/C,WACLt/C,KAAKwrD,UAKDxrD,KAAK0oD,YACL1oD,KAAKghD,YAAY,SAAU,CAAC,EAAG,WAAc,GAGrDhhD,KAAKyrD,uCAAuCjrD,EAChD,EACAknD,EAAqB1pD,UAAUytD,uCAAyC,SAAUC,IAGvDA,GAAoC,KAAtBA,EAAW5jD,QACxB6jD,kBAAQD,MAC5B1rD,KAAK+1C,KAAK,iEACV/1C,KAAK4oD,mBAlOoB,IAoOjC,EACAlB,EAAqB1pD,UAAUmlD,qBAAuB,SAAU3iD,GAC5DR,KAAKq/C,eAAiB7+C,EACtBR,KAAK+1C,KAAK,6BACN/1C,KAAKq/C,eACLr/C,KAAK4rD,cAMD5rD,KAAK0oD,YACL1oD,KAAKghD,YAAY,WAAY,CAAC,EAAG,WAAc,EAG3D,EAKA0G,EAAqB1pD,UAAUwtD,QAAU,WACrC,IAAIpa,EAAQpxC,KACZ,GAAIA,KAAK0oD,YAAc1oD,KAAKs/C,WAAY,CACpC,IAAIuM,EAAU7rD,KAAKs/C,WACfwM,EAAaC,wBAAcF,GAAW,OAAS,QAC/CG,EAAc,CAAEC,KAAMJ,GACC,OAAvB7rD,KAAKgoD,cACLgE,EAAoB,QAAI,EAEW,kBAAvBhsD,KAAKgoD,gBACjBgE,EAAqB,QAAIhsD,KAAKgoD,eAElChoD,KAAKghD,YAAY8K,EAAYE,EAAa,SAAUjwB,GAChD,IAAIl3B,EAASk3B,EAAkB,EAC3Bv6B,EAAOu6B,EAAgB,GAAK,QAC5BqV,EAAMkO,aAAeuM,IACN,OAAXhnD,EACAusC,EAAM+X,uBAAyB,EAI/B/X,EAAM8a,eAAernD,EAAQrD,GAGzC,EACJ,CACJ,EAMAkmD,EAAqB1pD,UAAU4tD,YAAc,WACzC,IAAIxa,EAAQpxC,KACRA,KAAK0oD,YAAc1oD,KAAKq/C,gBACxBr/C,KAAKghD,YAAY,WAAY,CAAE,MAAShhD,KAAKq/C,gBAAkB,SAAUtjB,GACrE,IAAIl3B,EAASk3B,EAAkB,EAC3Bv6B,EAAOu6B,EAAgB,GAAK,QACjB,OAAXl3B,EACAusC,EAAMgY,2BAA6B,EAGnChY,EAAM+a,mBAAmBtnD,EAAQrD,EAEzC,EAER,EAIAkmD,EAAqB1pD,UAAUouD,SAAW,SAAU3Y,EAAO6W,GACvD,IAAIxH,EAAarP,EAAMsW,MAAMnoD,WACzB2oD,EAAU9W,EAAM+W,iBACpBxqD,KAAK+1C,KAAK,uBAAyB+M,EAAa,IAAMyH,GACtDtc,iBAAOwF,EAAMiX,aAAaC,cAAgBlX,EAAMiX,aAAaE,eAAgB,wDAChE5qD,KAAKkrD,cAAcpI,EAAYyH,IAC9BvqD,KAAK0oD,YACf1oD,KAAKqsD,cAAcvJ,EAAYyH,EAAS9W,EAAMwW,aAAcK,EAEpE,EACA5C,EAAqB1pD,UAAUquD,cAAgB,SAAUvJ,EAAYyH,EAAS+B,EAAUhC,GACpFtqD,KAAK+1C,KAAK,eAAiB+M,EAAa,QAAUyH,GAClD,IAAIS,EAAM,CAAWzuC,EAAGumC,GAGpBwH,IACAU,EAAO,EAAIsB,EACXtB,EAAO,EAAIV,GAEftqD,KAAKghD,YANQ,IAMYgK,EAC7B,EACAtD,EAAqB1pD,UAAUolD,gBAAkB,SAAUN,EAAYthD,EAAMuhD,GACzE/iD,KAAK4pD,kBACD5pD,KAAK0oD,WACL1oD,KAAKusD,kBAAkB,IAAKzJ,EAAYthD,EAAMuhD,GAG9C/iD,KAAKyoD,0BAA0BtxC,KAAK,CAChC2rC,WAAYA,EACZ1xC,OAAQ,IACR5P,KAAMA,EACNuhD,WAAYA,GAGxB,EACA2E,EAAqB1pD,UAAUqlD,kBAAoB,SAAUP,EAAYthD,EAAMuhD,GAC3E/iD,KAAK4pD,kBACD5pD,KAAK0oD,WACL1oD,KAAKusD,kBAAkB,KAAMzJ,EAAYthD,EAAMuhD,GAG/C/iD,KAAKyoD,0BAA0BtxC,KAAK,CAChC2rC,WAAYA,EACZ1xC,OAAQ,KACR5P,KAAMA,EACNuhD,WAAYA,GAGxB,EACA2E,EAAqB1pD,UAAUslD,mBAAqB,SAAUR,EAAYC,GACtE/iD,KAAK4pD,kBACD5pD,KAAK0oD,WACL1oD,KAAKusD,kBAAkB,KAAMzJ,EAAY,KAAMC,GAG/C/iD,KAAKyoD,0BAA0BtxC,KAAK,CAChC2rC,WAAYA,EACZ1xC,OAAQ,KACR5P,KAAM,KACNuhD,WAAYA,GAGxB,EACA2E,EAAqB1pD,UAAUuuD,kBAAoB,SAAUn7C,EAAQ0xC,EAAYthD,EAAMuhD,GACnF,IAAIryB,EAAU,CAAWnU,EAAGumC,EAAqBtI,EAAGh5C,GACpDxB,KAAK+1C,KAAK,gBAAkB3kC,EAAQsf,GACpC1wB,KAAKghD,YAAY5vC,EAAQsf,EAAS,SAAU9rB,GACpCm+C,GACAz9C,WAAW,WACPy9C,EAAWn+C,EAAuB,EAAGA,EAAuB,EAChE,EAAG2P,KAAKC,MAAM,GAEtB,EACJ,EACAkzC,EAAqB1pD,UAAU4M,IAAM,SAAUk4C,EAAYthD,EAAMuhD,EAAYC,GACzEhjD,KAAKwsD,YAAY,IAAK1J,EAAYthD,EAAMuhD,EAAYC,EACxD,EACA0E,EAAqB1pD,UAAUilD,MAAQ,SAAUH,EAAYthD,EAAMuhD,EAAYC,GAC3EhjD,KAAKwsD,YAAY,IAAK1J,EAAYthD,EAAMuhD,EAAYC,EACxD,EACA0E,EAAqB1pD,UAAUwuD,YAAc,SAAUp7C,EAAQ0xC,EAAYthD,EAAMuhD,EAAYC,GACzFhjD,KAAK4pD,kBACL,IAAIl5B,EAAU,CACDnU,EAAGumC,EACHtI,EAAGh5C,QAEHlB,IAAT0iD,IACAtyB,EAAoB,EAAIsyB,GAG5BhjD,KAAKqoD,iBAAiBlxC,KAAK,CACvB/F,OAAQA,EACRsf,QAASA,EACTqyB,WAAYA,IAEhB/iD,KAAKuoD,uBACL,IAAIp/C,EAAQnJ,KAAKqoD,iBAAiBvgD,OAAS,EACvC9H,KAAK0oD,WACL1oD,KAAKysD,SAAStjD,GAGdnJ,KAAK+1C,KAAK,kBAAoB+M,EAEtC,EACA4E,EAAqB1pD,UAAUyuD,SAAW,SAAUtjD,GAChD,IAAIioC,EAAQpxC,KACRoR,EAASpR,KAAKqoD,iBAAiBl/C,GAAOiI,OACtCsf,EAAU1wB,KAAKqoD,iBAAiBl/C,GAAOunB,QACvCqyB,EAAa/iD,KAAKqoD,iBAAiBl/C,GAAO45C,WAC9C/iD,KAAKqoD,iBAAiBl/C,GAAOujD,OAAS1sD,KAAK0oD,WAC3C1oD,KAAKghD,YAAY5vC,EAAQsf,EAAS,SAAUpxB,GACxC8xC,EAAM2E,KAAK3kC,EAAS,YAAa9R,UAC1B8xC,EAAMiX,iBAAiBl/C,GAC9BioC,EAAMmX,uBAE6B,IAA/BnX,EAAMmX,uBACNnX,EAAMiX,iBAAmB,IAEzBtF,GACAA,EAAWzjD,EAAsB,EAAGA,EAAsB,EAElE,EACJ,EACAooD,EAAqB1pD,UAAUulD,YAAc,SAAUC,GACnD,IAAIpS,EAAQpxC,KAEZ,GAAIA,KAAK0oD,WAAY,CACjB,IAAIh4B,EAAU,CAAexZ,EAAGssC,GAChCxjD,KAAK+1C,KAAK,cAAerlB,GACzB1wB,KAAKghD,YAAsB,IAAKtwB,EAAS,SAAUtvB,GAE/C,GAAe,OADFA,EAAqB,EACb,CACjB,IAAIurD,EAAcvrD,EAAqB,EACvCgwC,EAAM2E,KAAK,cAAe,wBAA0B4W,EACxD,CACJ,EACJ,CACJ,EACAjF,EAAqB1pD,UAAU+jD,eAAiB,SAAUziD,GACtD,GAAI,MAAOA,EAAS,CAEhBU,KAAK+1C,KAAK,gBAAkBpxC,oBAAUrF,IACtC,IAAIstD,EAASttD,EAAW,EACpBoqD,EAAa1pD,KAAK+oD,eAAe6D,GACjClD,WACO1pD,KAAK+oD,eAAe6D,GAC3BlD,EAAWpqD,EAAoB,GAEvC,KACK,IAAI,UAAWA,EAChB,KAAM,qCAAuCA,EAAe,MAEvD,MAAOA,GAEZU,KAAK6sD,YAAYvtD,EAAW,EAAGA,EAAW,EAC9C,CACJ,EACAooD,EAAqB1pD,UAAU6uD,YAAc,SAAUz7C,EAAQ/M,GAC3DrE,KAAK+1C,KAAK,sBAAuB3kC,EAAQ/M,GAC1B,MAAX+M,EACApR,KAAK2nD,cAActjD,EAAiB,EAAGA,EAAiB,GAC5C,EAAOA,EAAQ,GAEX,MAAX+M,EACLpR,KAAK2nD,cAActjD,EAAiB,EAAGA,EAAiB,GAC3C,EAAMA,EAAQ,GAEX,MAAX+M,EACLpR,KAAK8sD,iBAAiBzoD,EAAiB,EAAGA,EAAkB,GAE5C,OAAX+M,EACLpR,KAAKksD,eAAe7nD,EAAwB,EAAGA,EAA0B,GAEzD,QAAX+M,EACLpR,KAAKmsD,mBAAmB9nD,EAAwB,EAAGA,EAA0B,GAE7D,OAAX+M,EACLpR,KAAK+sD,uBAAuB1oD,GAG5BsB,EAAM,6CACFhB,oBAAUyM,GACV,qCAEZ,EACAs2C,EAAqB1pD,UAAUuhD,SAAW,SAAUrV,EAAWqY,GAC3DviD,KAAK+1C,KAAK,oBACV/1C,KAAK0oD,YAAa,EAClB1oD,KAAKupD,gCAAiC,IAAIznD,MAAOkrD,UACjDhtD,KAAKitD,iBAAiB/iB,GACtBlqC,KAAK21C,cAAgB4M,EACjBviD,KAAKqpD,kBACLrpD,KAAKktD,oBAETltD,KAAKmtD,gBACLntD,KAAKqpD,kBAAmB,EACxBrpD,KAAK4nD,kBAAiB,EAC1B,EACAF,EAAqB1pD,UAAUovD,iBAAmB,SAAUpoD,GACxD,IAAIosC,EAAQpxC,KACZiuC,kBAAQjuC,KAAKipD,UAAW,0DACpBjpD,KAAK8oD,2BACL5iD,aAAalG,KAAK8oD,2BAItB9oD,KAAK8oD,0BAA4BxjD,WAAW,WACxC8rC,EAAM0X,0BAA4B,KAClC1X,EAAMic,sBAEV,EAAG94C,KAAKC,MAAMxP,GAClB,EACA0iD,EAAqB1pD,UAAU4rD,gBAAkB,YACxC5pD,KAAKipD,WAAajpD,KAAKqpD,kBACxBrpD,KAAKotD,iBAAiB,EAE9B,EACA1F,EAAqB1pD,UAAUwrD,WAAa,SAAUhC,GAE9CA,IACCxnD,KAAKunD,UACNvnD,KAAK2oD,kBAAoB3oD,KAAK4oD,qBAC9B5oD,KAAK+1C,KAAK,2CACV/1C,KAAK2oD,gBAAkBlB,GAClBznD,KAAKipD,WACNjpD,KAAKotD,iBAAiB,IAG9BptD,KAAKunD,SAAWC,CACpB,EACAE,EAAqB1pD,UAAUyrD,UAAY,SAAU6D,GAC7CA,GACAttD,KAAK+1C,KAAK,wBACV/1C,KAAK2oD,gBAAkBlB,GAClBznD,KAAKipD,WACNjpD,KAAKotD,iBAAiB,KAI1BptD,KAAK+1C,KAAK,8CACN/1C,KAAKipD,WACLjpD,KAAKipD,UAAUn/C,QAG3B,EACA49C,EAAqB1pD,UAAUuvD,sBAAwB,WAQnD,GAPAvtD,KAAK+1C,KAAK,4BACV/1C,KAAK0oD,YAAa,EAClB1oD,KAAKipD,UAAY,KAEjBjpD,KAAKwtD,0BAELxtD,KAAK+oD,eAAiB,CAAC,EACnB/oD,KAAKytD,mBAAoB,CACzB,GAAKztD,KAAKunD,UAKL,GAAIvnD,KAAKupD,+BAAgC,EAEN,IAAIznD,MAAOkrD,UAAYhtD,KAAKupD,+BA7iB5C,MA+iBhBvpD,KAAK2oD,gBAAkBlB,IAE3BznD,KAAKupD,+BAAiC,IAC1C,OAXIvpD,KAAK+1C,KAAK,8CACV/1C,KAAK2oD,gBAAkB3oD,KAAK4oD,mBAC5B5oD,KAAKspD,4BAA6B,IAAIxnD,MAAOkrD,UAUjD,IAAIU,GAA8B,IAAI5rD,MAAOkrD,UAAYhtD,KAAKspD,2BAC1DqE,EAAiBp5C,KAAK4nB,IAAI,EAAGn8B,KAAK2oD,gBAAkB+E,GACxDC,EAAiBp5C,KAAKuL,SAAW6tC,EACjC3tD,KAAK+1C,KAAK,0BAA4B4X,EAAiB,MACvD3tD,KAAKotD,iBAAiBO,GAEtB3tD,KAAK2oD,gBAAkBp0C,KAAKyT,IAAIhoB,KAAK4oD,mBA1jBhB,IA0jBoC5oD,KAAK2oD,gBAClE,CACA3oD,KAAK4nD,kBAAiB,EAC1B,EACAF,EAAqB1pD,UAAUqvD,qBAAuB,WAClD,OAAOO,oBAAU5tD,UAAM,OAAQ,EAAQ,WACnC,IAAI6tD,EAAeC,EAASC,EAAgBvY,EAAQG,EAAeqY,EAAYC,EAAcC,EAASC,EAAe9c,EAAcE,EAAIxwC,EAAWyD,EAAe4pD,EAC7Jhd,EAAQpxC,KACZ,OAAOquD,sBAAYruD,KAAM,SAAUw+C,GAC/B,OAAQA,EAAG8P,OACP,KAAK,EACD,IAAKtuD,KAAKytD,mBAAoB,MAAO,CAAC,EAAa,GACnDztD,KAAK+1C,KAAK,+BACV/1C,KAAKspD,4BAA6B,IAAIxnD,MAAOkrD,UAC7ChtD,KAAKupD,+BAAiC,KACtCsE,EAAgB7tD,KAAK+hD,eAAe70B,KAAKltB,MACzC8tD,EAAU9tD,KAAKu/C,SAASryB,KAAKltB,MAC7B+tD,EAAiB/tD,KAAKutD,sBAAsBrgC,KAAKltB,MACjDw1C,EAASx1C,KAAKgtC,GAAK,IAAM0a,EAAqB6G,oBAC9C5Y,EAAgB31C,KAAK21C,cACrBqY,GAAa,EACbC,EAAe,KACfC,EAAU,WACFD,EACAA,EAAankD,SAGbkkD,GAAa,EACbD,IAER,EACAI,EAAgB,SAAUjN,GACtBjT,iBAAOggB,EAAc,0DACrBA,EAAajN,YAAYE,EAC7B,EACAlhD,KAAKipD,UAAY,CACbn/C,MAAOokD,EACPlN,YAAamN,GAEjB9c,EAAerxC,KAAKkpD,mBACpBlpD,KAAKkpD,oBAAqB,EAC1B1K,EAAG8P,MAAQ,EACf,KAAK,EAED,OADA9P,EAAGgQ,KAAKr3C,KAAK,CAAC,EAAG,EAAE,CAAG,IACf,CAAC,EAAanU,QAAQsnB,IAAI,CACzBtqB,KAAK8nD,mBAAmBvnD,SAAS8wC,GACjCrxC,KAAK+nD,uBAAuBxnD,SAAS8wC,MAEjD,KAAK,EAeD,OAdAE,EAAKhD,SAAO/uB,WAAM,EAAQ,CAACg/B,EAAGiQ,OAAQ,IAAK1tD,EAAYwwC,EAAG,GAAI/sC,EAAgB+sC,EAAG,GAC5Eyc,EAWD5f,EAAI,0CAVJA,EAAI,8CACJpuC,KAAKs/C,WAAav+C,GAAaA,EAAUN,YACzCT,KAAKq/C,eAAiB76C,GAAiBA,EAAchE,MACrDytD,EAAe,IAAI/O,GAAW1J,EAAQx1C,KAAKm/C,UAAWn/C,KAAKo/C,eAAgBp/C,KAAKq/C,eAAgBr/C,KAAKs/C,WAAYuO,EAAeC,EAASC,EAC3H,SAAUnL,GACpB51C,EAAK41C,EAAS,KAAOxR,EAAM+N,UAAUv9C,WAAa,KAClDwvC,EAAMsd,UAjnBH,cAknBP,EAAG/Y,IAKA,CAAC,EAAa,GACzB,KAAK,EAYD,OAXAyY,EAAU5P,EAAGiQ,OACbzuD,KAAK+1C,KAAK,wBAA0BqY,GAC/BJ,IACGhuD,KAAKm/C,UAAUtM,WAIf7lC,EAAKohD,GAETF,KAEG,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,GAExB,EACJ,EACJ,EACAxG,EAAqB1pD,UAAU0wD,UAAY,SAAU9L,GACjDxU,EAAI,uCAAyCwU,GAC7C5iD,KAAKkoD,kBAAkBtF,IAAU,EAC7B5iD,KAAKipD,UACLjpD,KAAKipD,UAAUn/C,SAGX9J,KAAK8oD,4BACL5iD,aAAalG,KAAK8oD,2BAClB9oD,KAAK8oD,0BAA4B,MAEjC9oD,KAAK0oD,YACL1oD,KAAKutD,wBAGjB,EACA7F,EAAqB1pD,UAAUovB,OAAS,SAAUw1B,GAC9CxU,EAAI,mCAAqCwU,UAClC5iD,KAAKkoD,kBAAkBtF,GAC1B+L,kBAAQ3uD,KAAKkoD,qBACbloD,KAAK2oD,gBAAkBlB,GAClBznD,KAAKipD,WACNjpD,KAAKotD,iBAAiB,GAGlC,EACA1F,EAAqB1pD,UAAUivD,iBAAmB,SAAU/iB,GACxD,IAAI0kB,EAAQ1kB,GAAY,IAAIpoC,MAAOkrD,UACnChtD,KAAK6nD,oBAAoB,CAAEgH,iBAAkBD,GACjD,EACAlH,EAAqB1pD,UAAUwvD,wBAA0B,WACrD,IAAK,IAAItlD,EAAI,EAAGA,EAAIlI,KAAKqoD,iBAAiBvgD,OAAQI,IAAK,CACnD,IAAI0C,EAAM5K,KAAKqoD,iBAAiBngD,GAC5B0C,GAAgB,MAAOA,EAAI8lB,SAAW9lB,EAAI8hD,SACtC9hD,EAAIm4C,YACJn4C,EAAIm4C,WAAW,qBAEZ/iD,KAAKqoD,iBAAiBngD,GAC7BlI,KAAKuoD,uBAEb,CAEkC,IAA9BvoD,KAAKuoD,uBACLvoD,KAAKqoD,iBAAmB,GAEhC,EACAX,EAAqB1pD,UAAU8uD,iBAAmB,SAAUhK,EAAYrP,GAEpE,IAAI8W,EAKAA,EAJC9W,EAISA,EAAMvxC,IAAI,SAAU8nD,GAAK,OAAO5a,EAAkB4a,EAAI,GAAGh7B,KAAK,KAH9D,UAKd,IAAIo7B,EAASpqD,KAAKkrD,cAAcpI,EAAYyH,GACxCH,GAAUA,EAAOrH,YACjBqH,EAAOrH,WAAW,oBAE1B,EACA2E,EAAqB1pD,UAAUktD,cAAgB,SAAUpI,EAAYyH,GACjE,IACIH,EADA0E,EAAuB,IAAItK,GAAK1B,GAAYlhD,WAEhD,GAAI5B,KAAKmoD,QAAQsC,IAAIqE,GAAuB,CACxC,IAAI5sD,EAAMlC,KAAKmoD,QAAQhoD,IAAI2uD,GAC3B1E,EAASloD,EAAI/B,IAAIoqD,GACjBroD,EAAIa,OAAOwnD,GACM,IAAbroD,EAAIsf,MACJxhB,KAAKmoD,QAAQplD,OAAO+rD,EAE5B,MAGI1E,OAAS9pD,EAEb,OAAO8pD,CACX,EACA1C,EAAqB1pD,UAAUkuD,eAAiB,SAAU6C,EAAYC,GAClE5gB,EAAI,uBAAyB2gB,EAAa,IAAMC,GAChDhvD,KAAKs/C,WAAa,KAClBt/C,KAAKkpD,oBAAqB,EAC1BlpD,KAAKipD,UAAUn/C,QACI,kBAAfilD,GAAiD,sBAAfA,IAIlC/uD,KAAKmpD,yBACDnpD,KAAKmpD,wBA/tBS,IAiuBdnpD,KAAK2oD,gBAtuBgB,IAyuBrB3oD,KAAK8nD,mBAAmBrW,yBAGpC,EACAiW,EAAqB1pD,UAAUmuD,mBAAqB,SAAU4C,EAAYC,GACtE5gB,EAAI,4BAA8B2gB,EAAa,IAAMC,GACrDhvD,KAAKq/C,eAAiB,KACtBr/C,KAAKkpD,oBAAqB,EAGP,kBAAf6F,GAAiD,sBAAfA,IAIlC/uD,KAAKopD,6BACDppD,KAAKopD,4BAnvBS,GAovBdppD,KAAK+nD,uBAAuBtW,wBAGxC,EACAiW,EAAqB1pD,UAAU+uD,uBAAyB,SAAU1oD,GAC1DrE,KAAK6oD,uBACL7oD,KAAK6oD,uBAAuBxkD,GAGxB,QAASA,GACT0I,QAAQqhC,IAAI,aAAe/pC,EAAU,IAAEoD,QAAQ,KAAM,gBAGjE,EACAigD,EAAqB1pD,UAAUmvD,cAAgB,WAC3C,IAAIhP,EAAK5M,EAAI0d,EAAKzQ,EAElBx+C,KAAKwrD,UACLxrD,KAAK4rD,cACL,IAGI,IAAK,IAAIjN,EAAKF,mBAASz+C,KAAKmoD,QAAQ+G,UAAWC,EAAKxQ,EAAGxtC,QAASg+C,EAAGvQ,KAAMuQ,EAAKxQ,EAAGxtC,OAAQ,CACrF,IAAIi+C,EAAUD,EAAG7sD,MACjB,IACI,IAAK,IAAI+sD,GAAMJ,OAAM,EAAQxQ,mBAAS2Q,EAAQF,WAAYI,EAAKD,EAAGl+C,QAASm+C,EAAG1Q,KAAM0Q,EAAKD,EAAGl+C,OAAQ,CAChG,IAAI05C,EAAayE,EAAGhtD,MACpBtC,KAAK+qD,YAAYF,EACrB,CACJ,CACA,MAAO0E,GAASN,EAAM,CAAEtpD,MAAO4pD,EAAS,CAAC,QAErC,IACQD,IAAOA,EAAG1Q,OAASJ,EAAK6Q,EAAGtQ,SAASP,EAAG38C,KAAKwtD,EACpD,CAAC,QACS,GAAIJ,EAAK,MAAMA,EAAItpD,KAAO,CACxC,CACJ,CACJ,CACA,MAAOm5C,GAASX,EAAM,CAAEx4C,MAAOm5C,EAAS,CAAC,QAErC,IACQqQ,IAAOA,EAAGvQ,OAASrN,EAAKoN,EAAGI,SAASxN,EAAG1vC,KAAK88C,EACpD,CAAC,QACS,GAAIR,EAAK,MAAMA,EAAIx4C,KAAO,CACxC,CACA,IAAK,IAAIuC,EAAI,EAAGA,EAAIlI,KAAKqoD,iBAAiBvgD,OAAQI,IAC1ClI,KAAKqoD,iBAAiBngD,IACtBlI,KAAKysD,SAASvkD,GAGtB,KAAOlI,KAAKyoD,0BAA0B3gD,QAAQ,CAC1C,IAAI4oB,EAAU1wB,KAAKyoD,0BAA0B/N,QAC7C16C,KAAKusD,kBAAkB77B,EAAQtf,OAAQsf,EAAQoyB,WAAYpyB,EAAQlvB,KAAMkvB,EAAQqyB,WACrF,CACA,IAAS76C,EAAI,EAAGA,EAAIlI,KAAKsoD,iBAAiBxgD,OAAQI,IAC1ClI,KAAKsoD,iBAAiBpgD,IACtBlI,KAAKmqD,SAASjiD,EAG1B,EAIAw/C,EAAqB1pD,UAAUkvD,kBAAoB,WAC/C,IAAI1J,EAAQ,CAAC,EACTgM,EAAa,KACb/Y,wBAEI+Y,EADAxvD,KAAKm/C,UAAUtM,UACF,aAGA,QAGrB2Q,EAAM,OAASgM,EAAa,IAAMj2B,EAAY9xB,QAAQ,MAAO,MAAQ,EACjE48C,4BACAb,EAAM,qBAAuB,EAExBiM,4BACLjM,EAAM,yBAA2B,GAErCxjD,KAAKujD,YAAYC,EACrB,EACAkE,EAAqB1pD,UAAUyvD,iBAAmB,WAC9C,IAAIH,EAASpJ,GAAczuB,cAAc8uB,kBACzC,OAAOoK,kBAAQ3uD,KAAKkoD,oBAAsBoF,CAC9C,EACA5F,EAAqBO,4BAA8B,EAInDP,EAAqB6G,kBAAoB,EAClC7G,CACX,CA30B0C,CA20BxC7E,IAkBE6M,GAA2B,WAC3B,SAASA,EAAU9rD,EAAM+rD,GACrB3vD,KAAK4D,KAAOA,EACZ5D,KAAK2vD,KAAOA,CAChB,CAIA,OAHAD,EAAUE,KAAO,SAAUhsD,EAAM+rD,GAC7B,OAAO,IAAID,EAAU9rD,EAAM+rD,EAC/B,EACOD,CACX,CAT+B,GA2B3BG,GAAuB,WACvB,SAASA,IACT,CA4BA,OAvBAA,EAAM7xD,UAAU8xD,WAAa,WACzB,OAAO9vD,KAAK+vD,QAAQ7iC,KAAKltB,KAC7B,EAQA6vD,EAAM7xD,UAAUgyD,oBAAsB,SAAUC,EAASC,GACrD,IAAIC,EAAa,IAAIT,GAAU/gB,EAAUshB,GACrCG,EAAa,IAAIV,GAAU/gB,EAAUuhB,GACzC,OAAgD,IAAzClwD,KAAK+vD,QAAQI,EAAYC,EACpC,EAKAP,EAAM7xD,UAAUqyD,QAAU,WAEtB,OAAOX,GAAUY,GACrB,EACOT,CACX,CA/B2B,GAkDvBU,GAA0B,SAAUpM,GAEpC,SAASoM,IACL,OAAkB,OAAXpM,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CA0CA,OA7CAskD,oBAAUiM,EAAUpM,GAIpB3kD,OAAO+kB,eAAegsC,EAAU,eAAgB,CAC5CpwD,IAAK,WACD,OAAO+mD,EACX,EACArlC,IAAK,SAAUa,GACXwkC,GAAexkC,CACnB,EACA2wB,YAAY,EACZC,cAAc,IAElBid,EAASvyD,UAAU+xD,QAAU,SAAUjhB,EAAG73B,GACtC,OAAO43B,EAAYC,EAAElrC,KAAMqT,EAAErT,KACjC,EACA2sD,EAASvyD,UAAUwyD,YAAc,SAAUb,GAGvC,MAAMc,yBAAe,kDACzB,EACAF,EAASvyD,UAAUgyD,oBAAsB,SAAUC,EAASC,GACxD,OAAO,CACX,EACAK,EAASvyD,UAAUqyD,QAAU,WAEzB,OAAOX,GAAUY,GACrB,EACAC,EAASvyD,UAAU0yD,QAAU,WAGzB,OAAO,IAAIhB,GAAU9gB,EAAUsY,GACnC,EACAqJ,EAASvyD,UAAU2yD,SAAW,SAAUC,EAAYhtD,GAGhD,OAFAqqC,iBAA6B,kBAAf2iB,EAAyB,gDAEhC,IAAIlB,GAAUkB,EAAY1J,GACrC,EAIAqJ,EAASvyD,UAAU4D,SAAW,WAC1B,MAAO,MACX,EACO2uD,CACX,CA/C8B,CA+C5BV,IACEgB,GAAY,IAAIN,GAqBhBO,GAAmC,WAKnC,SAASA,EAAkBnB,EAAMoB,EAAUC,EAAYC,EAAYC,QACtC,IAArBA,IAA+BA,EAAmB,MACtDlxD,KAAKixD,WAAaA,EAClBjxD,KAAKkxD,iBAAmBA,EACxBlxD,KAAKmxD,WAAa,GAElB,IADA,IAAI9K,EAAM,GACFsJ,EAAKhB,WAOT,GALAtI,EAAM0K,EAAWC,EAAWrB,EAAKtuD,IAAK0vD,GAAY,EAE9CE,IACA5K,IAAQ,GAERA,EAAM,EAGFsJ,EADA3vD,KAAKixD,WACEtB,EAAK1J,KAGL0J,EAAKzJ,UAGf,IAAY,IAARG,EAAW,CAEhBrmD,KAAKmxD,WAAWh6C,KAAKw4C,GACrB,KACJ,CAGI3vD,KAAKmxD,WAAWh6C,KAAKw4C,GAEjBA,EADA3vD,KAAKixD,WACEtB,EAAKzJ,MAGLyJ,EAAK1J,IAEpB,CAER,CA4CA,OA3CA6K,EAAkB9yD,UAAUozD,QAAU,WAClC,GAA+B,IAA3BpxD,KAAKmxD,WAAWrpD,OAChB,OAAO,KAEX,IACI1G,EADAuuD,EAAO3vD,KAAKmxD,WAAWE,MAQ3B,GALIjwD,EADApB,KAAKkxD,iBACIlxD,KAAKkxD,iBAAiBvB,EAAKtuD,IAAKsuD,EAAKrtD,OAGrC,CAAEjB,IAAKsuD,EAAKtuD,IAAKiB,MAAOqtD,EAAKrtD,OAEtCtC,KAAKixD,WAEL,IADAtB,EAAOA,EAAK1J,MACJ0J,EAAKhB,WACT3uD,KAAKmxD,WAAWh6C,KAAKw4C,GACrBA,EAAOA,EAAKzJ,WAKhB,IADAyJ,EAAOA,EAAKzJ,OACJyJ,EAAKhB,WACT3uD,KAAKmxD,WAAWh6C,KAAKw4C,GACrBA,EAAOA,EAAK1J,KAGpB,OAAO7kD,CACX,EACA0vD,EAAkB9yD,UAAUszD,QAAU,WAClC,OAAOtxD,KAAKmxD,WAAWrpD,OAAS,CACpC,EACAgpD,EAAkB9yD,UAAUuzD,KAAO,WAC/B,GAA+B,IAA3BvxD,KAAKmxD,WAAWrpD,OAChB,OAAO,KAEX,IAAI6nD,EAAO3vD,KAAKmxD,WAAWnxD,KAAKmxD,WAAWrpD,OAAS,GACpD,OAAI9H,KAAKkxD,iBACElxD,KAAKkxD,iBAAiBvB,EAAKtuD,IAAKsuD,EAAKrtD,OAGrC,CAAEjB,IAAKsuD,EAAKtuD,IAAKiB,MAAOqtD,EAAKrtD,MAE5C,EACOwuD,CACX,CAxFuC,GA4FnCU,GAA0B,WAQ1B,SAASA,EAASnwD,EAAKiB,EAAOmvD,EAAOxL,EAAMC,GACvClmD,KAAKqB,IAAMA,EACXrB,KAAKsC,MAAQA,EACbtC,KAAKyxD,MAAiB,MAATA,EAAgBA,EAAQD,EAASE,IAC9C1xD,KAAKimD,KACO,MAARA,EAAeA,EAAO0L,GAAUC,WACpC5xD,KAAKkmD,MACQ,MAATA,EAAgBA,EAAQyL,GAAUC,UAC1C,CAkPA,OAvOAJ,EAASxzD,UAAU6zD,KAAO,SAAUxwD,EAAKiB,EAAOmvD,EAAOxL,EAAMC,GACzD,OAAO,IAAIsL,EAAgB,MAAPnwD,EAAcA,EAAMrB,KAAKqB,IAAc,MAATiB,EAAgBA,EAAQtC,KAAKsC,MAAgB,MAATmvD,EAAgBA,EAAQzxD,KAAKyxD,MAAe,MAARxL,EAAeA,EAAOjmD,KAAKimD,KAAe,MAATC,EAAgBA,EAAQlmD,KAAKkmD,MAC5L,EAIAsL,EAASxzD,UAAU8zD,MAAQ,WACvB,OAAO9xD,KAAKimD,KAAK6L,QAAU,EAAI9xD,KAAKkmD,MAAM4L,OAC9C,EAIAN,EAASxzD,UAAU2wD,QAAU,WACzB,OAAO,CACX,EAUA6C,EAASxzD,UAAU+zD,iBAAmB,SAAU3gD,GAC5C,OAAQpR,KAAKimD,KAAK8L,iBAAiB3gD,MAC7BA,EAAOpR,KAAKqB,IAAKrB,KAAKsC,QACxBtC,KAAKkmD,MAAM6L,iBAAiB3gD,EACpC,EASAogD,EAASxzD,UAAUg0D,iBAAmB,SAAU5gD,GAC5C,OAAQpR,KAAKkmD,MAAM8L,iBAAiB5gD,IAChCA,EAAOpR,KAAKqB,IAAKrB,KAAKsC,QACtBtC,KAAKimD,KAAK+L,iBAAiB5gD,EACnC,EAIAogD,EAASxzD,UAAUi0D,KAAO,WACtB,OAAIjyD,KAAKimD,KAAK0I,UACH3uD,KAGAA,KAAKimD,KAAKgM,MAEzB,EAIAT,EAASxzD,UAAUk0D,OAAS,WACxB,OAAOlyD,KAAKiyD,OAAO5wD,GACvB,EAIAmwD,EAASxzD,UAAUm0D,OAAS,WACxB,OAAInyD,KAAKkmD,MAAMyI,UACJ3uD,KAAKqB,IAGLrB,KAAKkmD,MAAMiM,QAE1B,EAOAX,EAASxzD,UAAUo0D,OAAS,SAAU/wD,EAAKiB,EAAO0uD,GAC9C,IAAIqB,EAAIryD,KACJqmD,EAAM2K,EAAW3vD,EAAKgxD,EAAEhxD,KAU5B,OARIgxD,EADAhM,EAAM,EACFgM,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAEpM,KAAKmM,OAAO/wD,EAAKiB,EAAO0uD,GAAa,MAEvD,IAAR3K,EACDgM,EAAER,KAAK,KAAMvvD,EAAO,KAAM,KAAM,MAGhC+vD,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEnM,MAAMkM,OAAO/wD,EAAKiB,EAAO0uD,KAEzDsB,QACb,EAIAd,EAASxzD,UAAUu0D,WAAa,WAC5B,GAAIvyD,KAAKimD,KAAK0I,UACV,OAAOgD,GAAUC,WAErB,IAAIS,EAAIryD,KAKR,OAJKqyD,EAAEpM,KAAKuM,UAAaH,EAAEpM,KAAKA,KAAKuM,WACjCH,EAAIA,EAAEI,iBAEVJ,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAEpM,KAAKsM,aAAc,OACzCD,QACb,EAMAd,EAASxzD,UAAUouC,OAAS,SAAU/qC,EAAK2vD,GACvC,IAAIqB,EAAGK,EAEP,GAAI1B,EAAW3vD,GADfgxD,EAAIryD,MACkBqB,KAAO,EACpBgxD,EAAEpM,KAAK0I,WAAc0D,EAAEpM,KAAKuM,UAAaH,EAAEpM,KAAKA,KAAKuM,WACtDH,EAAIA,EAAEI,gBAEVJ,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAMQ,EAAEpM,KAAK7Z,OAAO/qC,EAAK2vD,GAAa,UAE5D,CAOD,GANIqB,EAAEpM,KAAKuM,WACPH,EAAIA,EAAEM,gBAELN,EAAEnM,MAAMyI,WAAc0D,EAAEnM,MAAMsM,UAAaH,EAAEnM,MAAMD,KAAKuM,WACzDH,EAAIA,EAAEO,iBAEqB,IAA3B5B,EAAW3vD,EAAKgxD,EAAEhxD,KAAY,CAC9B,GAAIgxD,EAAEnM,MAAMyI,UACR,OAAOgD,GAAUC,WAGjBc,EAAWL,EAAEnM,MAAM+L,OACnBI,EAAIA,EAAER,KAAKa,EAASrxD,IAAKqxD,EAASpwD,MAAO,KAAM,KAAM+vD,EAAEnM,MAAMqM,aAErE,CACAF,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEnM,MAAM9Z,OAAO/qC,EAAK2vD,GAC3D,CACA,OAAOqB,EAAEC,QACb,EAIAd,EAASxzD,UAAUw0D,OAAS,WACxB,OAAOxyD,KAAKyxD,KAChB,EAIAD,EAASxzD,UAAUs0D,OAAS,WACxB,IAAID,EAAIryD,KAUR,OATIqyD,EAAEnM,MAAMsM,WAAaH,EAAEpM,KAAKuM,WAC5BH,EAAIA,EAAEQ,eAENR,EAAEpM,KAAKuM,UAAYH,EAAEpM,KAAKA,KAAKuM,WAC/BH,EAAIA,EAAEM,gBAENN,EAAEpM,KAAKuM,UAAYH,EAAEnM,MAAMsM,WAC3BH,EAAIA,EAAES,cAEHT,CACX,EAIAb,EAASxzD,UAAUy0D,aAAe,WAC9B,IAAIJ,EAAIryD,KAAK8yD,aAMb,OALIT,EAAEnM,MAAMD,KAAKuM,WAGbH,GADAA,GADAA,EAAIA,EAAER,KAAK,KAAM,KAAM,KAAM,KAAMQ,EAAEnM,MAAMyM,iBACrCE,eACAC,cAEHT,CACX,EAIAb,EAASxzD,UAAU40D,cAAgB,WAC/B,IAAIP,EAAIryD,KAAK8yD,aAKb,OAJIT,EAAEpM,KAAKA,KAAKuM,WAEZH,GADAA,EAAIA,EAAEM,gBACAG,cAEHT,CACX,EAIAb,EAASxzD,UAAU60D,YAAc,WAC7B,IAAIE,EAAK/yD,KAAK6xD,KAAK,KAAM,KAAML,EAASE,IAAK,KAAM1xD,KAAKkmD,MAAMD,MAC9D,OAAOjmD,KAAKkmD,MAAM2L,KAAK,KAAM,KAAM7xD,KAAKyxD,MAAOsB,EAAI,KACvD,EAIAvB,EAASxzD,UAAU20D,aAAe,WAC9B,IAAIK,EAAKhzD,KAAK6xD,KAAK,KAAM,KAAML,EAASE,IAAK1xD,KAAKimD,KAAKC,MAAO,MAC9D,OAAOlmD,KAAKimD,KAAK4L,KAAK,KAAM,KAAM7xD,KAAKyxD,MAAO,KAAMuB,EACxD,EAIAxB,EAASxzD,UAAU80D,WAAa,WAC5B,IAAI7M,EAAOjmD,KAAKimD,KAAK4L,KAAK,KAAM,MAAO7xD,KAAKimD,KAAKwL,MAAO,KAAM,MAC1DvL,EAAQlmD,KAAKkmD,MAAM2L,KAAK,KAAM,MAAO7xD,KAAKkmD,MAAMuL,MAAO,KAAM,MACjE,OAAOzxD,KAAK6xD,KAAK,KAAM,MAAO7xD,KAAKyxD,MAAOxL,EAAMC,EACpD,EAMAsL,EAASxzD,UAAUi1D,eAAiB,WAChC,IAAIC,EAAalzD,KAAKmzD,SACtB,OAAO5+C,KAAK27B,IAAI,EAAKgjB,IAAelzD,KAAK8xD,QAAU,CACvD,EACAN,EAASxzD,UAAUm1D,OAAS,WACxB,GAAInzD,KAAKwyD,UAAYxyD,KAAKimD,KAAKuM,SAC3B,MAAM,IAAI7yD,MAAM,0BAA4BK,KAAKqB,IAAM,IAAMrB,KAAKsC,MAAQ,KAE9E,GAAItC,KAAKkmD,MAAMsM,SACX,MAAM,IAAI7yD,MAAM,mBAAqBK,KAAKqB,IAAM,IAAMrB,KAAKsC,MAAQ,YAEvE,IAAI4wD,EAAalzD,KAAKimD,KAAKkN,SAC3B,GAAID,IAAelzD,KAAKkmD,MAAMiN,SAC1B,MAAM,IAAIxzD,MAAM,uBAGhB,OAAOuzD,GAAclzD,KAAKwyD,SAAW,EAAI,EAEjD,EACAhB,EAASE,KAAM,EACfF,EAAS4B,OAAQ,EACV5B,CACX,CAnQ8B,GAuQ1B6B,GAA+B,WAC/B,SAASA,IACT,CA+EA,OAzEAA,EAAcr1D,UAAU6zD,KAAO,SAAUxwD,EAAKiB,EAAOmvD,EAAOxL,EAAMC,GAC9D,OAAOlmD,IACX,EASAqzD,EAAcr1D,UAAUo0D,OAAS,SAAU/wD,EAAKiB,EAAO0uD,GACnD,OAAO,IAAIQ,GAASnwD,EAAKiB,EAAO,KACpC,EAQA+wD,EAAcr1D,UAAUouC,OAAS,SAAU/qC,EAAK2vD,GAC5C,OAAOhxD,IACX,EAIAqzD,EAAcr1D,UAAU8zD,MAAQ,WAC5B,OAAO,CACX,EAIAuB,EAAcr1D,UAAU2wD,QAAU,WAC9B,OAAO,CACX,EASA0E,EAAcr1D,UAAU+zD,iBAAmB,SAAU3gD,GACjD,OAAO,CACX,EASAiiD,EAAcr1D,UAAUg0D,iBAAmB,SAAU5gD,GACjD,OAAO,CACX,EACAiiD,EAAcr1D,UAAUk0D,OAAS,WAC7B,OAAO,IACX,EACAmB,EAAcr1D,UAAUm0D,OAAS,WAC7B,OAAO,IACX,EACAkB,EAAcr1D,UAAUm1D,OAAS,WAC7B,OAAO,CACX,EAIAE,EAAcr1D,UAAUw0D,OAAS,WAC7B,OAAO,CACX,EACOa,CACX,CAlFmC,GAuF/B1B,GAA2B,WAK3B,SAASA,EAAU2B,EAAaC,QACd,IAAVA,IAAoBA,EAAQ5B,EAAUC,YAC1C5xD,KAAKszD,YAAcA,EACnBtzD,KAAKuzD,MAAQA,CACjB,CAsJA,OA7IA5B,EAAU3zD,UAAUo0D,OAAS,SAAU/wD,EAAKiB,GACxC,OAAO,IAAIqvD,EAAU3xD,KAAKszD,YAAatzD,KAAKuzD,MACvCnB,OAAO/wD,EAAKiB,EAAOtC,KAAKszD,aACxBzB,KAAK,KAAM,KAAML,GAAS4B,MAAO,KAAM,MAChD,EAOAzB,EAAU3zD,UAAUouC,OAAS,SAAU/qC,GACnC,OAAO,IAAIswD,EAAU3xD,KAAKszD,YAAatzD,KAAKuzD,MACvCnnB,OAAO/qC,EAAKrB,KAAKszD,aACjBzB,KAAK,KAAM,KAAML,GAAS4B,MAAO,KAAM,MAChD,EAQAzB,EAAU3zD,UAAUmC,IAAM,SAAUkB,GAGhC,IAFA,IAAIglD,EACAsJ,EAAO3vD,KAAKuzD,OACR5D,EAAKhB,WAAW,CAEpB,GAAY,KADZtI,EAAMrmD,KAAKszD,YAAYjyD,EAAKsuD,EAAKtuD,MAE7B,OAAOsuD,EAAKrtD,MAEP+jD,EAAM,EACXsJ,EAAOA,EAAK1J,KAEPI,EAAM,IACXsJ,EAAOA,EAAKzJ,MAEpB,CACA,OAAO,IACX,EAMAyL,EAAU3zD,UAAUw1D,kBAAoB,SAAUnyD,GAE9C,IADA,IAAIglD,EAAKsJ,EAAO3vD,KAAKuzD,MAAOE,EAAc,MAClC9D,EAAKhB,WAAW,CAEpB,GAAY,KADZtI,EAAMrmD,KAAKszD,YAAYjyD,EAAKsuD,EAAKtuD,MAClB,CACX,GAAKsuD,EAAK1J,KAAK0I,UAOV,OAAI8E,EACEA,EAAYpyD,IAGZ,KATP,IADAsuD,EAAOA,EAAK1J,MACJ0J,EAAKzJ,MAAMyI,WACfgB,EAAOA,EAAKzJ,MAEhB,OAAOyJ,EAAKtuD,GAQpB,CACSglD,EAAM,EACXsJ,EAAOA,EAAK1J,KAEPI,EAAM,IACXoN,EAAc9D,EACdA,EAAOA,EAAKzJ,MAEpB,CACA,MAAM,IAAIvmD,MAAM,wEACpB,EAIAgyD,EAAU3zD,UAAU2wD,QAAU,WAC1B,OAAO3uD,KAAKuzD,MAAM5E,SACtB,EAIAgD,EAAU3zD,UAAU8zD,MAAQ,WACxB,OAAO9xD,KAAKuzD,MAAMzB,OACtB,EAIAH,EAAU3zD,UAAUk0D,OAAS,WACzB,OAAOlyD,KAAKuzD,MAAMrB,QACtB,EAIAP,EAAU3zD,UAAUm0D,OAAS,WACzB,OAAOnyD,KAAKuzD,MAAMpB,QACtB,EAUAR,EAAU3zD,UAAU+zD,iBAAmB,SAAU3gD,GAC7C,OAAOpR,KAAKuzD,MAAMxB,iBAAiB3gD,EACvC,EASAugD,EAAU3zD,UAAUg0D,iBAAmB,SAAU5gD,GAC7C,OAAOpR,KAAKuzD,MAAMvB,iBAAiB5gD,EACvC,EAKAugD,EAAU3zD,UAAU01D,YAAc,SAAUC,GACxC,OAAO,IAAI7C,GAAkB9wD,KAAKuzD,MAAO,KAAMvzD,KAAKszD,aAAa,EAAOK,EAC5E,EACAhC,EAAU3zD,UAAU41D,gBAAkB,SAAUvyD,EAAKsyD,GACjD,OAAO,IAAI7C,GAAkB9wD,KAAKuzD,MAAOlyD,EAAKrB,KAAKszD,aAAa,EAAOK,EAC3E,EACAhC,EAAU3zD,UAAU61D,uBAAyB,SAAUxyD,EAAKsyD,GACxD,OAAO,IAAI7C,GAAkB9wD,KAAKuzD,MAAOlyD,EAAKrB,KAAKszD,aAAa,EAAMK,EAC1E,EACAhC,EAAU3zD,UAAU81D,mBAAqB,SAAUH,GAC/C,OAAO,IAAI7C,GAAkB9wD,KAAKuzD,MAAO,KAAMvzD,KAAKszD,aAAa,EAAMK,EAC3E,EAIAhC,EAAUC,WAAa,IAAIyB,GACpB1B,CACX,CAhK+B,GAkL/B,SAASoC,GAAqB9N,EAAMC,GAChC,OAAOrX,EAAYoX,EAAKriD,KAAMsiD,EAAMtiD,KACxC,CACA,SAASowD,GAAgB/N,EAAMC,GAC3B,OAAOrX,EAAYoX,EAAMC,EAC7B,CAsBA,IAyCI+N,GA6OAC,GACAC,GAvRAC,GAAmB,SAAUC,GAC7B,MAAwB,kBAAbA,EACA,UAAYzkB,EAAsBykB,GAGlC,UAAYA,CAE3B,EAIIC,GAAuB,SAAUC,GACjC,GAAIA,EAAaC,aAAc,CAC3B,IAAI9xC,EAAM6xC,EAAa7xC,MACvBurB,iBAAsB,kBAARvrB,GACK,kBAARA,GACS,kBAARA,GAAoB1Z,mBAAS0Z,EAAK,OAAS,uCAC3D,MAEIurB,iBAAOsmB,IAAiBpN,IAAcoN,EAAa5F,UAAW,gCAGlE1gB,iBAAOsmB,IAAiBpN,IAAcoN,EAAaE,cAAc9F,UAAW,qDAChF,EAwBI+F,GAA0B,WAM1B,SAASA,EAASC,EAAQC,QACA,IAAlBA,IAA4BA,EAAgBF,EAAST,0BAA0BrC,YACnF5xD,KAAK20D,OAASA,EACd30D,KAAK40D,cAAgBA,EACrB50D,KAAK60D,UAAY,KACjB5mB,sBAAuB3tC,IAAhBN,KAAK20D,QAAwC,OAAhB30D,KAAK20D,OAAiB,4DAC1DL,GAAqBt0D,KAAK40D,cAC9B,CAuMA,OAtMAp1D,OAAO+kB,eAAemwC,EAAU,4BAA6B,CACzDv0D,IAAK,WACD,OAAO8zD,EACX,EACApyC,IAAK,SAAUa,GACXuxC,GAA4BvxC,CAChC,EACA2wB,YAAY,EACZC,cAAc,IAGlBohB,EAAS12D,UAAUw2D,WAAa,WAC5B,OAAO,CACX,EAEAE,EAAS12D,UAAUy2D,YAAc,WAC7B,OAAOz0D,KAAK40D,aAChB,EAEAF,EAAS12D,UAAU82D,eAAiB,SAAUC,GAC1C,OAAO,IAAIL,EAAS10D,KAAK20D,OAAQI,EACrC,EAEAL,EAAS12D,UAAUg3D,kBAAoB,SAAUC,GAE7C,MAAkB,cAAdA,EACOj1D,KAAK40D,cAGLF,EAAST,0BAA0BrC,UAElD,EAEA8C,EAAS12D,UAAUk3D,SAAW,SAAU56C,GACpC,OAAIorC,GAAYprC,GACLta,KAEqB,cAAvB+kD,GAAazqC,GACXta,KAAK40D,cAGLF,EAAST,0BAA0BrC,UAElD,EACA8C,EAAS12D,UAAUm3D,SAAW,WAC1B,OAAO,CACX,EAEAT,EAAS12D,UAAUo3D,wBAA0B,SAAUH,EAAWI,GAC9D,OAAO,IACX,EAEAX,EAAS12D,UAAUs3D,qBAAuB,SAAUL,EAAWM,GAC3D,MAAkB,cAAdN,EACOj1D,KAAK80D,eAAeS,GAEtBA,EAAa5G,WAA2B,cAAdsG,EACxBj1D,KAGA00D,EAAST,0BAA0BrC,WAAW0D,qBAAqBL,EAAWM,GAAcT,eAAe90D,KAAK40D,cAE/H,EAEAF,EAAS12D,UAAUw3D,YAAc,SAAUl7C,EAAMi7C,GAC7C,IAAIE,EAAQ1Q,GAAazqC,GACzB,OAAc,OAAVm7C,EACOF,EAEFA,EAAa5G,WAAuB,cAAV8G,EACxBz1D,MAGPiuC,iBAAiB,cAAVwnB,GAAiD,IAAxBzQ,GAAc1qC,GAAa,8CACpDta,KAAKs1D,qBAAqBG,EAAOf,EAAST,0BAA0BrC,WAAW4D,YAAYvQ,GAAa3qC,GAAOi7C,IAE9H,EAEAb,EAAS12D,UAAU2wD,QAAU,WACzB,OAAO,CACX,EAEA+F,EAAS12D,UAAU03D,YAAc,WAC7B,OAAO,CACX,EAEAhB,EAAS12D,UAAU23D,aAAe,SAAUxsD,EAAOiI,GAC/C,OAAO,CACX,EACAsjD,EAAS12D,UAAU0kB,IAAM,SAAUkzC,GAC/B,OAAIA,IAAiB51D,KAAKy0D,cAAc9F,UAC7B,CACH,SAAU3uD,KAAKmpC,WACf,YAAanpC,KAAKy0D,cAAc/xC,OAI7B1iB,KAAKmpC,UAEpB,EAEAurB,EAAS12D,UAAUglD,KAAO,WACtB,GAAuB,OAAnBhjD,KAAK60D,UAAoB,CACzB,IAAIgB,EAAS,GACR71D,KAAK40D,cAAcjG,YACpBkH,GACI,YACIzB,GAAiBp0D,KAAK40D,cAAclyC,OACpC,KAEZ,IAAInQ,SAAcvS,KAAK20D,OACvBkB,GAAUtjD,EAAO,IAEbsjD,GADS,WAATtjD,EACUq9B,EAAsB5vC,KAAK20D,QAG3B30D,KAAK20D,OAEnB30D,KAAK60D,UAAY5nB,EAAK4oB,EAC1B,CACA,OAAO71D,KAAK60D,SAChB,EAKAH,EAAS12D,UAAUmrC,SAAW,WAC1B,OAAOnpC,KAAK20D,MAChB,EACAD,EAAS12D,UAAU83D,UAAY,SAAUvP,GACrC,OAAIA,IAAUmO,EAAST,0BAA0BrC,WACtC,EAEFrL,aAAiBmO,EAAST,2BACvB,GAGRhmB,iBAAOsY,EAAMiO,aAAc,qBACpBx0D,KAAK+1D,mBAAmBxP,GAEvC,EAIAmO,EAAS12D,UAAU+3D,mBAAqB,SAAUC,GAC9C,IAAIC,SAAuBD,EAAUrB,OACjCuB,SAAsBl2D,KAAK20D,OAC3BwB,EAAazB,EAAS0B,iBAAiB/+C,QAAQ4+C,GAC/CI,EAAY3B,EAAS0B,iBAAiB/+C,QAAQ6+C,GAGlD,OAFAjoB,iBAAOkoB,GAAc,EAAG,sBAAwBF,GAChDhoB,iBAAOooB,GAAa,EAAG,sBAAwBH,GAC3CC,IAAeE,EAEM,WAAjBH,EAEO,EAIHl2D,KAAK20D,OAASqB,EAAUrB,QAChB,EAEH30D,KAAK20D,SAAWqB,EAAUrB,OACxB,EAGA,EAKR0B,EAAYF,CAE3B,EACAzB,EAAS12D,UAAUs4D,UAAY,WAC3B,OAAOt2D,IACX,EACA00D,EAAS12D,UAAUu4D,UAAY,WAC3B,OAAO,CACX,EACA7B,EAAS12D,UAAUw4D,OAAS,SAAUjQ,GAClC,GAAIA,IAAUvmD,KACV,OAAO,EAEN,GAAIumD,EAAMiO,aAAc,CACzB,IAAIwB,EAAYzP,EAChB,OAAQvmD,KAAK20D,SAAWqB,EAAUrB,QAC9B30D,KAAK40D,cAAc4B,OAAOR,EAAUpB,cAC5C,CAEI,OAAO,CAEf,EAKAF,EAAS0B,iBAAmB,CAAC,SAAU,UAAW,SAAU,UACrD1B,CACX,CArN8B,GA+O9B,IAiLI+B,GAkJA7E,GAnUA8E,GAA+B,SAAUvS,GAEzC,SAASuS,IACL,OAAkB,OAAXvS,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CAmCA,OAtCAskD,oBAAUoS,EAAevS,GAIzBuS,EAAc14D,UAAU+xD,QAAU,SAAUjhB,EAAG73B,GAC3C,IAAI0/C,EAAY7nB,EAAE6gB,KAAK8E,cACnBmC,EAAY3/C,EAAE04C,KAAK8E,cACnBoC,EAAWF,EAAUb,UAAUc,GACnC,OAAiB,IAAbC,EACOhoB,EAAYC,EAAElrC,KAAMqT,EAAErT,MAGtBizD,CAEf,EACAH,EAAc14D,UAAUwyD,YAAc,SAAUb,GAC5C,OAAQA,EAAK8E,cAAc9F,SAC/B,EACA+H,EAAc14D,UAAUgyD,oBAAsB,SAAUC,EAASC,GAC7D,OAAQD,EAAQwE,cAAc+B,OAAOtG,EAAQuE,cACjD,EACAiC,EAAc14D,UAAUqyD,QAAU,WAE9B,OAAOX,GAAUY,GACrB,EACAoG,EAAc14D,UAAU0yD,QAAU,WAC9B,OAAO,IAAIhB,GAAU9gB,EAAU,IAAI8lB,GAAS,kBAAmBP,IACnE,EACAuC,EAAc14D,UAAU2yD,SAAW,SAAUC,EAAYhtD,GACrD,IAAI2wD,EAAeL,GAAetD,GAClC,OAAO,IAAIlB,GAAU9rD,EAAM,IAAI8wD,GAAS,kBAAmBH,GAC/D,EAIAmC,EAAc14D,UAAU4D,SAAW,WAC/B,MAAO,WACX,EACO80D,CACX,CAxCmC,CAwCjC7G,IACEiH,GAAiB,IAAIJ,GAkBrBK,GAAQxiD,KAAK65B,IAAI,GACjB4oB,GAA2B,WAC3B,SAASA,EAAUlvD,GACf,IAAyBi/B,EAKzB/mC,KAAK8xD,OALoB/qB,EAKHj/B,EAAS,EAHpB2oC,SAAUl8B,KAAK65B,IAAIrH,GAAOgwB,GAAQ,KAI7C/2D,KAAKi3D,SAAWj3D,KAAK8xD,MAAQ,EAC7B,IAHwBzhB,EAGpB6mB,GAHoB7mB,EAGLrwC,KAAK8xD,MAHerhB,SAASzuC,MAAMquC,EAAO,GAAGrhB,KAAK,KAAM,IAI3EhvB,KAAKm3D,MAASrvD,EAAS,EAAKovD,CAChC,CAOA,OANAF,EAAUh5D,UAAUo5D,aAAe,WAE/B,IAAIh2D,IAAWpB,KAAKm3D,MAAS,GAAOn3D,KAAKi3D,UAEzC,OADAj3D,KAAKi3D,WACE71D,CACX,EACO41D,CACX,CAnB+B,GAiC3BK,GAAgB,SAAUC,EAAWjR,EAAKkR,EAAOC,GACjDF,EAAUhoB,KAAK+W,GACf,IAAIoR,EAAoB,SAAUC,EAAKC,GACnC,IACIC,EACAv2D,EAFAyG,EAAS6vD,EAAOD,EAGpB,GAAe,IAAX5vD,EACA,OAAO,KAEN,GAAe,IAAXA,EAGL,OAFA8vD,EAAYN,EAAUI,GACtBr2D,EAAMk2D,EAAQA,EAAMK,GAAaA,EAC1B,IAAIpG,GAASnwD,EAAKu2D,EAAUjI,KAAM6B,GAAS4B,MAAO,KAAM,MAI/D,IAAIv7C,EAAS44B,SAAU3oC,EAAS,EAAI,IAAM4vD,EACtCzR,EAAOwR,EAAkBC,EAAK7/C,GAC9BquC,EAAQuR,EAAkB5/C,EAAS,EAAG8/C,GAG1C,OAFAC,EAAYN,EAAUz/C,GACtBxW,EAAMk2D,EAAQA,EAAMK,GAAaA,EAC1B,IAAIpG,GAASnwD,EAAKu2D,EAAUjI,KAAM6B,GAAS4B,MAAOnN,EAAMC,EAEvE,EAwCI/zB,EAvCmB,SAAU0lC,GAuB7B,IAtBA,IAAIlI,EAAO,KACPx9B,EAAO,KACPhpB,EAAQmuD,EAAUxvD,OAClBgwD,EAAe,SAAUnwC,EAAW8pC,GACpC,IAAIiG,EAAMvuD,EAAQwe,EACdgwC,EAAOxuD,EACXA,GAASwe,EACT,IAAIowC,EAAYN,EAAkBC,EAAM,EAAGC,GACvCC,EAAYN,EAAUI,GACtBr2D,EAAMk2D,EAAQA,EAAMK,GAAaA,EACrCI,EAAc,IAAIxG,GAASnwD,EAAKu2D,EAAUjI,KAAM8B,EAAO,KAAMsG,GACjE,EACIC,EAAgB,SAAUC,GACtBtI,GACAA,EAAK1J,KAAOgS,EACZtI,EAAOsI,IAGP9lC,EAAO8lC,EACPtI,EAAOsI,EAEf,EACS/vD,EAAI,EAAGA,EAAI2vD,EAAO/F,QAAS5pD,EAAG,CACnC,IAAIgwD,EAAQL,EAAOT,eAEfzvC,EAAYpT,KAAK27B,IAAI,EAAG2nB,EAAO/F,OAAS5pD,EAAI,IAC5CgwD,EACAJ,EAAanwC,EAAW6pC,GAAS4B,QAIjC0E,EAAanwC,EAAW6pC,GAAS4B,OACjC0E,EAAanwC,EAAW6pC,GAASE,KAEzC,CACA,OAAOv/B,CACX,CAEWgmC,CADE,IAAInB,GAAUM,EAAUxvD,SAGrC,OAAO,IAAI6pD,GAAU6F,GAAanR,EAAKl0B,EAC3C,EAmBIimC,GAAiB,CAAC,EAClBC,GAA0B,WAC1B,SAASA,EAASC,EAAUC,GACxBv4D,KAAKs4D,SAAWA,EAChBt4D,KAAKu4D,UAAYA,CACrB,CAwHA,OAvHA/4D,OAAO+kB,eAAe8zC,EAAU,UAAW,CAIvCl4D,IAAK,WAKD,OAJA8tC,iBAAOmqB,IAAkBtB,GAAgB,uCACzCL,GACIA,IACI,IAAI4B,EAAS,CAAE,YAAaD,IAAkB,CAAE,YAAatB,IAEzE,EACAzjB,YAAY,EACZC,cAAc,IAElB+kB,EAASr6D,UAAUmC,IAAM,SAAUq4D,GAC/B,IAAIC,EAAYrN,kBAAQprD,KAAKs4D,SAAUE,GACvC,IAAKC,EACD,MAAM,IAAI94D,MAAM,wBAA0B64D,GAE9C,OAAIC,aAAqB9G,GACd8G,EAKA,IAEf,EACAJ,EAASr6D,UAAU06D,SAAW,SAAUC,GACpC,OAAO3vD,mBAAShJ,KAAKu4D,UAAWI,EAAgB/2D,WACpD,EACAy2D,EAASr6D,UAAU46D,SAAW,SAAUD,EAAiBE,GACrD5qB,iBAAO0qB,IAAoB9H,GAAW,uEAKtC,IAJA,IAUIiI,EAVAxB,EAAY,GACZyB,GAAkB,EAClBC,EAAOH,EAAiBnF,YAAYhE,GAAUE,MAC9Cz+C,EAAO6nD,EAAK5H,UACTjgD,GACH4nD,EACIA,GAAmBJ,EAAgBnI,YAAYr/C,EAAKw+C,MACxD2H,EAAUngD,KAAKhG,GACfA,EAAO6nD,EAAK5H,UAIZ0H,EADAC,EACW1B,GAAcC,EAAWqB,EAAgB7I,cAGzCsI,GAEf,IAAIa,EAAYN,EAAgB/2D,WAC5Bs3D,EAAcC,mBAAS,CAAC,EAAGn5D,KAAKu4D,WACpCW,EAAYD,GAAaN,EACzB,IAAIS,EAAaD,mBAAS,CAAC,EAAGn5D,KAAKs4D,UAEnC,OADAc,EAAWH,GAAaH,EACjB,IAAIT,EAASe,EAAYF,EACpC,EAIAb,EAASr6D,UAAUq7D,aAAe,SAAUzB,EAAWiB,GACnD,IAAIznB,EAAQpxC,KAkCZ,OAAO,IAAIq4D,EAjCMn2D,cAAIlC,KAAKs4D,SAAU,SAAUgB,EAAiBL,GAC3D,IAAI9vD,EAAQiiD,kBAAQha,EAAMmnB,UAAWU,GAErC,GADAhrB,iBAAO9kC,EAAO,oCAAsC8vD,GAChDK,IAAoBlB,GAAgB,CAEpC,GAAIjvD,EAAMqnD,YAAYoH,EAAUjI,MAAO,CAKnC,IAHA,IAAI2H,EAAY,GACZ0B,EAAOH,EAAiBnF,YAAYhE,GAAUE,MAC9Cz+C,EAAO6nD,EAAK5H,UACTjgD,GACCA,EAAKvN,OAASg0D,EAAUh0D,MACxB0zD,EAAUngD,KAAKhG,GAEnBA,EAAO6nD,EAAK5H,UAGhB,OADAkG,EAAUngD,KAAKygD,GACRP,GAAcC,EAAWnuD,EAAM2mD,aAC1C,CAGI,OAAOsI,EAEf,CAEI,IAAImB,EAAeV,EAAiB14D,IAAIy3D,EAAUh0D,MAC9C41D,EAAcF,EAIlB,OAHIC,IACAC,EAAcA,EAAYptB,OAAO,IAAIsjB,GAAUkI,EAAUh0D,KAAM21D,KAE5DC,EAAYpH,OAAOwF,EAAWA,EAAUjI,KAEvD,GACgC3vD,KAAKu4D,UACzC,EAIAF,EAASr6D,UAAUy7D,kBAAoB,SAAU7B,EAAWiB,GAiBxD,OAAO,IAAIR,EAhBMn2D,cAAIlC,KAAKs4D,SAAU,SAAUgB,GAC1C,GAAIA,IAAoBlB,GAEpB,OAAOkB,EAGP,IAAIC,EAAeV,EAAiB14D,IAAIy3D,EAAUh0D,MAClD,OAAI21D,EACOD,EAAgBltB,OAAO,IAAIsjB,GAAUkI,EAAUh0D,KAAM21D,IAIrDD,CAGnB,GACgCt5D,KAAKu4D,UACzC,EACOF,CACX,CA7H8B,GAsJ1BqB,GAA8B,WAK9B,SAASA,EAAaC,EAAW/E,EAAegF,GAC5C55D,KAAK25D,UAAYA,EACjB35D,KAAK40D,cAAgBA,EACrB50D,KAAK45D,UAAYA,EACjB55D,KAAK60D,UAAY,KAMb70D,KAAK40D,eACLN,GAAqBt0D,KAAK40D,eAE1B50D,KAAK25D,UAAUhL,WACf1gB,kBAAQjuC,KAAK40D,eAAiB50D,KAAK40D,cAAcjG,UAAW,uCAEpE,CAsUA,OArUAnvD,OAAO+kB,eAAem1C,EAAc,aAAc,CAC9Cv5D,IAAK,WACD,OAAQyxD,KACHA,GAAa,IAAI8H,EAAa,IAAI/H,GAAUqC,IAAkB,KAAMqE,GAASwB,SACtF,EACAxmB,YAAY,EACZC,cAAc,IAGlBomB,EAAa17D,UAAUw2D,WAAa,WAChC,OAAO,CACX,EAEAkF,EAAa17D,UAAUy2D,YAAc,WACjC,OAAOz0D,KAAK40D,eAAiBhD,EACjC,EAEA8H,EAAa17D,UAAU82D,eAAiB,SAAUC,GAC9C,OAAI/0D,KAAK25D,UAAUhL,UAER3uD,KAGA,IAAI05D,EAAa15D,KAAK25D,UAAW5E,EAAiB/0D,KAAK45D,UAEtE,EAEAF,EAAa17D,UAAUg3D,kBAAoB,SAAUC,GAEjD,GAAkB,cAAdA,EACA,OAAOj1D,KAAKy0D,cAGZ,IAAIxlC,EAAQjvB,KAAK25D,UAAUx5D,IAAI80D,GAC/B,OAAiB,OAAVhmC,EAAiB2iC,GAAa3iC,CAE7C,EAEAyqC,EAAa17D,UAAUk3D,SAAW,SAAU56C,GACxC,IAAIm7C,EAAQ1Q,GAAazqC,GACzB,OAAc,OAAVm7C,EACOz1D,KAEJA,KAAKg1D,kBAAkBS,GAAOP,SAASjQ,GAAa3qC,GAC/D,EAEAo/C,EAAa17D,UAAUm3D,SAAW,SAAUF,GACxC,OAAyC,OAAlCj1D,KAAK25D,UAAUx5D,IAAI80D,EAC9B,EAEAyE,EAAa17D,UAAUs3D,qBAAuB,SAAUL,EAAWM,GAE/D,GADAtnB,iBAAOsnB,EAAc,8CACH,cAAdN,EACA,OAAOj1D,KAAK80D,eAAeS,GAG3B,IAAIqC,EAAY,IAAIlI,GAAUuF,EAAWM,GACrCiE,OAAc,EAAQM,OAAc,EACpCvE,EAAa5G,WACb6K,EAAcx5D,KAAK25D,UAAUvtB,OAAO6oB,GACpC6E,EAAc95D,KAAK45D,UAAUH,kBAAkB7B,EAAW53D,KAAK25D,aAG/DH,EAAcx5D,KAAK25D,UAAUvH,OAAO6C,EAAWM,GAC/CuE,EAAc95D,KAAK45D,UAAUP,aAAazB,EAAW53D,KAAK25D,YAE9D,IAAII,EAAcP,EAAY7K,UACxBiD,GACA5xD,KAAK40D,cACX,OAAO,IAAI8E,EAAaF,EAAaO,EAAaD,EAE1D,EAEAJ,EAAa17D,UAAUw3D,YAAc,SAAUl7C,EAAMi7C,GACjD,IAAIE,EAAQ1Q,GAAazqC,GACzB,GAAc,OAAVm7C,EACA,OAAOF,EAGPtnB,iBAA8B,cAAvB8W,GAAazqC,IAAiD,IAAxB0qC,GAAc1qC,GAAa,8CACxE,IAAI0/C,EAAoBh6D,KAAKg1D,kBAAkBS,GAAOD,YAAYvQ,GAAa3qC,GAAOi7C,GACtF,OAAOv1D,KAAKs1D,qBAAqBG,EAAOuE,EAEhD,EAEAN,EAAa17D,UAAU2wD,QAAU,WAC7B,OAAO3uD,KAAK25D,UAAUhL,SAC1B,EAEA+K,EAAa17D,UAAU03D,YAAc,WACjC,OAAO11D,KAAK25D,UAAU7H,OAC1B,EAEA4H,EAAa17D,UAAU0kB,IAAM,SAAUkzC,GACnC,GAAI51D,KAAK2uD,UACL,OAAO,KAEX,IAAI5rC,EAAM,CAAC,EACPk3C,EAAU,EAAG9H,EAAS,EAAG+H,GAAiB,EAW9C,GAVAl6D,KAAK21D,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAC7CtyC,EAAI1hB,GAAOg0D,EAAU3yC,IAAIkzC,GACzBqE,IACIC,GAAkBR,EAAa/oB,gBAAgBxhB,KAAK9tB,GACpD8wD,EAAS59C,KAAK4nB,IAAIg2B,EAAQ1wD,OAAOJ,IAGjC64D,GAAiB,CAEzB,IACKtE,GAAgBsE,GAAkB/H,EAAS,EAAI8H,EAAS,CAEzD,IAAI9yD,EAAQ,GAEZ,IAAK,IAAI9F,KAAO0hB,EACZ5b,EAAM9F,GAAO0hB,EAAI1hB,GAErB,OAAO8F,CACX,CAKI,OAHIyuD,IAAiB51D,KAAKy0D,cAAc9F,YACpC5rC,EAAI,aAAe/iB,KAAKy0D,cAAc/xC,OAEnCK,CAEf,EAEA22C,EAAa17D,UAAUglD,KAAO,WAC1B,GAAuB,OAAnBhjD,KAAK60D,UAAoB,CACzB,IAAIsF,EAAW,GACVn6D,KAAKy0D,cAAc9F,YACpBwL,GACI,YACI/F,GAAiBp0D,KAAKy0D,cAAc/xC,OACpC,KAEZ1iB,KAAK21D,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAC7C,IAAI+E,EAAY/E,EAAUrS,OACR,KAAdoX,IACAD,GAAY,IAAM94D,EAAM,IAAM+4D,EAEtC,GACAp6D,KAAK60D,UAAyB,KAAbsF,EAAkB,GAAKltB,EAAKktB,EACjD,CACA,OAAOn6D,KAAK60D,SAChB,EAEA6E,EAAa17D,UAAUo3D,wBAA0B,SAAUH,EAAWI,EAAWlsD,GAC7E,IAAIkxD,EAAMr6D,KAAKs6D,cAAcnxD,GAC7B,GAAIkxD,EAAK,CACL,IAAIE,EAAcF,EAAI7G,kBAAkB,IAAI9D,GAAUuF,EAAWI,IACjE,OAAOkF,EAAcA,EAAY32D,KAAO,IAC5C,CAEI,OAAO5D,KAAK25D,UAAUnG,kBAAkByB,EAEhD,EACAyE,EAAa17D,UAAUw8D,kBAAoB,SAAU7B,GACjD,IAAI0B,EAAMr6D,KAAKs6D,cAAc3B,GAC7B,GAAI0B,EAAK,CACL,IAAInI,EAASmI,EAAInI,SACjB,OAAOA,GAAUA,EAAOtuD,IAC5B,CAEI,OAAO5D,KAAK25D,UAAUzH,QAE9B,EACAwH,EAAa17D,UAAUy8D,cAAgB,SAAU9B,GAC7C,IAAIzG,EAASlyD,KAAKw6D,kBAAkB7B,GACpC,OAAIzG,EACO,IAAIxC,GAAUwC,EAAQlyD,KAAK25D,UAAUx5D,IAAI+xD,IAGzC,IAEf,EAIAwH,EAAa17D,UAAU08D,iBAAmB,SAAU/B,GAChD,IAAI0B,EAAMr6D,KAAKs6D,cAAc3B,GAC7B,GAAI0B,EAAK,CACL,IAAIlI,EAASkI,EAAIlI,SACjB,OAAOA,GAAUA,EAAOvuD,IAC5B,CAEI,OAAO5D,KAAK25D,UAAUxH,QAE9B,EACAuH,EAAa17D,UAAU28D,aAAe,SAAUhC,GAC5C,IAAIxG,EAASnyD,KAAK06D,iBAAiB/B,GACnC,OAAIxG,EACO,IAAIzC,GAAUyC,EAAQnyD,KAAK25D,UAAUx5D,IAAIgyD,IAGzC,IAEf,EACAuH,EAAa17D,UAAU23D,aAAe,SAAUxsD,EAAOiI,GACnD,IAAIipD,EAAMr6D,KAAKs6D,cAAcnxD,GAC7B,OAAIkxD,EACOA,EAAItI,iBAAiB,SAAU6I,GAClC,OAAOxpD,EAAOwpD,EAAYh3D,KAAMg3D,EAAYjL,KAChD,GAGO3vD,KAAK25D,UAAU5H,iBAAiB3gD,EAE/C,EACAsoD,EAAa17D,UAAU01D,YAAc,SAAUiF,GAC3C,OAAO34D,KAAK4zD,gBAAgB+E,EAAgBtI,UAAWsI,EAC3D,EACAe,EAAa17D,UAAU41D,gBAAkB,SAAUiH,EAAWlC,GAC1D,IAAI0B,EAAMr6D,KAAKs6D,cAAc3B,GAC7B,GAAI0B,EACA,OAAOA,EAAIzG,gBAAgBiH,EAAW,SAAUx5D,GAAO,OAAOA,CAAK,GAKnE,IAFA,IAAIy5D,EAAW96D,KAAK25D,UAAU/F,gBAAgBiH,EAAUj3D,KAAM8rD,GAAUE,MACpEz+C,EAAO2pD,EAASvJ,OACL,MAARpgD,GAAgBwnD,EAAgB5I,QAAQ5+C,EAAM0pD,GAAa,GAC9DC,EAAS1J,UACTjgD,EAAO2pD,EAASvJ,OAEpB,OAAOuJ,CAEf,EACApB,EAAa17D,UAAU81D,mBAAqB,SAAU6E,GAClD,OAAO34D,KAAK6zD,uBAAuB8E,EAAgBjI,UAAWiI,EAClE,EACAe,EAAa17D,UAAU61D,uBAAyB,SAAUkH,EAASpC,GAC/D,IAAI0B,EAAMr6D,KAAKs6D,cAAc3B,GAC7B,GAAI0B,EACA,OAAOA,EAAIxG,uBAAuBkH,EAAS,SAAU15D,GACjD,OAAOA,CACX,GAKA,IAFA,IAAIy5D,EAAW96D,KAAK25D,UAAU9F,uBAAuBkH,EAAQn3D,KAAM8rD,GAAUE,MACzEz+C,EAAO2pD,EAASvJ,OACL,MAARpgD,GAAgBwnD,EAAgB5I,QAAQ5+C,EAAM4pD,GAAW,GAC5DD,EAAS1J,UACTjgD,EAAO2pD,EAASvJ,OAEpB,OAAOuJ,CAEf,EACApB,EAAa17D,UAAU83D,UAAY,SAAUvP,GACzC,OAAIvmD,KAAK2uD,UACDpI,EAAMoI,UACC,GAGC,EAGPpI,EAAMiO,cAAgBjO,EAAMoI,UAC1B,EAEFpI,IAAUyU,IACP,EAID,CAEf,EACAtB,EAAa17D,UAAUs4D,UAAY,SAAUqC,GACzC,GAAIA,IAAoB9H,IACpB7wD,KAAK45D,UAAUlB,SAASC,GACxB,OAAO34D,KAGP,IAAI85D,EAAc95D,KAAK45D,UAAUhB,SAASD,EAAiB34D,KAAK25D,WAChE,OAAO,IAAID,EAAa15D,KAAK25D,UAAW35D,KAAK40D,cAAekF,EAEpE,EACAJ,EAAa17D,UAAUu4D,UAAY,SAAUptD,GACzC,OAAOA,IAAU0nD,IAAa7wD,KAAK45D,UAAUlB,SAASvvD,EAC1D,EACAuwD,EAAa17D,UAAUw4D,OAAS,SAAUjQ,GACtC,GAAIA,IAAUvmD,KACV,OAAO,EAEN,GAAIumD,EAAMiO,aACX,OAAO,EAGP,IAAIyG,EAAoB1U,EACxB,GAAKvmD,KAAKy0D,cAAc+B,OAAOyE,EAAkBxG,eAG5C,IAAIz0D,KAAK25D,UAAU7H,UAAYmJ,EAAkBtB,UAAU7H,QAAS,CAKrE,IAJA,IAAIoJ,EAAWl7D,KAAK0zD,YAAYoD,IAC5BqE,EAAYF,EAAkBvH,YAAYoD,IAC1CsE,EAAcF,EAAS9J,UACvBiK,EAAeF,EAAU/J,UACtBgK,GAAeC,GAAc,CAChC,GAAID,EAAYx3D,OAASy3D,EAAaz3D,OACjCw3D,EAAYzL,KAAK6G,OAAO6E,EAAa1L,MACtC,OAAO,EAEXyL,EAAcF,EAAS9J,UACvBiK,EAAeF,EAAU/J,SAC7B,CACA,OAAuB,OAAhBgK,GAAyC,OAAjBC,CACnC,CAEI,OAAO,CACX,CAnBI,OAAO,CAqBnB,EAMA3B,EAAa17D,UAAUs8D,cAAgB,SAAU3B,GAC7C,OAAIA,IAAoB9H,GACb,KAGA7wD,KAAK45D,UAAUz5D,IAAIw4D,EAAgB/2D,WAElD,EACA83D,EAAa/oB,gBAAkB,iBACxB+oB,CACX,CA5VkC,GA4X9BsB,GAAW,IA/Bc,SAAU7W,GAEnC,SAASmX,IACL,OAAOnX,EAAOtiD,KAAK7B,KAAM,IAAI2xD,GAAUqC,IAAkB0F,GAAa9H,WAAYyG,GAASwB,UAAY75D,IAC3G,CAsBA,OAzBAskD,oBAAUgX,EAASnX,GAInBmX,EAAQt9D,UAAU83D,UAAY,SAAUvP,GACpC,OAAIA,IAAUvmD,KACH,EAGA,CAEf,EACAs7D,EAAQt9D,UAAUw4D,OAAS,SAAUjQ,GAEjC,OAAOA,IAAUvmD,IACrB,EACAs7D,EAAQt9D,UAAUy2D,YAAc,WAC5B,OAAOz0D,IACX,EACAs7D,EAAQt9D,UAAUg3D,kBAAoB,SAAUC,GAC5C,OAAOyE,GAAa9H,UACxB,EACA0J,EAAQt9D,UAAU2wD,QAAU,WACxB,OAAO,CACX,EACO2M,CACX,CA3B6B,CA2B3B5B,KAKFl6D,OAAO+7D,iBAAiB7L,GAAW,CAC/BY,IAAK,CACDhuD,MAAO,IAAIotD,GAAU/gB,EAAU+qB,GAAa9H,aAEhD4J,IAAK,CACDl5D,MAAO,IAAIotD,GAAU9gB,EAAUosB,OAMvCzK,GAASrJ,aAAewS,GAAa9H,WACrC8C,GAAST,0BAA4ByF,GAl/BjCvS,GAm/BS6T,GAttBb,SAAoBt4C,GAChByxC,GAAazxC,CACjB,CAqtBA+4C,CAAWT,IAyBX,SAASU,GAAar5D,EAAMgyD,GAExB,QADiB,IAAbA,IAAuBA,EAAW,MACzB,OAAThyD,EACA,OAAOq3D,GAAa9H,WAaxB,GAXoB,kBAATvvD,GAAqB,cAAeA,IAC3CgyD,EAAWhyD,EAAK,cAEpB4rC,iBAAoB,OAAbomB,GACiB,kBAAbA,GACa,kBAAbA,GACc,kBAAbA,GAAyB,QAASA,EAAW,uCAAyCA,GAC9E,kBAAThyD,GAAqB,WAAYA,GAA2B,OAAnBA,EAAK,YACrDA,EAAOA,EAAK,WAGI,kBAATA,GAAqB,QAASA,EAErC,OAAO,IAAIqyD,GADIryD,EACeq5D,GAAarH,IAE/C,GAAMhyD,aAAgBL,MA2BjB,CACD,IAAI25D,EAASjC,GAAa9H,WAY1B,OAXAliB,EAAKrtC,EAAM,SAAUhB,EAAKu6D,GACtB,GAAI5yD,mBAAS3G,EAAMhB,IACa,MAAxBA,EAAI2W,UAAU,EAAG,GAAY,CAE7B,IAAIq9C,EAAYqG,GAAaE,IACzBvG,EAAUb,cAAiBa,EAAU1G,YACrCgN,EAASA,EAAOrG,qBAAqBj0D,EAAKg0D,GAElD,CAER,GACOsG,EAAO7G,eAAe4G,GAAarH,GAC9C,CAxCI,IAAIwH,EAAa,GACbC,GAAyB,EAa7B,GAXApsB,EADmBrtC,EACA,SAAUhB,EAAK4tB,GAC9B,GAA4B,MAAxB5tB,EAAI2W,UAAU,EAAG,GAAY,CAE7B,IAAIq9C,EAAYqG,GAAazsC,GACxBomC,EAAU1G,YACXmN,EACIA,IAA2BzG,EAAUZ,cAAc9F,UACvDkN,EAAW1kD,KAAK,IAAIu4C,GAAUruD,EAAKg0D,IAE3C,CACJ,GAC0B,IAAtBwG,EAAW/zD,OACX,OAAO4xD,GAAa9H,WAExB,IAAImK,EAAW1E,GAAcwE,EAAY9H,GAAsB,SAAU6D,GAAa,OAAOA,EAAUh0D,IAAM,EAAGowD,IAChH,GAAI8H,EAAwB,CACxB,IAAIE,EAAiB3E,GAAcwE,EAAY/E,GAAehH,cAC9D,OAAO,IAAI4J,GAAaqC,EAAUL,GAAarH,GAAW,IAAIgE,GAAS,CAAE,YAAa2D,GAAkB,CAAE,YAAalF,KAC3H,CAEI,OAAO,IAAI4C,GAAaqC,EAAUL,GAAarH,GAAWgE,GAASwB,QAkB/E,EAjzBA,SAAyBn3C,GACrBwxC,GAAiBxxC,CACrB,CAgzBAu5C,CAAgBP,IAkBhB,IAAIQ,GAA2B,SAAU/X,GAErC,SAAS+X,EAAUC,GACf,IAAI/qB,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM+qB,WAAaA,EACnBluB,kBAAQyX,GAAYyW,IAA4C,cAA7BpX,GAAaoX,GAA6B,2DACtE/qB,CACX,CA8BA,OApCAkT,oBAAU4X,EAAW/X,GAOrB+X,EAAUl+D,UAAUo+D,aAAe,SAAUC,GACzC,OAAOA,EAAKnH,SAASl1D,KAAKm8D,WAC9B,EACAD,EAAUl+D,UAAUwyD,YAAc,SAAUb,GACxC,OAAQA,EAAKuF,SAASl1D,KAAKm8D,YAAYxN,SAC3C,EACAuN,EAAUl+D,UAAU+xD,QAAU,SAAUjhB,EAAG73B,GACvC,IAAIqlD,EAASt8D,KAAKo8D,aAAattB,EAAE6gB,MAC7B4M,EAASv8D,KAAKo8D,aAAanlD,EAAE04C,MAC7BkH,EAAWyF,EAAOxG,UAAUyG,GAChC,OAAiB,IAAb1F,EACOhoB,EAAYC,EAAElrC,KAAMqT,EAAErT,MAGtBizD,CAEf,EACAqF,EAAUl+D,UAAU2yD,SAAW,SAAUC,EAAYhtD,GACjD,IAAI44D,EAAYd,GAAa9K,GACzBjB,EAAO+J,GAAa9H,WAAW4D,YAAYx1D,KAAKm8D,WAAYK,GAChE,OAAO,IAAI9M,GAAU9rD,EAAM+rD,EAC/B,EACAuM,EAAUl+D,UAAU0yD,QAAU,WAC1B,IAAIf,EAAO+J,GAAa9H,WAAW4D,YAAYx1D,KAAKm8D,WAAYnB,IAChE,OAAO,IAAItL,GAAU9gB,EAAU+gB,EACnC,EACAuM,EAAUl+D,UAAU4D,SAAW,WAC3B,OAAOujD,GAAUnlD,KAAKm8D,WAAY,GAAGntC,KAAK,IAC9C,EACOktC,CACX,CAtC+B,CAsC7BrM,IAkBE4M,GAA4B,SAAUtY,GAEtC,SAASsY,IACL,OAAkB,OAAXtY,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CAkCA,OArCAskD,oBAAUmY,EAAYtY,GAItBsY,EAAWz+D,UAAU+xD,QAAU,SAAUjhB,EAAG73B,GACxC,IAAI4/C,EAAW/nB,EAAE6gB,KAAKmG,UAAU7+C,EAAE04C,MAClC,OAAiB,IAAbkH,EACOhoB,EAAYC,EAAElrC,KAAMqT,EAAErT,MAGtBizD,CAEf,EACA4F,EAAWz+D,UAAUwyD,YAAc,SAAUb,GACzC,OAAO,CACX,EACA8M,EAAWz+D,UAAUgyD,oBAAsB,SAAUC,EAASC,GAC1D,OAAQD,EAAQuG,OAAOtG,EAC3B,EACAuM,EAAWz+D,UAAUqyD,QAAU,WAE3B,OAAOX,GAAUY,GACrB,EACAmM,EAAWz+D,UAAU0yD,QAAU,WAE3B,OAAOhB,GAAU8L,GACrB,EACAiB,EAAWz+D,UAAU2yD,SAAW,SAAUC,EAAYhtD,GAClD,IAAI44D,EAAYd,GAAa9K,GAC7B,OAAO,IAAIlB,GAAU9rD,EAAM44D,EAC/B,EAIAC,EAAWz+D,UAAU4D,SAAW,WAC5B,MAAO,QACX,EACO66D,CACX,CAvCgC,CAuC9B5M,IACE6M,GAAc,IAAID,GAmBlBE,GAAa,mEAkBbC,GAAc,WAGd,IAAIC,EAAe,EAKfC,EAAgB,GACpB,OAAO,SAAUpzD,GACb,IAEIxB,EAFA60D,EAAgBrzD,IAAQmzD,EAC5BA,EAAenzD,EAEf,IAAIszD,EAAiB,IAAIh7D,MAAM,GAC/B,IAAKkG,EAAI,EAAGA,GAAK,EAAGA,IAChB80D,EAAe90D,GAAKy0D,GAAWjhD,OAAOhS,EAAM,IAG5CA,EAAM6K,KAAKC,MAAM9K,EAAM,IAE3BukC,iBAAe,IAARvkC,EAAW,4BAClB,IAAIsjC,EAAKgwB,EAAehuC,KAAK,IAC7B,GAAK+tC,EAKA,CAGD,IAAK70D,EAAI,GAAIA,GAAK,GAA0B,KAArB40D,EAAc50D,GAAWA,IAC5C40D,EAAc50D,GAAK,EAEvB40D,EAAc50D,IAClB,MAXI,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChB40D,EAAc50D,GAAKqM,KAAKC,MAAsB,GAAhBD,KAAKuL,UAW3C,IAAK5X,EAAI,EAAGA,EAAI,GAAIA,IAChB8kC,GAAM2vB,GAAWjhD,OAAOohD,EAAc50D,IAG1C,OADA+lC,iBAAqB,KAAdjB,EAAGllC,OAAe,oCAClBklC,CACX,CACJ,CAzCkB,GA0CdiwB,GAAY,SAAU57D,GACtB,GAAIA,IAAQ,GAAKwvC,EAEb,MA9DY,IAgEhB,IAAIqsB,EAAWluB,EAAY3tC,GAC3B,GAAgB,MAAZ67D,EACA,MAAO,IAAMA,EAAW,GAG5B,IADA,IAAI/rD,EAAO,IAAInP,MAAMX,EAAIyG,QAChBq1D,EAAM,EAAGA,EAAMhsD,EAAKrJ,OAAQq1D,IACjChsD,EAAKgsD,GAAO97D,EAAIqa,OAAOyhD,GAE3B,GAAIhsD,EAAKrJ,OAtEK,IAwEV,OADAqJ,EAAKgG,KAzEO,KA0ELhG,EAAK6d,KAAK,IAGrB,IADA,IAAI9mB,EAAIiJ,EAAKrJ,OAAS,EACfI,GAAK,GA5EI,MA4ECiJ,EAAKjJ,IAClBA,IAIJ,IAAW,IAAPA,EACA,OAAO0mC,EAEX,IAAIwuB,EAASjsD,EAAKjJ,GACdm1D,EAAgBV,GAAWjhD,OAAOihD,GAAWtlD,QAAQ+lD,GAAU,GAEnE,OADAjsD,EAAKjJ,GAAKm1D,EACHlsD,EAAKwK,MAAM,EAAGzT,EAAI,GAAG8mB,KAAK,GACrC,EAEIurC,GAAc,SAAUl5D,GACxB,GAAIA,IAAQ,GAAKuvC,EACb,OAAOjC,EAEX,IAAIuuB,EAAWluB,EAAY3tC,GAC3B,GAAgB,MAAZ67D,EACA,MAAO,IAAMA,EAAW,GAG5B,IADA,IAAI/rD,EAAO,IAAInP,MAAMX,EAAIyG,QAChBI,EAAI,EAAGA,EAAIiJ,EAAKrJ,OAAQI,IAC7BiJ,EAAKjJ,GAAK7G,EAAIqa,OAAOxT,GAazB,MAlHgB,MAkHZiJ,EAAKA,EAAKrJ,OAAS,GACC,IAAhBqJ,EAAKrJ,OAEE,GAAK+oC,UAET1/B,EAAKA,EAAKrJ,OAAS,GACnBqJ,EAAK6d,KAAK,MAKrB7d,EAAKA,EAAKrJ,OAAS,GAAK60D,GAAWjhD,OAAOihD,GAAWtlD,QAAQlG,EAAKA,EAAKrJ,OAAS,IAAM,GAC/EqJ,EAAK6d,KAAK,IA7HD,IA6HqBnnB,OA5HvB,IA4H4CsJ,EAAKrJ,QACnE,EAkBA,SAASw1D,GAAYC,GACjB,MAAO,CAAEhrD,KAAM,QAAqBgrD,aAAcA,EACtD,CACA,SAASC,GAAiBvI,EAAWsI,GACjC,MAAO,CAAEhrD,KAAM,cAAiCgrD,aAAcA,EAActI,UAAWA,EAC3F,CACA,SAASwI,GAAmBxI,EAAWsI,GACnC,MAAO,CAAEhrD,KAAM,gBAAqCgrD,aAAcA,EAActI,UAAWA,EAC/F,CACA,SAASyI,GAAmBzI,EAAWsI,EAAcI,GACjD,MAAO,CACHprD,KAAM,gBACNgrD,aAAcA,EACdtI,UAAWA,EACX0I,QAASA,EAEjB,CAwBA,IAAIC,GAA+B,WAC/B,SAASA,EAAcC,GACnB79D,KAAK69D,OAASA,CAClB,CAkFA,OAjFAD,EAAc5/D,UAAUw3D,YAAc,SAAU6G,EAAMh7D,EAAKy8D,EAAUC,EAAcX,EAAQY,GACvF/vB,iBAAOouB,EAAK9F,UAAUv2D,KAAK69D,QAAS,qDACpC,IAAII,EAAW5B,EAAKrH,kBAAkB3zD,GAEtC,OAAI48D,EAAS/I,SAAS6I,GAAcvH,OAAOsH,EAAS5I,SAAS6I,KAIrDE,EAAStP,YAAcmP,EAASnP,UAIzB0N,GAGa,MAAxB2B,IACIF,EAASnP,UACL0N,EAAKlH,SAAS9zD,GACd28D,EAAqBE,iBAAiBT,GAAmBp8D,EAAK48D,IAG9DhwB,iBAAOouB,EAAK7H,aAAc,uEAGzByJ,EAAStP,UACdqP,EAAqBE,iBAAiBV,GAAiBn8D,EAAKy8D,IAG5DE,EAAqBE,iBAAiBR,GAAmBr8D,EAAKy8D,EAAUG,KAG5E5B,EAAK7H,cAAgBsJ,EAASnP,UACvB0N,EAIAA,EAAK/G,qBAAqBj0D,EAAKy8D,GAAUxH,UAAUt2D,KAAK69D,QAEvE,EACAD,EAAc5/D,UAAUmgE,eAAiB,SAAUR,EAASS,EAASJ,GAuBjE,OAtB4B,MAAxBA,IACKL,EAAQnJ,cACTmJ,EAAQhI,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAC3C+I,EAAQjJ,SAAS9zD,IAClB28D,EAAqBE,iBAAiBT,GAAmBp8D,EAAKg0D,GAEtE,GAEC+I,EAAQ5J,cACT4J,EAAQzI,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAChD,GAAIsI,EAAQxI,SAAS9zD,GAAM,CACvB,IAAI48D,EAAWN,EAAQ3I,kBAAkB3zD,GACpC48D,EAASzH,OAAOnB,IACjB2I,EAAqBE,iBAAiBR,GAAmBr8D,EAAKg0D,EAAW4I,GAEjF,MAEID,EAAqBE,iBAAiBV,GAAiBn8D,EAAKg0D,GAEpE,IAGD+I,EAAQ9H,UAAUt2D,KAAK69D,OAClC,EACAD,EAAc5/D,UAAU82D,eAAiB,SAAU6I,EAAS5D,GACxD,OAAI4D,EAAQhP,UACD+K,GAAa9H,WAGb+L,EAAQ7I,eAAeiF,EAEtC,EACA6D,EAAc5/D,UAAUqgE,aAAe,WACnC,OAAO,CACX,EACAT,EAAc5/D,UAAUsgE,iBAAmB,WACvC,OAAOt+D,IACX,EACA49D,EAAc5/D,UAAUstD,SAAW,WAC/B,OAAOtrD,KAAK69D,MAChB,EACOD,CACX,CAtFmC,GA2G/BW,GAA8B,WAC9B,SAASA,EAAaphD,GAClBnd,KAAKw+D,eAAiB,IAAIZ,GAAczgD,EAAOmuC,YAC/CtrD,KAAK69D,OAAS1gD,EAAOmuC,WACrBtrD,KAAKy+D,WAAaF,EAAaG,cAAcvhD,GAC7Cnd,KAAK2+D,SAAWJ,EAAaK,YAAYzhD,EAC7C,CAgEA,OA/DAohD,EAAavgE,UAAU6gE,aAAe,WAClC,OAAO7+D,KAAKy+D,UAChB,EACAF,EAAavgE,UAAU8gE,WAAa,WAChC,OAAO9+D,KAAK2+D,QAChB,EACAJ,EAAavgE,UAAU2Z,QAAU,SAAUg4C,GACvC,OAAQ3vD,KAAK69D,OAAO9N,QAAQ/vD,KAAK6+D,eAAgBlP,IAAS,GACtD3vD,KAAK69D,OAAO9N,QAAQJ,EAAM3vD,KAAK8+D,eAAiB,CACxD,EACAP,EAAavgE,UAAUw3D,YAAc,SAAU6G,EAAMh7D,EAAKy8D,EAAUC,EAAcX,EAAQY,GAItF,OAHKh+D,KAAK2X,QAAQ,IAAI+3C,GAAUruD,EAAKy8D,MACjCA,EAAWpE,GAAa9H,YAErB5xD,KAAKw+D,eAAehJ,YAAY6G,EAAMh7D,EAAKy8D,EAAUC,EAAcX,EAAQY,EACtF,EACAO,EAAavgE,UAAUmgE,eAAiB,SAAUR,EAASS,EAASJ,GAC5DI,EAAQ5J,eAER4J,EAAU1E,GAAa9H,YAE3B,IAAImN,EAAWX,EAAQ9H,UAAUt2D,KAAK69D,QAEtCkB,EAAWA,EAASjK,eAAe4E,GAAa9H,YAChD,IAAIjxD,EAAOX,KAMX,OALAo+D,EAAQzI,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAC3C10D,EAAKgX,QAAQ,IAAI+3C,GAAUruD,EAAKg0D,MACjC0J,EAAWA,EAASzJ,qBAAqBj0D,EAAKq4D,GAAa9H,YAEnE,GACO5xD,KAAKw+D,eAAeL,eAAeR,EAASoB,EAAUf,EACjE,EACAO,EAAavgE,UAAU82D,eAAiB,SAAU6I,EAAS5D,GAEvD,OAAO4D,CACX,EACAY,EAAavgE,UAAUqgE,aAAe,WAClC,OAAO,CACX,EACAE,EAAavgE,UAAUsgE,iBAAmB,WACtC,OAAOt+D,KAAKw+D,cAChB,EACAD,EAAavgE,UAAUstD,SAAW,WAC9B,OAAOtrD,KAAK69D,MAChB,EACAU,EAAaG,cAAgB,SAAUvhD,GACnC,GAAIA,EAAO6hD,WAAY,CACnB,IAAIC,EAAY9hD,EAAO+hD,oBACvB,OAAO/hD,EAAOmuC,WAAWqF,SAASxzC,EAAOgiD,qBAAsBF,EACnE,CAEI,OAAO9hD,EAAOmuC,WAAW+E,SAEjC,EACAkO,EAAaK,YAAc,SAAUzhD,GACjC,GAAIA,EAAOiiD,SAAU,CACjB,IAAIC,EAAUliD,EAAOmiD,kBACrB,OAAOniD,EAAOmuC,WAAWqF,SAASxzC,EAAOoiD,mBAAoBF,EACjE,CAEI,OAAOliD,EAAOmuC,WAAWoF,SAEjC,EACO6N,CACX,CAvEkC,GA4F9BiB,GAA+B,WAC/B,SAASA,EAAcriD,GACnBnd,KAAKy/D,cAAgB,IAAIlB,GAAaphD,GACtCnd,KAAK69D,OAAS1gD,EAAOmuC,WACrBtrD,KAAK0/D,OAASviD,EAAOwiD,WACrB3/D,KAAK4/D,UAAYziD,EAAO0iD,gBAC5B,CA8LA,OA7LAL,EAAcxhE,UAAUw3D,YAAc,SAAU6G,EAAMh7D,EAAKy8D,EAAUC,EAAcX,EAAQY,GAIvF,OAHKh+D,KAAKy/D,cAAc9nD,QAAQ,IAAI+3C,GAAUruD,EAAKy8D,MAC/CA,EAAWpE,GAAa9H,YAExByK,EAAKrH,kBAAkB3zD,GAAKm1D,OAAOsH,GAE5BzB,EAEFA,EAAK3G,cAAgB11D,KAAK0/D,OACxB1/D,KAAKy/D,cACPnB,mBACA9I,YAAY6G,EAAMh7D,EAAKy8D,EAAUC,EAAcX,EAAQY,GAGrDh+D,KAAK8/D,sBAAsBzD,EAAMh7D,EAAKy8D,EAAUV,EAAQY,EAEvE,EACAwB,EAAcxhE,UAAUmgE,eAAiB,SAAUR,EAASS,EAASJ,GACjE,IAAIe,EACJ,GAAIX,EAAQ5J,cAAgB4J,EAAQzP,UAEhCoQ,EAAWrF,GAAa9H,WAAW0E,UAAUt2D,KAAK69D,aAGlD,GAAkB,EAAd79D,KAAK0/D,OAAatB,EAAQ1I,eAC1B0I,EAAQ7H,UAAUv2D,KAAK69D,QAAS,CAEhCkB,EAAWrF,GAAa9H,WAAW0E,UAAUt2D,KAAK69D,QAElD,IAAI/C,OAAW,EAEXA,EADA96D,KAAK4/D,SACMxB,EAAQvK,uBAAuB7zD,KAAKy/D,cAAcX,aAAc9+D,KAAK69D,QAGrEO,EAAQxK,gBAAgB5zD,KAAKy/D,cAAcZ,eAAgB7+D,KAAK69D,QAG/E,IADA,IAAI/L,EAAQ,EACLgJ,EAASxJ,WAAaQ,EAAQ9xD,KAAK0/D,QAAQ,CAC9C,IAAIvuD,EAAO2pD,EAAS1J,UAUpB,KARIpxD,KAAK4/D,SAED5/D,KAAK69D,OAAO9N,QAAQ/vD,KAAKy/D,cAAcZ,eAAgB1tD,IAAS,EAIhEnR,KAAK69D,OAAO9N,QAAQ5+C,EAAMnR,KAAKy/D,cAAcX,eAAiB,GAQlE,MALAC,EAAWA,EAASzJ,qBAAqBnkD,EAAKvN,KAAMuN,EAAKw+C,MACzDmC,GAMR,CACJ,KACK,CAIDiN,GAFAA,EAAWX,EAAQ9H,UAAUt2D,KAAK69D,SAEd/I,eAAe4E,GAAa9H,YAChD,IAAIiJ,OAAY,EACZE,OAAU,EACV1U,OAAM,EACNyU,OAAW,EACf,GAAI96D,KAAK4/D,SAAU,CACf9E,EAAWiE,EAASjL,mBAAmB9zD,KAAK69D,QAC5ChD,EAAY76D,KAAKy/D,cAAcX,aAC/B/D,EAAU/6D,KAAKy/D,cAAcZ,eAC7B,IAAIkB,EAAiB//D,KAAK69D,OAAO/N,aACjCzJ,EAAM,SAAUvX,EAAG73B,GAAK,OAAO8oD,EAAe9oD,EAAG63B,EAAI,CACzD,MAEIgsB,EAAWiE,EAASrL,YAAY1zD,KAAK69D,QACrChD,EAAY76D,KAAKy/D,cAAcZ,eAC/B9D,EAAU/6D,KAAKy/D,cAAcX,aAC7BzY,EAAMrmD,KAAK69D,OAAO/N,aAElBgC,EAAQ,EAEZ,IAFA,IACIkO,GAAiB,EACdlF,EAASxJ,WAAW,CACnBngD,EAAO2pD,EAAS1J,WACf4O,GAAkB3Z,EAAIwU,EAAW1pD,IAAS,IAE3C6uD,GAAiB,GAEPA,GAAkBlO,EAAQ9xD,KAAK0/D,QAAUrZ,EAAIl1C,EAAM4pD,IAAY,EAEzEjJ,IAGAiN,EAAWA,EAASzJ,qBAAqBnkD,EAAKvN,KAAM81D,GAAa9H,WAEzE,CACJ,CAEJ,OAAO5xD,KAAKy/D,cACPnB,mBACAH,eAAeR,EAASoB,EAAUf,EAC3C,EACAwB,EAAcxhE,UAAU82D,eAAiB,SAAU6I,EAAS5D,GAExD,OAAO4D,CACX,EACA6B,EAAcxhE,UAAUqgE,aAAe,WACnC,OAAO,CACX,EACAmB,EAAcxhE,UAAUsgE,iBAAmB,WACvC,OAAOt+D,KAAKy/D,cAAcnB,kBAC9B,EACAkB,EAAcxhE,UAAUstD,SAAW,WAC/B,OAAOtrD,KAAK69D,MAChB,EACA2B,EAAcxhE,UAAU8hE,sBAAwB,SAAUzD,EAAM4D,EAAUC,EAAW9C,EAAQ+C,GAEzF,IAAI9Z,EACJ,GAAIrmD,KAAK4/D,SAAU,CACf,IAAIQ,EAAapgE,KAAK69D,OAAO/N,aAC7BzJ,EAAM,SAAUvX,EAAG73B,GAAK,OAAOmpD,EAAWnpD,EAAG63B,EAAI,CACrD,MAEIuX,EAAMrmD,KAAK69D,OAAO/N,aAEtB,IAAIuQ,EAAgBhE,EACpBpuB,iBAAOoyB,EAAc3K,gBAAkB11D,KAAK0/D,OAAQ,IACpD,IAAIY,EAAoB,IAAI5Q,GAAUuQ,EAAUC,GAC5CK,EAAiBvgE,KAAK4/D,SACpBS,EAAc5F,cAAcz6D,KAAK69D,QACjCwC,EAAc1F,aAAa36D,KAAK69D,QAClC2C,EAAUxgE,KAAKy/D,cAAc9nD,QAAQ2oD,GACzC,GAAID,EAAclL,SAAS8K,GAAW,CAGlC,IAFA,IAAIQ,EAAeJ,EAAcrL,kBAAkBiL,GAC/CS,EAAYtD,EAAOuD,mBAAmB3gE,KAAK69D,OAAQ0C,EAAgBvgE,KAAK4/D,UACxD,MAAbc,IACFA,EAAU98D,OAASq8D,GAAYI,EAAclL,SAASuL,EAAU98D,QAIjE88D,EAAYtD,EAAOuD,mBAAmB3gE,KAAK69D,OAAQ6C,EAAW1gE,KAAK4/D,UAEvE,IAAIgB,EAA2B,MAAbF,EAAoB,EAAIra,EAAIqa,EAAWJ,GAEzD,GADsBE,IAAYN,EAAUvR,WAAaiS,GAAe,EAKpE,OAHyB,MAArBT,GACAA,EAAkBjC,iBAAiBR,GAAmBuC,EAAUC,EAAWO,IAExEJ,EAAc/K,qBAAqB2K,EAAUC,GAG3B,MAArBC,GACAA,EAAkBjC,iBAAiBT,GAAmBwC,EAAUQ,IAEpE,IAAII,EAAgBR,EAAc/K,qBAAqB2K,EAAUvG,GAAa9H,YAE9E,OADoC,MAAb8O,GAAqB1gE,KAAKy/D,cAAc9nD,QAAQ+oD,IAE1C,MAArBP,GACAA,EAAkBjC,iBAAiBV,GAAiBkD,EAAU98D,KAAM88D,EAAU/Q,OAE3EkR,EAAcvL,qBAAqBoL,EAAU98D,KAAM88D,EAAU/Q,OAG7DkR,CAGnB,CACK,OAAIX,EAAUvR,UAER0N,EAEFmE,GACDna,EAAIka,EAAgBD,IAAsB,GACjB,MAArBH,IACAA,EAAkBjC,iBAAiBT,GAAmB8C,EAAe38D,KAAM28D,EAAe5Q,OAC1FwQ,EAAkBjC,iBAAiBV,GAAiByC,EAAUC,KAE3DG,EACF/K,qBAAqB2K,EAAUC,GAC/B5K,qBAAqBiL,EAAe38D,KAAM81D,GAAa9H,aAOzDyK,CAEf,EACOmD,CACX,CArMmC,GA4N/BsB,GAA6B,WAC7B,SAASA,IACL9gE,KAAK+gE,WAAY,EACjB/gE,KAAKghE,WAAY,EACjBhhE,KAAKihE,eAAgB,EACrBjhE,KAAKkhE,gBAAiB,EACtBlhE,KAAKmhE,SAAU,EACfnhE,KAAKohE,aAAc,EACnBphE,KAAKqhE,eAAgB,EACrBrhE,KAAK0/D,OAAS,EACd1/D,KAAKshE,UAAY,GACjBthE,KAAKuhE,iBAAmB,KACxBvhE,KAAKwhE,gBAAkB,GACvBxhE,KAAKyhE,eAAiB,KACtBzhE,KAAK0hE,cAAgB,GACrB1hE,KAAK69D,OAAS/G,EAClB,CA6GA,OA5GAgK,EAAY9iE,UAAUghE,SAAW,WAC7B,OAAOh/D,KAAKghE,SAChB,EACAF,EAAY9iE,UAAU2jE,cAAgB,WAClC,OAAO3hE,KAAKkhE,cAChB,EACAJ,EAAY9iE,UAAU4jE,aAAe,WACjC,OAAO5hE,KAAKqhE,aAChB,EAIAP,EAAY9iE,UAAU6hE,eAAiB,WACnC,MAAuB,KAAnB7/D,KAAKshE,UAKEthE,KAAKghE,UAGc,MAAnBhhE,KAAKshE,SAEpB,EAIAR,EAAY9iE,UAAUmhE,mBAAqB,WAEvC,OADAlxB,iBAAOjuC,KAAKghE,UAAW,oCAChBhhE,KAAKuhE,gBAChB,EAKAT,EAAY9iE,UAAUkhE,kBAAoB,WAEtC,OADAjxB,iBAAOjuC,KAAKghE,UAAW,oCACnBhhE,KAAKihE,cACEjhE,KAAKwhE,gBAGL7yB,CAEf,EACAmyB,EAAY9iE,UAAUohE,OAAS,WAC3B,OAAOp/D,KAAKmhE,OAChB,EAIAL,EAAY9iE,UAAUuhE,iBAAmB,WAErC,OADAtxB,iBAAOjuC,KAAKmhE,QAAS,kCACdnhE,KAAKyhE,cAChB,EAKAX,EAAY9iE,UAAUshE,gBAAkB,WAEpC,OADArxB,iBAAOjuC,KAAKmhE,QAAS,kCACjBnhE,KAAKohE,YACEphE,KAAK0hE,cAGL9yB,CAEf,EACAkyB,EAAY9iE,UAAU6jE,SAAW,WAC7B,OAAO7hE,KAAK+gE,SAChB,EAIAD,EAAY9iE,UAAU8jE,iBAAmB,WACrC,OAAO9hE,KAAK+gE,WAAgC,KAAnB/gE,KAAKshE,SAClC,EAIAR,EAAY9iE,UAAU2hE,SAAW,WAE7B,OADA1xB,iBAAOjuC,KAAK+gE,UAAW,oCAChB/gE,KAAK0/D,MAChB,EACAoB,EAAY9iE,UAAUstD,SAAW,WAC7B,OAAOtrD,KAAK69D,MAChB,EACAiD,EAAY9iE,UAAU4sD,aAAe,WACjC,QAAS5qD,KAAKghE,WAAahhE,KAAKmhE,SAAWnhE,KAAK+gE,UACpD,EACAD,EAAY9iE,UAAU2sD,UAAY,WAC9B,OAAO3qD,KAAK4qD,gBAAkB5qD,KAAK69D,SAAW/G,EAClD,EACAgK,EAAY9iE,UAAU6zD,KAAO,WACzB,IAAIA,EAAO,IAAIiP,EAaf,OAZAjP,EAAKkP,UAAY/gE,KAAK+gE,UACtBlP,EAAK6N,OAAS1/D,KAAK0/D,OACnB7N,EAAKmP,UAAYhhE,KAAKghE,UACtBnP,EAAK0P,iBAAmBvhE,KAAKuhE,iBAC7B1P,EAAKoP,cAAgBjhE,KAAKihE,cAC1BpP,EAAK2P,gBAAkBxhE,KAAKwhE,gBAC5B3P,EAAKsP,QAAUnhE,KAAKmhE,QACpBtP,EAAK4P,eAAiBzhE,KAAKyhE,eAC3B5P,EAAKuP,YAAcphE,KAAKohE,YACxBvP,EAAK6P,cAAgB1hE,KAAK0hE,cAC1B7P,EAAKgM,OAAS79D,KAAK69D,OACnBhM,EAAKyP,UAAYthE,KAAKshE,UACfzP,CACX,EACOiP,CACX,CA9HiC,GAwJjC,SAASiB,GAAmBC,EAAapR,EAAYvvD,GACjD,IAAI4gE,EAAYD,EAAYnQ,OAc5B,OAbAoQ,EAAUjB,WAAY,OACH1gE,IAAfswD,IACAA,EAAa,MAEjBqR,EAAUV,iBAAmB3Q,EAClB,MAAPvvD,GACA4gE,EAAUhB,eAAgB,EAC1BgB,EAAUT,gBAAkBngE,IAG5B4gE,EAAUhB,eAAgB,EAC1BgB,EAAUT,gBAAkB,IAEzBS,CACX,CAsBA,SAASC,GAAiBF,EAAapR,EAAYvvD,GAC/C,IAAI4gE,EAAYD,EAAYnQ,OAc5B,OAbAoQ,EAAUd,SAAU,OACD7gE,IAAfswD,IACAA,EAAa,MAEjBqR,EAAUR,eAAiB7Q,OACftwD,IAARe,GACA4gE,EAAUb,aAAc,EACxBa,EAAUP,cAAgBrgE,IAG1B4gE,EAAUb,aAAc,EACxBa,EAAUP,cAAgB,IAEvBO,CACX,CAsBA,SAASE,GAAmBH,EAAa74D,GACrC,IAAI84D,EAAYD,EAAYnQ,OAE5B,OADAoQ,EAAUpE,OAAS10D,EACZ84D,CACX,CAMA,SAASG,GAAuCJ,GAC5C,IAIIK,EAJAC,EAAK,CAAC,EACV,OAAIN,EAAYrX,cAIZqX,EAAYnE,SAAW/G,GACvBuL,EAAU,YAELL,EAAYnE,SAAWnB,GAC5B2F,EAAU,SAELL,EAAYnE,SAAWhN,GAC5BwR,EAAU,QAGVp0B,iBAAO+zB,EAAYnE,kBAAkB3B,GAAW,4BAChDmG,EAAUL,EAAYnE,OAAOj8D,YAEjC0gE,EAA2B,QAAI39D,oBAAU09D,GACrCL,EAAYhB,YACZsB,EAA2B,QAAI39D,oBAAUq9D,EAAYT,kBACjDS,EAAYf,gBACZqB,EAA2B,SACvB,IAAM39D,oBAAUq9D,EAAYR,mBAGpCQ,EAAYb,UACZmB,EAAuB,MAAI39D,oBAAUq9D,EAAYP,gBAC7CO,EAAYZ,cACZkB,EAAuB,OACnB,IAAM39D,oBAAUq9D,EAAYN,iBAGpCM,EAAYjB,YACRiB,EAAYnC,iBACZyC,EAAsC,aAAIN,EAAYtC,OAGtD4C,EAAoC,YAAIN,EAAYtC,SApCjD4C,CAwCf,CACA,SAASC,GAA0BP,GAC/B,IAAIj/C,EAAM,CAAC,EAeX,GAdIi/C,EAAYhB,YACZj+C,EAAgC,GAC5Bi/C,EAAYT,iBACZS,EAAYf,gBACZl+C,EAA+B,GAC3Bi/C,EAAYR,kBAGpBQ,EAAYb,UACZp+C,EAA8B,GAAIi/C,EAAYP,eAC1CO,EAAYZ,cACZr+C,EAA6B,GAAIi/C,EAAYN,gBAGjDM,EAAYjB,UAAW,CACvBh+C,EAAmB,EAAIi/C,EAAYtC,OACnC,IAAI8C,EAAWR,EAAYV,UACV,KAAbkB,IAEIA,EADAR,EAAYnC,iBACD,IAGA,KAGnB98C,EAAwB,GAAIy/C,CAChC,CAKA,OAHIR,EAAYnE,SAAW/G,KACvB/zC,EAAmB,EAAIi/C,EAAYnE,OAAOj8D,YAEvCmhB,CACX,CAuBA,IAAI0/C,GAAoC,SAAUte,GAM9C,SAASse,EAAmBtjB,EAAWwI,EAAeG,EAAoBC,GACtE,IAAI3W,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAYjC,OAXAoxC,EAAM+N,UAAYA,EAClB/N,EAAMuW,cAAgBA,EACtBvW,EAAM0W,mBAAqBA,EAC3B1W,EAAM2W,uBAAyBA,EAE/B3W,EAAM2E,KAAO1H,EAAW,WAKxB+C,EAAMsxB,SAAW,CAAC,EACXtxB,CACX,CA4IA,OA/JAkT,oBAAUme,EAAoBte,GAoB9Bse,EAAmBzkE,UAAUulD,YAAc,SAAUC,GACjD,MAAM,IAAI7jD,MAAM,0BACpB,EACA8iE,EAAmBE,aAAe,SAAUlvB,EAAO6W,GAC/C,YAAYhqD,IAARgqD,EACO,OAASA,GAGhBrc,iBAAOwF,EAAMiX,aAAaC,YAAa,kDAChClX,EAAMsW,MAAMnoD,WAE3B,EAEA6gE,EAAmBzkE,UAAUosD,OAAS,SAAU3W,EAAO4W,EAAeC,EAAKvH,GACvE,IAAI3R,EAAQpxC,KACR8iD,EAAarP,EAAMsW,MAAMnoD,WAC7B5B,KAAK+1C,KAAK,qBAAuB+M,EAAa,IAAMrP,EAAM+W,kBAE1D,IAAIoY,EAAWH,EAAmBE,aAAalvB,EAAO6W,GAClDuY,EAAa,CAAC,EAClB7iE,KAAK0iE,SAASE,GAAYC,EAC1B,IAAIC,EAAwBV,GAAuC3uB,EAAMiX,cACzE1qD,KAAK+iE,aAAajgB,EAAa,QAASggB,EAAuB,SAAUn9D,EAAOvE,GAC5E,IAAII,EAAOJ,GACG,MAAVuE,IACAnE,EAAO,KACPmE,EAAQ,MAEE,OAAVA,GACAyrC,EAAMuW,cAAc7E,EAAYthD,GAAmB,EAAO8oD,GAE1Dc,kBAAQha,EAAMsxB,SAAUE,KAAcC,IAWtC9f,EATKp9C,EAGc,MAAVA,EACM,oBAGA,cAAgBA,EANhB,KAQM,KAE7B,EACJ,EAEA88D,EAAmBzkE,UAAUouD,SAAW,SAAU3Y,EAAO6W,GACrD,IAAIsY,EAAWH,EAAmBE,aAAalvB,EAAO6W,UAC/CtqD,KAAK0iE,SAASE,EACzB,EACAH,EAAmBzkE,UAAUmC,IAAM,SAAUszC,GACzC,IAAIrC,EAAQpxC,KACR8iE,EAAwBV,GAAuC3uB,EAAMiX,cACrE5H,EAAarP,EAAMsW,MAAMnoD,WACzBioD,EAAW,IAAIC,WAiBnB,OAhBA9pD,KAAK+iE,aAAajgB,EAAa,QAASggB,EAAuB,SAAUn9D,EAAOvE,GAC5E,IAAII,EAAOJ,EACG,MAAVuE,IACAnE,EAAO,KACPmE,EAAQ,MAEE,OAAVA,GACAyrC,EAAMuW,cAAc7E,EAAYthD,GACnB,EACJ,MACTqoD,EAAS5mD,QAAQzB,IAGjBqoD,EAASxkD,OAAO,IAAI1F,MAAM6B,GAElC,GACOqoD,EAAS1kD,OACpB,EAEAs9D,EAAmBzkE,UAAUklD,iBAAmB,SAAU1iD,GACtD,EAMJiiE,EAAmBzkE,UAAU+kE,aAAe,SAAUjgB,EAAYggB,EAAuBv0D,GACrF,IAAI6iC,EAAQpxC,KAGZ,YAF8B,IAA1B8iE,IAAoCA,EAAwB,CAAC,GACjEA,EAA8B,OAAI,SAC3B9/D,QAAQsnB,IAAI,CACftqB,KAAK8nD,mBAAmBvnD,UAA2B,GACnDP,KAAK+nD,uBAAuBxnD,UAA2B,KACxDH,KAAK,SAAUmxC,GACd,IAAIiN,EAAKjQ,iBAAOgD,EAAI,GAAIxwC,EAAYy9C,EAAG,GAAIh6C,EAAgBg6C,EAAG,GAC1Dz9C,GAAaA,EAAUN,cACvBqiE,EAA4B,KAAI/hE,EAAUN,aAE1C+D,GAAiBA,EAAchE,QAC/BsiE,EAA0B,GAAIt+D,EAAchE,OAEhD,IAAI6C,GAAO+tC,EAAM+N,UAAUxM,OAAS,WAAa,WAC7CvB,EAAM+N,UAAUn7C,KAChB8+C,EAFM,OAKN1R,EAAM+N,UAAU9Z,UAChB29B,sBAAYF,GAChB1xB,EAAM2E,KAAK,4BAA8B1yC,GACzC,IAAIwiB,EAAM,IAAI/M,eACd+M,EAAI21B,mBAAqB,WACrB,GAAIjtC,GAA+B,IAAnBsX,EAAI6U,WAAkB,CAClC0W,EAAM2E,KAAK,qBAAuB1yC,EAAM,qBAAsBwiB,EAAIhhB,OAAQ,YAAaghB,EAAInM,cAC3F,IAAIqiB,EAAM,KACV,GAAIlW,EAAIhhB,QAAU,KAAOghB,EAAIhhB,OAAS,IAAK,CACvC,IACIk3B,EAAMoQ,mBAAStmB,EAAInM,aACvB,CACA,MAAOhW,GACHsJ,EAAK,qCACD3J,EACA,KACAwiB,EAAInM,aACZ,CACAnL,EAAS,KAAMwtB,EACnB,MAGuB,MAAflW,EAAIhhB,QAAiC,MAAfghB,EAAIhhB,QAC1BmI,EAAK,sCACD3J,EACA,YACAwiB,EAAIhhB,QAEZ0J,EAASsX,EAAIhhB,QAEjB0J,EAAW,IACf,CACJ,EACAsX,EAAIxM,KAAK,MAAOhW,GAAuB,GACvCwiB,EAAIzM,MACR,EACJ,EACOqpD,CACX,CAjKwC,CAiKtC5f,IAqBEogB,GAAgC,WAChC,SAASA,IACLjjE,KAAKkjE,UAAYxJ,GAAa9H,UAClC,CAOA,OANAqR,EAAejlE,UAAUmlE,QAAU,SAAU7oD,GACzC,OAAOta,KAAKkjE,UAAUhO,SAAS56C,EACnC,EACA2oD,EAAejlE,UAAUolE,eAAiB,SAAU9oD,EAAM+oD,GACtDrjE,KAAKkjE,UAAYljE,KAAKkjE,UAAU1N,YAAYl7C,EAAM+oD,EACtD,EACOJ,CACX,CAXoC,GA6BpC,SAASK,KACL,MAAO,CACHhhE,MAAO,KACPihE,SAAU,IAAInb,IAEtB,CAQA,SAASob,GAA2BC,EAAoBnpD,EAAM9Y,GAC1D,GAAIkkD,GAAYprC,GACZmpD,EAAmBnhE,MAAQd,EAC3BiiE,EAAmBF,SAASn6D,aAE3B,GAAiC,OAA7Bq6D,EAAmBnhE,MACxBmhE,EAAmBnhE,MAAQmhE,EAAmBnhE,MAAMkzD,YAAYl7C,EAAM9Y,OAErE,CACD,IAAIy+D,EAAWlb,GAAazqC,GACvBmpD,EAAmBF,SAAS9Y,IAAIwV,IACjCwD,EAAmBF,SAAS1hD,IAAIo+C,EAAUqD,MAI9CE,GAFYC,EAAmBF,SAASpjE,IAAI8/D,GAC5C3lD,EAAO2qC,GAAa3qC,GACoB9Y,EAC5C,CACJ,CAOA,SAASkiE,GAAyBD,EAAoBnpD,GAClD,GAAIorC,GAAYprC,GAGZ,OAFAmpD,EAAmBnhE,MAAQ,KAC3BmhE,EAAmBF,SAASn6D,SACrB,EAGP,GAAiC,OAA7Bq6D,EAAmBnhE,MAAgB,CACnC,GAAImhE,EAAmBnhE,MAAMkyD,aAEzB,OAAO,EAGP,IAAIlyD,EAAQmhE,EAAmBnhE,MAK/B,OAJAmhE,EAAmBnhE,MAAQ,KAC3BA,EAAMqzD,aAAamB,GAAgB,SAAUz1D,EAAKsiE,GAC9CH,GAA2BC,EAAoB,IAAIjf,GAAKnjD,GAAMsiE,EAClE,GACOD,GAAyBD,EAAoBnpD,EAE5D,CACK,GAAImpD,EAAmBF,SAAS/hD,KAAO,EAAG,CAC3C,IAAIy+C,EAAWlb,GAAazqC,GAE5B,GADAA,EAAO2qC,GAAa3qC,GAChBmpD,EAAmBF,SAAS9Y,IAAIwV,GACbyD,GAAyBD,EAAmBF,SAASpjE,IAAI8/D,GAAW3lD,IAEnFmpD,EAAmBF,SAASxgE,OAAOk9D,GAG3C,OAA4C,IAArCwD,EAAmBF,SAAS/hD,IACvC,CAEI,OAAO,CAGnB,CAQA,SAASoiD,GAA8BH,EAAoBI,EAAYC,GAClC,OAA7BL,EAAmBnhE,MACnBwhE,EAAKD,EAAYJ,EAAmBnhE,OAe5C,SAAwCmhE,EAAoBK,GACxDL,EAAmBF,SAAS3gD,QAAQ,SAAU+gD,EAAMtiE,GAChDyiE,EAAKziE,EAAKsiE,EACd,EACJ,CAhBQI,CAA+BN,EAAoB,SAAUpiE,EAAKsiE,GAE9DC,GAA8BD,EADnB,IAAInf,GAAKqf,EAAWjiE,WAAa,IAAMP,GACRyiE,EAC9C,EAER,CAkCA,IA8FIE,GA9FAC,GAA+B,WAC/B,SAASA,EAAcC,GACnBlkE,KAAKkkE,YAAcA,EACnBlkE,KAAKmkE,MAAQ,IACjB,CAYA,OAXAF,EAAcjmE,UAAUmC,IAAM,WAC1B,IAAIikE,EAAWpkE,KAAKkkE,YAAY/jE,MAC5ByuD,EAAQuK,mBAAS,CAAC,EAAGiL,GAOzB,OANIpkE,KAAKmkE,OACLz0B,EAAK1vC,KAAKmkE,MAAO,SAAUE,EAAM/hE,GAC7BssD,EAAMyV,GAAQzV,EAAMyV,GAAQ/hE,CAChC,GAEJtC,KAAKmkE,MAAQC,EACNxV,CACX,EACOqV,CACX,CAjBmC,GA0C/BK,GAA+B,WAC/B,SAASA,EAAcC,EAAYC,GAC/BxkE,KAAKwkE,QAAUA,EACfxkE,KAAKykE,eAAiB,CAAC,EACvBzkE,KAAK0kE,eAAiB,IAAIT,GAAcM,GACxC,IAAIv/D,EATe,IAUf,IAAgDuP,KAAKuL,SACzDmxB,EAAsBjxC,KAAK2kE,aAAaz3C,KAAKltB,MAAOuU,KAAKC,MAAMxP,GACnE,CAkBA,OAjBAs/D,EAActmE,UAAU2mE,aAAe,WACnC,IAAIvzB,EAAQpxC,KACRwjD,EAAQxjD,KAAK0kE,eAAevkE,MAC5BykE,EAAgB,CAAC,EACjBC,GAAoB,EACxBn1B,EAAK8T,EAAO,SAAU6gB,EAAM/hE,GACpBA,EAAQ,GAAK0G,mBAASooC,EAAMqzB,eAAgBJ,KAC5CO,EAAcP,GAAQ/hE,EACtBuiE,GAAoB,EAE5B,GACIA,GACA7kE,KAAKwkE,QAAQjhB,YAAYqhB,GAG7B3zB,EAAsBjxC,KAAK2kE,aAAaz3C,KAAKltB,MAAOuU,KAAKC,MAAsB,EAAhBD,KAAKuL,SAzBhD,KA0BxB,EACOwkD,CACX,CA3BmC,GA2EnC,SAASQ,GAAoCva,GACzC,MAAO,CACHwa,UAAU,EACVC,YAAY,EACZza,QAASA,EACT0a,QAAQ,EAEhB,EA7BA,SAAWjB,GACPA,EAAcA,EAAyB,UAAI,GAAK,YAChDA,EAAcA,EAAqB,MAAI,GAAK,QAC5CA,EAAcA,EAA8B,eAAI,GAAK,iBACrDA,EAAcA,EAA+B,gBAAI,GAAK,iBACzD,CALD,CAKGA,KAAkBA,GAAgB,CAAC,IA0CtC,IAwWIkB,GAxWAC,GAA8B,WAI9B,SAASA,EACU7qD,EACA8qD,EACAC,GACfrlE,KAAKsa,KAAOA,EACZta,KAAKolE,aAAeA,EACpBplE,KAAKqlE,OAASA,EAEdrlE,KAAKuS,KAAOyxD,GAAcsB,eAE1BtlE,KAAKo9D,OAtDF,CACH2H,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,EAmDZ,CAgBA,OAfAE,EAAannE,UAAUunE,kBAAoB,SAAUtQ,GACjD,GAAKvP,GAAY1lD,KAAKsa,MAIjB,IAA+B,MAA3Bta,KAAKolE,aAAa9iE,MAGvB,OAFA2rC,iBAAOjuC,KAAKolE,aAAa7B,SAAS5U,UAAW,4DAEtC3uD,KAGP,IAAI+3D,EAAY/3D,KAAKolE,aAAaI,QAAQ,IAAIhhB,GAAKyQ,IACnD,OAAO,IAAIkQ,EAAargB,KAAgBiT,EAAW/3D,KAAKqlE,OAC5D,CAVI,OADAp3B,iBAAO8W,GAAa/kD,KAAKsa,QAAU26C,EAAW,iDACvC,IAAIkQ,EAAalgB,GAAajlD,KAAKsa,MAAOta,KAAKolE,aAAcplE,KAAKqlE,OAWjF,EACOF,CACX,CAhCkC,GAkD9BM,GAAgC,WAChC,SAASA,EAAerI,EAAQ9iD,GAC5Bta,KAAKo9D,OAASA,EACdp9D,KAAKsa,KAAOA,EAEZta,KAAKuS,KAAOyxD,GAAc0B,eAC9B,CASA,OARAD,EAAeznE,UAAUunE,kBAAoB,SAAUtQ,GACnD,OAAIvP,GAAY1lD,KAAKsa,MACV,IAAImrD,EAAezlE,KAAKo9D,OAAQtY,MAGhC,IAAI2gB,EAAezlE,KAAKo9D,OAAQnY,GAAajlD,KAAKsa,MAEjE,EACOmrD,CACX,CAhBoC,GAkChCE,GAA2B,WAC3B,SAASA,EAAUvI,EAAQ9iD,EAAM+hD,GAC7Br8D,KAAKo9D,OAASA,EACdp9D,KAAKsa,KAAOA,EACZta,KAAKq8D,KAAOA,EAEZr8D,KAAKuS,KAAOyxD,GAAc4B,SAC9B,CASA,OARAD,EAAU3nE,UAAUunE,kBAAoB,SAAUtQ,GAC9C,OAAIvP,GAAY1lD,KAAKsa,MACV,IAAIqrD,EAAU3lE,KAAKo9D,OAAQtY,KAAgB9kD,KAAKq8D,KAAKrH,kBAAkBC,IAGvE,IAAI0Q,EAAU3lE,KAAKo9D,OAAQnY,GAAajlD,KAAKsa,MAAOta,KAAKq8D,KAExE,EACOsJ,CACX,CAjB+B,GAmC3BE,GAAuB,WACvB,SAASA,EACUzI,EACA9iD,EACAipD,GACfvjE,KAAKo9D,OAASA,EACdp9D,KAAKsa,KAAOA,EACZta,KAAKujE,SAAWA,EAEhBvjE,KAAKuS,KAAOyxD,GAAc8B,KAC9B,CA+BA,OA9BAD,EAAM7nE,UAAUunE,kBAAoB,SAAUtQ,GAC1C,GAAIvP,GAAY1lD,KAAKsa,MAAO,CACxB,IAAIy9C,EAAY/3D,KAAKujE,SAASiC,QAAQ,IAAIhhB,GAAKyQ,IAC/C,OAAI8C,EAAUpJ,UAEH,KAEFoJ,EAAUz1D,MAER,IAAIqjE,GAAU3lE,KAAKo9D,OAAQtY,KAAgBiT,EAAUz1D,OAIrD,IAAIujE,EAAM7lE,KAAKo9D,OAAQtY,KAAgBiT,EAEtD,CAGI,OADA9pB,iBAAO8W,GAAa/kD,KAAKsa,QAAU26C,EAAW,kEACvC,IAAI4Q,EAAM7lE,KAAKo9D,OAAQnY,GAAajlD,KAAKsa,MAAOta,KAAKujE,SAEpE,EACAsC,EAAM7nE,UAAU4D,SAAW,WACvB,MAAQ,aACJ5B,KAAKsa,KACL,KACAta,KAAKo9D,OAAOx7D,WACZ,WACA5B,KAAKujE,SAAS3hE,WACd,GACR,EACOikE,CACX,CA1C2B,GAkEvBE,GAA2B,WAC3B,SAASA,EAAUC,EAAOC,EAAmBC,GACzClmE,KAAKgmE,MAAQA,EACbhmE,KAAKimE,kBAAoBA,EACzBjmE,KAAKkmE,UAAYA,CACrB,CA0BA,OAtBAH,EAAU/nE,UAAUmoE,mBAAqB,WACrC,OAAOnmE,KAAKimE,iBAChB,EAIAF,EAAU/nE,UAAUooE,WAAa,WAC7B,OAAOpmE,KAAKkmE,SAChB,EACAH,EAAU/nE,UAAUqoE,kBAAoB,SAAU/rD,GAC9C,GAAIorC,GAAYprC,GACZ,OAAOta,KAAKmmE,uBAAyBnmE,KAAKkmE,UAE9C,IAAIjG,EAAWlb,GAAazqC,GAC5B,OAAOta,KAAKsmE,mBAAmBrG,EACnC,EACA8F,EAAU/nE,UAAUsoE,mBAAqB,SAAUjlE,GAC/C,OAASrB,KAAKmmE,uBAAyBnmE,KAAKkmE,WAAclmE,KAAKgmE,MAAM7Q,SAAS9zD,EAClF,EACA0kE,EAAU/nE,UAAUmlE,QAAU,WAC1B,OAAOnjE,KAAKgmE,KAChB,EACOD,CACX,CAhC+B,GAwD3BQ,GACA,SAAwBC,GACpBxmE,KAAKwmE,OAASA,EACdxmE,KAAK69D,OAAS79D,KAAKwmE,OAAO9b,aAAaY,UAC3C,EA+BJ,SAASmb,GAAoCC,EAAgBC,EAAQ3yD,EAAW4yD,EAASC,EAAeC,GACpG,IAAIC,EAAkBH,EAAQ93C,OAAO,SAAUk4C,GAAU,OAAOA,EAAOz0D,OAASyB,CAAW,GAC3F+yD,EAAgBz3B,KAAK,SAAUR,EAAG73B,GAC9B,OAoBR,SAAsCyvD,EAAgB53B,EAAG73B,GACrD,GAAmB,MAAf63B,EAAEmmB,WAAoC,MAAfh+C,EAAEg+C,UACzB,MAAMxE,yBAAe,sCAEzB,IAAIwW,EAAW,IAAIvX,GAAU5gB,EAAEmmB,UAAWnmB,EAAEyuB,cACxC2J,EAAW,IAAIxX,GAAUz4C,EAAEg+C,UAAWh+C,EAAEsmD,cAC5C,OAAOmJ,EAAe7I,OAAO9N,QAAQkX,EAAUC,EACnD,CA3BeC,CAA6BT,EAAgB53B,EAAG73B,EAC3D,GACA8vD,EAAgBnkD,QAAQ,SAAUokD,GAC9B,IAAII,EAQZ,SAA+CV,EAAgBM,EAAQF,GACnE,MAAoB,UAAhBE,EAAOz0D,MAAoC,kBAAhBy0D,EAAOz0D,OAIlCy0D,EAAOK,SAAWP,EAAW1R,wBAAwB4R,EAAO/R,UAAW+R,EAAOzJ,aAAcmJ,EAAe7I,SAHpGmJ,CAMf,CAhBiCM,CAAsCZ,EAAgBM,EAAQF,GACvFD,EAAcjkD,QAAQ,SAAUlU,GACxBA,EAAa64D,WAAWP,EAAOz0D,OAC/Bo0D,EAAOxvD,KAAKzI,EAAa84D,YAAYJ,EAAoBV,EAAeF,QAEhF,EACJ,EACJ,CAmCA,SAASiB,GAAaX,EAAYY,GAC9B,MAAO,CAAEZ,WAAYA,EAAYY,YAAaA,EAClD,CACA,SAASC,GAAyBC,EAAWC,EAAWh9D,EAAUk0D,GAC9D,OAAO0I,GAAa,IAAI1B,GAAU8B,EAAWh9D,EAAUk0D,GAAW6I,EAAUF,YAChF,CACA,SAASI,GAA0BF,EAAWG,EAAYl9D,EAAUk0D,GAChE,OAAO0I,GAAaG,EAAUd,WAAY,IAAIf,GAAUgC,EAAYl9D,EAAUk0D,GAClF,CACA,SAASiJ,GAA8BJ,GACnC,OAAOA,EAAUd,WAAWX,qBACtByB,EAAUd,WAAW3D,UACrB,IACV,CACA,SAAS8E,GAA+BL,GACpC,OAAOA,EAAUF,YAAYvB,qBACvByB,EAAUF,YAAYvE,UACtB,IACV,CAuBA,IASI+E,GAA+B,WAC/B,SAASA,EAAc5lE,EAAOihE,QACT,IAAbA,IAVH2B,KACDA,GAAyB,IAAIvT,GAAUziB,IASZq0B,EAPxB2B,IAQHllE,KAAKsC,MAAQA,EACbtC,KAAKujE,SAAWA,CACpB,CA8QA,OA7QA2E,EAAcC,WAAa,SAAUplD,GACjC,IAAI4gD,EAAO,IAAIuE,EAAc,MAI7B,OAHAx4B,EAAK3sB,EAAK,SAAU6L,EAAWsxC,GAC3ByD,EAAOA,EAAK9hD,IAAI,IAAI2iC,GAAK51B,GAAYsxC,EACzC,GACOyD,CACX,EAIAuE,EAAclqE,UAAU2wD,QAAU,WAC9B,OAAsB,OAAf3uD,KAAKsC,OAAkBtC,KAAKujE,SAAS5U,SAChD,EAWAuZ,EAAclqE,UAAUoqE,iCAAmC,SAAUC,EAAcC,GAC/E,GAAkB,MAAdtoE,KAAKsC,OAAiBgmE,EAAUtoE,KAAKsC,OACrC,MAAO,CAAEgY,KAAMwqC,KAAgBxiD,MAAOtC,KAAKsC,OAG3C,GAAIojD,GAAY2iB,GACZ,OAAO,KAGP,IAAI5S,EAAQ1Q,GAAasjB,GACrBp5C,EAAQjvB,KAAKujE,SAASpjE,IAAIs1D,GAC9B,GAAc,OAAVxmC,EAAgB,CAChB,IAAIs5C,EAA4Bt5C,EAAMm5C,iCAAiCnjB,GAAaojB,GAAeC,GACnG,OAAiC,MAA7BC,EAEO,CAAEjuD,KADMirC,GAAU,IAAIf,GAAKiR,GAAQ8S,EAA0BjuD,MAC3ChY,MAAOimE,EAA0BjmE,OAGnD,IAEf,CAEI,OAAO,IAIvB,EAKA4lE,EAAclqE,UAAUwqE,yBAA2B,SAAUH,GACzD,OAAOroE,KAAKooE,iCAAiCC,EAAc,WAAc,OAAO,CAAM,EAC1F,EAIAH,EAAclqE,UAAUwnE,QAAU,SAAU6C,GACxC,GAAI3iB,GAAY2iB,GACZ,OAAOroE,KAGP,IAAIy1D,EAAQ1Q,GAAasjB,GACrBtQ,EAAY/3D,KAAKujE,SAASpjE,IAAIs1D,GAClC,OAAkB,OAAdsC,EACOA,EAAUyN,QAAQvgB,GAAaojB,IAG/B,IAAIH,EAAc,KAGrC,EAQAA,EAAclqE,UAAU6jB,IAAM,SAAUwmD,EAAcI,GAClD,GAAI/iB,GAAY2iB,GACZ,OAAO,IAAIH,EAAcO,EAAOzoE,KAAKujE,UAGrC,IAAI9N,EAAQ1Q,GAAasjB,GAErBvK,GADQ99D,KAAKujE,SAASpjE,IAAIs1D,IAAU,IAAIyS,EAAc,OACrCrmD,IAAIojC,GAAaojB,GAAeI,GACjDjP,EAAcx5D,KAAKujE,SAASnR,OAAOqD,EAAOqI,GAC9C,OAAO,IAAIoK,EAAcloE,KAAKsC,MAAOk3D,EAE7C,EAOA0O,EAAclqE,UAAUouC,OAAS,SAAUi8B,GACvC,GAAI3iB,GAAY2iB,GACZ,OAAIroE,KAAKujE,SAAS5U,UACP,IAAIuZ,EAAc,MAGlB,IAAIA,EAAc,KAAMloE,KAAKujE,UAIxC,IAAI9N,EAAQ1Q,GAAasjB,GACrBp5C,EAAQjvB,KAAKujE,SAASpjE,IAAIs1D,GAC9B,GAAIxmC,EAAO,CACP,IAAI6uC,EAAW7uC,EAAMmd,OAAO6Y,GAAaojB,IACrC7O,OAAc,EAOlB,OALIA,EADAsE,EAASnP,UACK3uD,KAAKujE,SAASn3B,OAAOqpB,GAGrBz1D,KAAKujE,SAASnR,OAAOqD,EAAOqI,GAE3B,OAAf99D,KAAKsC,OAAkBk3D,EAAY7K,UAC5B,IAAIuZ,EAAc,MAGlB,IAAIA,EAAcloE,KAAKsC,MAAOk3D,EAE7C,CAEI,OAAOx5D,IAGnB,EAOAkoE,EAAclqE,UAAUmC,IAAM,SAAUkoE,GACpC,GAAI3iB,GAAY2iB,GACZ,OAAOroE,KAAKsC,MAGZ,IAAImzD,EAAQ1Q,GAAasjB,GACrBp5C,EAAQjvB,KAAKujE,SAASpjE,IAAIs1D,GAC9B,OAAIxmC,EACOA,EAAM9uB,IAAI8kD,GAAaojB,IAGvB,IAGnB,EAQAH,EAAclqE,UAAU0qE,QAAU,SAAUL,EAAcM,GACtD,GAAIjjB,GAAY2iB,GACZ,OAAOM,EAGP,IAAIlT,EAAQ1Q,GAAasjB,GAErBvK,GADQ99D,KAAKujE,SAASpjE,IAAIs1D,IAAU,IAAIyS,EAAc,OACrCQ,QAAQzjB,GAAaojB,GAAeM,GACrDnP,OAAc,EAOlB,OALIA,EADAsE,EAASnP,UACK3uD,KAAKujE,SAASn3B,OAAOqpB,GAGrBz1D,KAAKujE,SAASnR,OAAOqD,EAAOqI,GAEvC,IAAIoK,EAAcloE,KAAKsC,MAAOk3D,EAE7C,EAMA0O,EAAclqE,UAAU4qE,KAAO,SAAUj5B,GACrC,OAAO3vC,KAAK6oE,MAAM/jB,KAAgBnV,EACtC,EAIAu4B,EAAclqE,UAAU6qE,MAAQ,SAAUC,EAAWn5B,GACjD,IAAIo5B,EAAQ,CAAC,EAIb,OAHA/oE,KAAKujE,SAASxR,iBAAiB,SAAUkO,EAAUlI,GAC/CgR,EAAM9I,GAAYlI,EAAU8Q,MAAMtjB,GAAUujB,EAAW7I,GAAWtwB,EACtE,GACOA,EAAGm5B,EAAW9oE,KAAKsC,MAAOymE,EACrC,EAIAb,EAAclqE,UAAUgrE,WAAa,SAAU1uD,EAAMnZ,GACjD,OAAOnB,KAAKipE,YAAY3uD,EAAMwqC,KAAgB3jD,EAClD,EACA+mE,EAAclqE,UAAUirE,YAAc,SAAUC,EAAcJ,EAAW3nE,GACrE,IAAIC,IAASpB,KAAKsC,OAAQnB,EAAE2nE,EAAW9oE,KAAKsC,OAC5C,GAAIlB,EACA,OAAOA,EAGP,GAAIskD,GAAYwjB,GACZ,OAAO,KAGP,IAAIzT,EAAQ1Q,GAAamkB,GACrBxI,EAAY1gE,KAAKujE,SAASpjE,IAAIs1D,GAClC,OAAIiL,EACOA,EAAUuI,YAAYhkB,GAAaikB,GAAe3jB,GAAUujB,EAAWrT,GAAQt0D,GAG/E,IAIvB,EACA+mE,EAAclqE,UAAUmrE,cAAgB,SAAU7uD,EAAMnZ,GACpD,OAAOnB,KAAKopE,eAAe9uD,EAAMwqC,KAAgB3jD,EACrD,EACA+mE,EAAclqE,UAAUorE,eAAiB,SAAUF,EAAcG,EAAqBloE,GAClF,GAAIukD,GAAYwjB,GACZ,OAAOlpE,KAGHA,KAAKsC,OACLnB,EAAEkoE,EAAqBrpE,KAAKsC,OAEhC,IAAImzD,EAAQ1Q,GAAamkB,GACrBxI,EAAY1gE,KAAKujE,SAASpjE,IAAIs1D,GAClC,OAAIiL,EACOA,EAAU0I,eAAenkB,GAAaikB,GAAe3jB,GAAU8jB,EAAqB5T,GAAQt0D,GAG5F,IAAI+mE,EAAc,KAGrC,EAOAA,EAAclqE,UAAUsrE,QAAU,SAAUnoE,GACxCnB,KAAKupE,SAASzkB,KAAgB3jD,EAClC,EACA+mE,EAAclqE,UAAUurE,SAAW,SAAUF,EAAqBloE,GAC9DnB,KAAKujE,SAASxR,iBAAiB,SAAUkD,EAAW8C,GAChDA,EAAUwR,SAAShkB,GAAU8jB,EAAqBpU,GAAY9zD,EAClE,GACInB,KAAKsC,OACLnB,EAAEkoE,EAAqBrpE,KAAKsC,MAEpC,EACA4lE,EAAclqE,UAAUwrE,aAAe,SAAUroE,GAC7CnB,KAAKujE,SAASxR,iBAAiB,SAAUkD,EAAW8C,GAC5CA,EAAUz1D,OACVnB,EAAE8zD,EAAW8C,EAAUz1D,MAE/B,EACJ,EACO4lE,CACX,CApRmC,GA4S/BuB,GAA+B,WAC/B,SAASA,EAAcC,GACnB1pE,KAAK0pE,WAAaA,CACtB,CAIA,OAHAD,EAAcE,MAAQ,WAClB,OAAO,IAAIF,EAAc,IAAIvB,GAAc,MAC/C,EACOuB,CACX,CARmC,GASnC,SAASG,GAAsBC,EAAevvD,EAAMq1C,GAChD,GAAIjK,GAAYprC,GACZ,OAAO,IAAImvD,GAAc,IAAIvB,GAAcvY,IAG3C,IAAIma,EAAWD,EAAcH,WAAWlB,yBAAyBluD,GACjE,GAAgB,MAAZwvD,EAAkB,CAClB,IAAIC,EAAeD,EAASxvD,KACxBhY,EAAQwnE,EAASxnE,MACjB+lE,EAAe1iB,GAAgBokB,EAAczvD,GAEjD,OADAhY,EAAQA,EAAMkzD,YAAY6S,EAAc1Y,GACjC,IAAI8Z,GAAcI,EAAcH,WAAW7nD,IAAIkoD,EAAcznE,GACxE,CAEI,IAAIkjE,EAAU,IAAI0C,GAAcvY,GAC5Bqa,EAAeH,EAAcH,WAAWhB,QAAQpuD,EAAMkrD,GAC1D,OAAO,IAAIiE,GAAcO,EAGrC,CACA,SAASC,GAAuBJ,EAAevvD,EAAM4vD,GACjD,IAAIC,EAAWN,EAIf,OAHAn6B,EAAKw6B,EAAS,SAAUjK,EAAUtQ,GAC9Bwa,EAAWP,GAAsBO,EAAU5kB,GAAUjrC,EAAM2lD,GAAWtQ,EAC1E,GACOwa,CACX,CASA,SAASC,GAAyBP,EAAevvD,GAC7C,GAAIorC,GAAYprC,GACZ,OAAOmvD,GAAcE,QAGrB,IAAIK,EAAeH,EAAcH,WAAWhB,QAAQpuD,EAAM,IAAI4tD,GAAc,OAC5E,OAAO,IAAIuB,GAAcO,EAEjC,CASA,SAASK,GAA8BR,EAAevvD,GAClD,OAA4D,MAArDgwD,GAA6BT,EAAevvD,EACvD,CASA,SAASgwD,GAA6BT,EAAevvD,GACjD,IAAIwvD,EAAWD,EAAcH,WAAWlB,yBAAyBluD,GACjE,OAAgB,MAAZwvD,EACOD,EAAcH,WAChBvpE,IAAI2pE,EAASxvD,MACb46C,SAASvP,GAAgBmkB,EAASxvD,KAAMA,IAGtC,IAEf,CAOA,SAASiwD,GAAiCV,GACtC,IAAItG,EAAW,GACX5T,EAAOka,EAAcH,WAAWpnE,MAgBpC,OAfY,MAARqtD,EAEKA,EAAK6E,cACN7E,EAAKgG,aAAamB,GAAgB,SAAU7B,EAAWI,GACnDkO,EAASpsD,KAAK,IAAIu4C,GAAUuF,EAAWI,GAC3C,GAIJwU,EAAcH,WAAWnG,SAASxR,iBAAiB,SAAUkD,EAAW8C,GAC7C,MAAnBA,EAAUz1D,OACVihE,EAASpsD,KAAK,IAAIu4C,GAAUuF,EAAW8C,EAAUz1D,OAEzD,GAEGihE,CACX,CACA,SAASiH,GAAgCX,EAAevvD,GACpD,GAAIorC,GAAYprC,GACZ,OAAOuvD,EAGP,IAAIY,EAAgBH,GAA6BT,EAAevvD,GAChE,OACW,IAAImvD,GADM,MAAjBgB,EACyB,IAAIvC,GAAcuC,GAGlBZ,EAAcH,WAAWlE,QAAQlrD,GAGtE,CAKA,SAASowD,GAAqBb,GAC1B,OAAOA,EAAcH,WAAW/a,SACpC,CAOA,SAASgc,GAAmBd,EAAela,GACvC,OAAOib,GAAkB9lB,KAAgB+kB,EAAcH,WAAY/Z,EACvE,CACA,SAASib,GAAkBvC,EAAcwC,EAAWlb,GAChD,GAAuB,MAAnBkb,EAAUvoE,MAEV,OAAOqtD,EAAK6F,YAAY6S,EAAcwC,EAAUvoE,OAGhD,IAAIwoE,EAAkB,KAgBtB,OAfAD,EAAUtH,SAASxR,iBAAiB,SAAUkO,EAAUlI,GACnC,cAAbkI,GAGAhyB,iBAA2B,OAApB8pB,EAAUz1D,MAAgB,6CACjCwoE,EAAkB/S,EAAUz1D,OAG5BqtD,EAAOib,GAAkBrlB,GAAU8iB,EAAcpI,GAAWlI,EAAWpI,EAE/E,GAEKA,EAAKuF,SAASmT,GAAc1Z,WAAiC,OAApBmc,IAC1Cnb,EAAOA,EAAK6F,YAAYjQ,GAAU8iB,EAAc,aAAcyC,IAE3Dnb,CAEf,CAsBA,SAASob,GAAqBF,EAAWvwD,GACrC,OAAO0wD,GAAgB1wD,EAAMuwD,EACjC,CAoDA,SAASI,GAAqBJ,EAAWK,GAKrC,IAAI7Q,EAAMwQ,EAAUM,UAAUC,UAAU,SAAUtzD,GAC9C,OAAOA,EAAEozD,UAAYA,CACzB,GACAj9B,iBAAOosB,GAAO,EAAG,gDACjB,IAAIgR,EAAgBR,EAAUM,UAAU9Q,GACxCwQ,EAAUM,UAAUr+C,OAAOutC,EAAK,GAIhC,IAHA,IAAIiR,EAAyBD,EAAc7jB,QACvC+jB,GAAsC,EACtCrjE,EAAI2iE,EAAUM,UAAUrjE,OAAS,EAC9BwjE,GAA0BpjE,GAAK,GAAG,CACrC,IAAIsjE,EAAeX,EAAUM,UAAUjjE,GACnCsjE,EAAahkB,UACTt/C,GAAKmyD,GACLoR,GAA6BD,EAAcH,EAAc/wD,MAEzDgxD,GAAyB,EAEpB7kB,GAAa4kB,EAAc/wD,KAAMkxD,EAAalxD,QAEnDixD,GAAsC,IAG9CrjE,GACJ,CACA,GAAKojE,EAGA,IAAIC,EAGL,OAiCR,SAA6BV,GACzBA,EAAUa,cAAgBC,GAAoBd,EAAUM,UAAWS,GAAyB9mB,MACxF+lB,EAAUM,UAAUrjE,OAAS,EAC7B+iE,EAAUgB,YACNhB,EAAUM,UAAUN,EAAUM,UAAUrjE,OAAS,GAAGojE,QAGxDL,EAAUgB,aAAe,CAEjC,CA3CQC,CAAoBjB,IACb,EAIHQ,EAAchP,KACdwO,EAAUa,cAAgBtB,GAAyBS,EAAUa,cAAeL,EAAc/wD,MAI1Fo1B,EADe27B,EAAc9H,SACd,SAAUtO,GACrB4V,EAAUa,cAAgBtB,GAAyBS,EAAUa,cAAenmB,GAAU8lB,EAAc/wD,KAAM26C,GAC9G,GAEJ,OAAO,CACX,CAnBI,OAAO,CAoBf,CACA,SAASwW,GAA6BM,EAAazxD,GAC/C,GAAIyxD,EAAY1P,KACZ,OAAO5V,GAAaslB,EAAYzxD,KAAMA,GAGtC,IAAK,IAAI26C,KAAa8W,EAAYxI,SAC9B,GAAIwI,EAAYxI,SAASjiE,eAAe2zD,IACpCxO,GAAalB,GAAUwmB,EAAYzxD,KAAM26C,GAAY36C,GACrD,OAAO,EAGf,OAAO,CAEf,CAiBA,SAASsxD,GAAwB/xB,GAC7B,OAAOA,EAAM2N,OACjB,CAKA,SAASmkB,GAAoBK,EAAQl9C,EAAQm9C,GAEzC,IADA,IAAIpC,EAAgBJ,GAAcE,QACzBzhE,EAAI,EAAGA,EAAI8jE,EAAOlkE,SAAUI,EAAG,CACpC,IAAI2xC,EAAQmyB,EAAO9jE,GAInB,GAAI4mB,EAAO+qB,GAAQ,CACf,IAAIqyB,EAAYryB,EAAMv/B,KAClB+tD,OAAe,EACnB,GAAIxuB,EAAMwiB,KACF5V,GAAawlB,EAAUC,GAEvBrC,EAAgBD,GAAsBC,EADtCxB,EAAe1iB,GAAgBsmB,EAAUC,GAC0BryB,EAAMwiB,MAEpE5V,GAAaylB,EAAWD,KAC7B5D,EAAe1iB,GAAgBumB,EAAWD,GAC1CpC,EAAgBD,GAAsBC,EAAe/kB,KAAgBjL,EAAMwiB,KAAKnH,SAASmT,SAI5F,KAAIxuB,EAAM0pB,SAsBX,MAAM9S,yBAAe,8CArBrB,GAAIhK,GAAawlB,EAAUC,GAEvBrC,EAAgBI,GAAuBJ,EADvCxB,EAAe1iB,GAAgBsmB,EAAUC,GAC2BryB,EAAM0pB,eAEzE,GAAI9c,GAAaylB,EAAWD,GAE7B,GAAIvmB,GADJ2iB,EAAe1iB,GAAgBumB,EAAWD,IAEtCpC,EAAgBI,GAAuBJ,EAAe/kB,KAAgBjL,EAAM0pB,cAE3E,CACD,IAAIt0C,EAAQm8B,kBAAQvR,EAAM0pB,SAAUxe,GAAasjB,IACjD,GAAIp5C,EAAO,CAEP,IAAIk9C,EAAWl9C,EAAMimC,SAASjQ,GAAaojB,IAC3CwB,EAAgBD,GAAsBC,EAAe/kB,KAAgBqnB,EACzE,CACJ,CAMR,CACJ,CACJ,CACA,OAAOtC,CACX,CAQA,SAASuC,GAAgCvB,EAAWwB,EAAUC,EAAqBC,EAAmBC,GAClG,GAAKD,GAAsBC,EAqBtB,CACD,IAAIvpB,EAAQunB,GAAgCK,EAAUa,cAAeW,GACrE,IAAKG,GAAuB9B,GAAqBznB,GAC7C,OAAOqpB,EAIP,GAAKE,GACsB,MAAvBF,GACCjC,GAA8BpnB,EAAO6B,MAGrC,CAUD,OAAO6lB,GAFWgB,GAAoBd,EAAUM,UAPnC,SAAUtxB,GACnB,OAASA,EAAM2N,SAAWglB,MACpBD,KACIA,EAAkBl1D,QAAQwiC,EAAMqxB,YACrCzkB,GAAa5M,EAAMv/B,KAAM+xD,IACtB5lB,GAAa4lB,EAAUxyB,EAAMv/B,MACzC,EACmE+xD,GAChDC,GAAuB5S,GAAa9H,WAE3D,CAbI,OAAO,IAenB,CA7CI,IAAI6Y,EAAgBH,GAA6BO,EAAUa,cAAeW,GAC1E,GAAqB,MAAjB5B,EACA,OAAOA,EAGP,IAAIgC,EAAWjC,GAAgCK,EAAUa,cAAeW,GACxE,OAAI3B,GAAqB+B,GACdH,EAEqB,MAAvBA,GACJjC,GAA8BoC,EAAU3nB,MAMlC6lB,GAAmB8B,EADPH,GAAuB5S,GAAa9H,YAHhD,IAkCvB,CAkKA,SAAS8a,GAAmCC,EAAcL,EAAqBC,EAAmBC,GAC9F,OAAOJ,GAAgCO,EAAa9B,UAAW8B,EAAaN,SAAUC,EAAqBC,EAAmBC,EAClI,CAMA,SAASI,GAAsCD,EAAcE,GACzD,OAtKJ,SAA4ChC,EAAWwB,EAAUQ,GAC7D,IAAIC,EAAmBpT,GAAa9H,WAChCmb,EAAczC,GAA6BO,EAAUa,cAAeW,GACxE,GAAIU,EAOA,OANKA,EAAYvY,cAEbuY,EAAYpX,aAAamB,GAAgB,SAAU7B,EAAWiL,GAC1D4M,EAAmBA,EAAiBxX,qBAAqBL,EAAWiL,EACxE,GAEG4M,EAEN,GAAID,EAAwB,CAG7B,IAAIG,EAAUxC,GAAgCK,EAAUa,cAAeW,GASvE,OARAQ,EAAuBlX,aAAamB,GAAgB,SAAU7B,EAAWI,GACrE,IAAI1F,EAAOgb,GAAmBH,GAAgCwC,EAAS,IAAIxoB,GAAKyQ,IAAaI,GAC7FyX,EAAmBA,EAAiBxX,qBAAqBL,EAAWtF,EACxE,GAEA4a,GAAiCyC,GAASpqD,QAAQ,SAAUg1C,GACxDkV,EAAmBA,EAAiBxX,qBAAqBsC,EAAUh0D,KAAMg0D,EAAUjI,KACvF,GACOmd,CACX,CAQI,OAHAvC,GADYC,GAAgCK,EAAUa,cAAeW,IAC7BzpD,QAAQ,SAAUg1C,GACtDkV,EAAmBA,EAAiBxX,qBAAqBsC,EAAUh0D,KAAMg0D,EAAUjI,KACvF,GACOmd,CAEf,CAmIWG,CAAmCN,EAAa9B,UAAW8B,EAAaN,SAAUQ,EAC7F,CAiBA,SAASK,GAA+CP,EAAcryD,EAAM6yD,EAAmBC,GAC3F,OAvIJ,SAAqDvC,EAAWwB,EAAUz9C,EAAWu+C,EAAmBC,GACpGn/B,iBAAOk/B,GAAqBC,EAAoB,6DAChD,IAAI9yD,EAAOirC,GAAU8mB,EAAUz9C,GAC/B,GAAIy7C,GAA8BQ,EAAUa,cAAepxD,GAGvD,OAAO,KAIP,IAAI+yD,EAAa7C,GAAgCK,EAAUa,cAAepxD,GAC1E,OAAIowD,GAAqB2C,GAEdD,EAAmBlY,SAAStmC,GAS5B+7C,GAAmB0C,EAAYD,EAAmBlY,SAAStmC,GAG9E,CA8GW0+C,CAA4CX,EAAa9B,UAAW8B,EAAaN,SAAU/xD,EAAM6yD,EAAmBC,EAC/H,CAOA,SAASG,GAA2BZ,EAAcryD,GAC9C,OA7FJ,SAAiCuwD,EAAWvwD,GACxC,OAAOgwD,GAA6BO,EAAUa,cAAepxD,EACjE,CA2FWkzD,CAAwBb,EAAa9B,UAAWtlB,GAAUonB,EAAaN,SAAU/xD,GAC5F,CAKA,SAASmzD,GAA6Bd,EAAce,EAAoB7S,EAAW/I,EAAOxhB,EAASnnC,GAC/F,OA7FJ,SAAmC0hE,EAAWwB,EAAUqB,EAAoB7S,EAAW/I,EAAOxhB,EAASnnC,GACnG,IAAIwkE,EACA1qB,EAAQunB,GAAgCK,EAAUa,cAAeW,GACjE5B,EAAgBH,GAA6BrnB,EAAO6B,MACxD,GAAqB,MAAjB2lB,EACAkD,EAAYlD,MAEX,IAA0B,MAAtBiD,EAKL,MAAO,GAJPC,EAAYhD,GAAmB1nB,EAAOyqB,EAK1C,CAEA,IADAC,EAAYA,EAAUrX,UAAUntD,IACjBwlD,WAAcgf,EAAUnZ,aAgBnC,MAAO,GATP,IANA,IAAIoZ,EAAQ,GACRvnB,EAAMl9C,EAAM2mD,aACZkJ,EAAO1oB,EACLq9B,EAAU9Z,uBAAuBgH,EAAW1xD,GAC5CwkE,EAAU/Z,gBAAgBiH,EAAW1xD,GACvCgI,EAAO6nD,EAAK5H,UACTjgD,GAAQy8D,EAAM9lE,OAASgqD,GACG,IAAzBzL,EAAIl1C,EAAM0pD,IACV+S,EAAMz2D,KAAKhG,GAEfA,EAAO6nD,EAAK5H,UAEhB,OAAOwc,CAKf,CA4DWC,CAA0BlB,EAAa9B,UAAW8B,EAAaN,SAAUqB,EAAoB7S,EAAW/I,EAAOxhB,EAASnnC,EACnI,CAKA,SAAS2kE,GAA8BnB,EAAc1M,EAAU8N,GAC3D,OAhIJ,SAAoClD,EAAWwB,EAAUpM,EAAUmN,GAC/D,IAAI9yD,EAAOirC,GAAU8mB,EAAUpM,GAC3BwK,EAAgBH,GAA6BO,EAAUa,cAAepxD,GAC1E,OAAqB,MAAjBmwD,EACOA,EAGH2C,EAAmB9G,mBAAmBrG,GAE/B0K,GADUH,GAAgCK,EAAUa,cAAepxD,GACpC8yD,EAAmBjK,UAAUnO,kBAAkBiL,IAG9E,IAGnB,CAiHW+N,CAA2BrB,EAAa9B,UAAW8B,EAAaN,SAAUpM,EAAU8N,EAC/F,CAIA,SAASE,GAAkBtB,EAAc1X,GACrC,OAAO+V,GAAgBzlB,GAAUonB,EAAaN,SAAUpX,GAAY0X,EAAa9B,UACrF,CACA,SAASG,GAAgB1wD,EAAMuwD,GAC3B,MAAO,CACHwB,SAAU/xD,EACVuwD,UAAWA,EAEnB,CAkBA,IAAIqD,GAAwC,WACxC,SAASA,IACLluE,KAAKmuE,UAAY,IAAI/lB,GACzB,CA6CA,OA5CA8lB,EAAuBlwE,UAAUkgE,iBAAmB,SAAU8I,GAC1D,IAAIz0D,EAAOy0D,EAAOz0D,KACd0tD,EAAW+G,EAAO/R,UACtBhnB,iBAAgB,gBAAT17B,GACM,kBAATA,GACS,kBAATA,EAA8C,6CAClD07B,iBAAoB,cAAbgyB,EAA0B,mDACjC,IAAImO,EAAYpuE,KAAKmuE,UAAUhuE,IAAI8/D,GACnC,GAAImO,EAAW,CACX,IAAIC,EAAUD,EAAU77D,KACxB,GAAa,gBAATA,GACY,kBAAZ87D,EACAruE,KAAKmuE,UAAUtsD,IAAIo+C,EAAUvC,GAAmBuC,EAAU+G,EAAOzJ,aAAc6Q,EAAU7Q,oBAExF,GAAa,kBAAThrD,GACO,gBAAZ87D,EACAruE,KAAKmuE,UAAUprE,OAAOk9D,QAErB,GAAa,kBAAT1tD,GACO,kBAAZ87D,EACAruE,KAAKmuE,UAAUtsD,IAAIo+C,EAAUxC,GAAmBwC,EAAUmO,EAAUzQ,eAEnE,GAAa,kBAATprD,GACO,gBAAZ87D,EACAruE,KAAKmuE,UAAUtsD,IAAIo+C,EAAUzC,GAAiByC,EAAU+G,EAAOzJ,mBAE9D,IAAa,kBAAThrD,GACO,kBAAZ87D,EAIA,MAAM5d,yBAAe,mCACjBuW,EACA,mBACAoH,GANJpuE,KAAKmuE,UAAUtsD,IAAIo+C,EAAUvC,GAAmBuC,EAAU+G,EAAOzJ,aAAc6Q,EAAUzQ,SAO7F,CACJ,MAEI39D,KAAKmuE,UAAUtsD,IAAIo+C,EAAU+G,EAErC,EACAkH,EAAuBlwE,UAAUswE,WAAa,WAC1C,OAAOtsE,MAAMmO,KAAKnQ,KAAKmuE,UAAUjf,SACrC,EACOgf,CACX,CAjD4C,GAqFxCK,GAA2B,IAda,WACxC,SAASC,IACT,CAOA,OANAA,EAAuBxwE,UAAUywE,iBAAmB,SAAUxO,GAC1D,OAAO,IACX,EACAuO,EAAuBxwE,UAAU2iE,mBAAqB,SAAUx3D,EAAO8lB,EAAOqhB,GAC1E,OAAO,IACX,EACOk+B,CACX,CAV4C,IAmBxCE,GAA8C,WAC9C,SAASA,EAA6BC,EAASC,EAAYC,QACvB,IAA5BA,IAAsCA,EAA0B,MACpE7uE,KAAK2uE,QAAUA,EACf3uE,KAAK4uE,WAAaA,EAClB5uE,KAAK6uE,wBAA0BA,CACnC,CAyBA,OAxBAH,EAA6B1wE,UAAUywE,iBAAmB,SAAUxO,GAChE,IAAItQ,EAAO3vD,KAAK4uE,WAAW9H,WAC3B,GAAInX,EAAK2W,mBAAmBrG,GACxB,OAAOtQ,EAAKwT,UAAUnO,kBAAkBiL,GAGxC,IAAI6O,EAA6C,MAAhC9uE,KAAK6uE,wBAChB,IAAI9I,GAAU/lE,KAAK6uE,yBAAyB,GAAM,GAClD7uE,KAAK4uE,WAAWlH,YACtB,OAAOoG,GAA8B9tE,KAAK2uE,QAAS1O,EAAU6O,EAErE,EACAJ,EAA6B1wE,UAAU2iE,mBAAqB,SAAUx3D,EAAO8lB,EAAOqhB,GAChF,IAAIo9B,EAAqD,MAAhC1tE,KAAK6uE,wBACxB7uE,KAAK6uE,wBACL5G,GAA+BjoE,KAAK4uE,YACtChB,EAAQH,GAA6BztE,KAAK2uE,QAASjB,EAAoBz+C,EAAO,EAAGqhB,EAASnnC,GAC9F,OAAqB,IAAjBykE,EAAM9lE,OACC,KAGA8lE,EAAM,EAErB,EACOc,CACX,CAhCkD,GAyDlD,SAASK,GAA4BC,EAAeC,EAAcC,EAAWC,EAAaC,GACtF,IACI3H,EAAc4H,EADdxhD,EAAc,IAAIqgD,GAEtB,GAAIgB,EAAU38D,OAASyxD,GAAc4B,UAAW,CAC5C,IAAI0J,EAAYJ,EACZI,EAAUlS,OAAO2H,SACjB0C,EAAe8H,GAAgCP,EAAeC,EAAcK,EAAUh1D,KAAMg1D,EAAUjT,KAAM8S,EAAaC,EAAevhD,IAGxIogB,iBAAOqhC,EAAUlS,OAAO4H,WAAY,mBAIpCqK,EACIC,EAAUlS,OAAO6H,QACZgK,EAAavH,YAAYtB,eAAiB1gB,GAAY4pB,EAAUh1D,MACzEmtD,EAAe+H,GAAkCR,EAAeC,EAAcK,EAAUh1D,KAAMg1D,EAAUjT,KAAM8S,EAAaC,EAAeC,EAAkBxhD,GAEpK,MACK,GAAIqhD,EAAU38D,OAASyxD,GAAc8B,MAAO,CAC7C,IAAI7iB,EAAQisB,EACRjsB,EAAMma,OAAO2H,SACb0C,EAiNZ,SAAqCuH,EAAepH,EAAWttD,EAAMm1D,EAAiBN,EAAazH,EAAa75C,GAO5G,IAAI6hD,EAAe9H,EAanB,OAZA6H,EAAgBnG,QAAQ,SAAUjB,EAAchT,GAC5C,IAAI6W,EAAY3mB,GAAUjrC,EAAM+tD,GAC5BsH,GAA2B/H,EAAW7iB,GAAamnB,MACnDwD,EAAeH,GAAgCP,EAAeU,EAAcxD,EAAW7W,EAAW8Z,EAAazH,EAAa75C,GAEpI,GACA4hD,EAAgBnG,QAAQ,SAAUjB,EAAchT,GAC5C,IAAI6W,EAAY3mB,GAAUjrC,EAAM+tD,GAC3BsH,GAA2B/H,EAAW7iB,GAAamnB,MACpDwD,EAAeH,GAAgCP,EAAeU,EAAcxD,EAAW7W,EAAW8Z,EAAazH,EAAa75C,GAEpI,GACO6hD,CACX,CAtO2BE,CAA4BZ,EAAeC,EAAchsB,EAAM3oC,KAAM2oC,EAAMsgB,SAAU4L,EAAaC,EAAevhD,IAGhIogB,iBAAOgV,EAAMma,OAAO4H,WAAY,mBAEhCqK,EACIpsB,EAAMma,OAAO6H,QAAUgK,EAAavH,YAAYtB,aACpDqB,EAAeoI,GAA8Bb,EAAeC,EAAchsB,EAAM3oC,KAAM2oC,EAAMsgB,SAAU4L,EAAaC,EAAeC,EAAkBxhD,GAE5J,MACK,GAAIqhD,EAAU38D,OAASyxD,GAAcsB,eAAgB,CACtD,IAAIwK,EAAeZ,EAKfzH,EAJCqI,EAAazK,OA0T1B,SAAsC2J,EAAepH,EAAWttD,EAAM60D,EAAa7C,EAAqBz+C,GACpG,IAAIhjB,EACJ,GAAqD,MAAjD0iE,GAA2B4B,EAAa70D,GACxC,OAAOstD,EAGP,IAAIxK,EAAS,IAAIsR,GAA6BS,EAAavH,EAAW0E,GAClEjM,EAAgBuH,EAAUd,WAAW3D,UACrCtC,OAAgB,EACpB,GAAInb,GAAYprC,IAAgC,cAAvByqC,GAAazqC,GAAuB,CACzD,IAAI41C,OAAU,EACd,GAAI0X,EAAUF,YAAYvB,qBACtBjW,EAAUwc,GAAmCyC,EAAalH,GAA+BL,QAExF,CACD,IAAImI,EAAiBnI,EAAUF,YAAYvE,UAC3Cl1B,iBAAO8hC,aAA0BrW,GAAc,iDAC/CxJ,EAAU0c,GAAsCuC,EAAaY,EACjE,CAEAlP,EAAgBmO,EAAclgD,OAAOqvC,eAAekC,EAAenQ,EAASriC,EAChF,KACK,CACD,IAAIoyC,EAAWlb,GAAazqC,GACxBwjD,EAAWgQ,GAA8BqB,EAAalP,EAAU2H,EAAUF,aAC9D,MAAZ5J,GACA8J,EAAUF,YAAYpB,mBAAmBrG,KACzCnC,EAAWuC,EAAcrL,kBAAkBiL,KAG3CY,EADY,MAAZ/C,EACgBkR,EAAclgD,OAAO0mC,YAAY6K,EAAeJ,EAAUnC,EAAU7Y,GAAa3qC,GAAO8iD,EAAQvvC,GAE3G+5C,EAAUd,WAAW3D,UAAUhO,SAAS8K,GAE7B+O,EAAclgD,OAAO0mC,YAAY6K,EAAeJ,EAAUvG,GAAa9H,WAAY3M,GAAa3qC,GAAO8iD,EAAQvvC,GAG/GwyC,GAEF1R,WACdiZ,EAAUF,YAAYvB,uBAEtBt7D,EAAW6hE,GAAmCyC,EAAalH,GAA+BL,KAC7EpT,eACTqM,EAAgBmO,EAAclgD,OAAOqvC,eAAe0C,EAAeh2D,EAAUgjB,GAGzF,CAIA,OAHAhjB,EACI+8D,EAAUF,YAAYvB,sBACyC,MAA3DoH,GAA2B4B,EAAarqB,MACzC6iB,GAAyBC,EAAW/G,EAAeh2D,EAAUmkE,EAAclgD,OAAOuvC,eAEjG,CA3W2B2R,CAA6BhB,EAAeC,EAAca,EAAax1D,KAAM60D,EAAaC,EAAevhD,GAyQpI,SAAmCmhD,EAAepH,EAAWqI,EAAS7K,EAAc+J,EAAaC,EAAevhD,GAC5G,GAAwD,MAApD0/C,GAA2B4B,EAAac,GACxC,OAAOrI,EAGX,IAAIyH,EAAmBzH,EAAUF,YAAYtB,aAGzCsB,EAAcE,EAAUF,YAC5B,GAA0B,MAAtBtC,EAAa9iE,MAAe,CAE5B,GAAKojD,GAAYuqB,IAAYvI,EAAYvB,sBACrCuB,EAAYrB,kBAAkB4J,GAC9B,OAAOT,GAAkCR,EAAepH,EAAWqI,EAASvI,EAAYvE,UAAUjO,SAAS+a,GAAUd,EAAaC,EAAeC,EAAkBxhD,GAElK,GAAI63B,GAAYuqB,GAAU,CAG3B,IAAIC,EAAoB,IAAIhI,GAAc,MAI1C,OAHAR,EAAYvE,UAAUxN,aAAa9E,GAAW,SAAUjtD,EAAM+rD,GAC1DugB,EAAoBA,EAAkBruD,IAAI,IAAI2iC,GAAK5gD,GAAO+rD,EAC9D,GACOkgB,GAA8Bb,EAAepH,EAAWqI,EAASC,EAAmBf,EAAaC,EAAeC,EAAkBxhD,EAC7I,CAEI,OAAO+5C,CAEf,CAGI,IAAIuI,EAAoB,IAAIjI,GAAc,MAO1C,OANA9C,EAAakE,QAAQ,SAAU8G,EAAW9tE,GACtC,IAAI+tE,EAAkB9qB,GAAU0qB,EAASG,GACrC1I,EAAYrB,kBAAkBgK,KAC9BF,EAAoBA,EAAkBtuD,IAAIuuD,EAAW1I,EAAYvE,UAAUjO,SAASmb,IAE5F,GACOR,GAA8Bb,EAAepH,EAAWqI,EAASE,EAAmBhB,EAAaC,EAAeC,EAAkBxhD,EAEjJ,CAnT2ByiD,CAA0BtB,EAAeC,EAAca,EAAax1D,KAAMw1D,EAAa1K,aAAc+J,EAAaC,EAAevhD,EAKxJ,KACK,IAAIqhD,EAAU38D,OAASyxD,GAAc0B,gBAItC,MAAMjV,yBAAe,2BAA6Bye,EAAU38D,MAH5Dk1D,EA6SR,SAAqCuH,EAAepH,EAAWttD,EAAM60D,EAAathD,GAC9E,IAAI0iD,EAAgB3I,EAAUF,YAC1BD,EAAeK,GAA0BF,EAAW2I,EAAcpN,UAAWoN,EAAcpK,sBAAwBzgB,GAAYprC,GAAOi2D,EAAcnK,cACxJ,OAAOoK,GAAgDxB,EAAevH,EAAcntD,EAAM60D,EAAaZ,GAA0B1gD,EACrI,CAjTuB4iD,CAA4BzB,EAAeC,EAAcC,EAAU50D,KAAM60D,EAAathD,EAIzG,CACA,IAAI+4C,EAAU/4C,EAAYygD,aAE1B,OAEJ,SAAyCW,EAAcxH,EAAc55C,GACjE,IAAIg6C,EAAYJ,EAAaX,WAC7B,GAAIe,EAAU1B,qBAAsB,CAChC,IAAIuK,EAAgB7I,EAAU1E,UAAU3O,cAAgBqT,EAAU1E,UAAUxU,UACxEgiB,EAAkB3I,GAA8BiH,IAChDphD,EAAY/lB,OAAS,IACpBmnE,EAAanI,WAAWX,sBACxBuK,IAAkB7I,EAAU1E,UAAU3M,OAAOma,KAC7C9I,EAAU1E,UAAU1O,cAAc+B,OAAOma,EAAgBlc,iBAC1D5mC,EAAY1W,KAAKmmD,GAAY0K,GAA8BP,IAEnE,CACJ,CAfImJ,CAAgC3B,EAAcxH,EAAcb,GACrD,CAAEgB,UAAWH,EAAcb,QAASA,EAC/C,CAcA,SAAS4J,GAAgDxB,EAAepH,EAAWiJ,EAAY1B,EAAa/R,EAAQvvC,GAChH,IAAIijD,EAAelJ,EAAUd,WAC7B,GAA2D,MAAvDyG,GAA2B4B,EAAa0B,GAExC,OAAOjJ,EAGP,IAAI/G,OAAgB,EAAQiO,OAAa,EACzC,GAAIppB,GAAYmrB,GAGZ,GADA5iC,iBAAO25B,EAAUF,YAAYvB,qBAAsB,8DAC/CyB,EAAUF,YAAYtB,aAAc,CAIpC,IAAIsB,EAAcO,GAA+BL,GAI7CmJ,EAAwBnE,GAAsCuC,EAH3CzH,aAAuBhO,GACxCgO,EACAhO,GAAa9H,YAEnBiP,EAAgBmO,EAAclgD,OAAOqvC,eAAeyJ,EAAUd,WAAW3D,UAAW4N,EAAuBljD,EAC/G,KACK,CACD,IAAImjD,EAAetE,GAAmCyC,EAAalH,GAA+BL,IAClG/G,EAAgBmO,EAAclgD,OAAOqvC,eAAeyJ,EAAUd,WAAW3D,UAAW6N,EAAcnjD,EACtG,KAEC,CACD,IAAIoyC,EAAWlb,GAAa8rB,GAC5B,GAAiB,cAAb5Q,EAA0B,CAC1BhyB,iBAAqC,IAA9B+W,GAAc6rB,GAAmB,yDACxC,IAAII,EAAeH,EAAa3N,UAG5B+N,EAAkBhE,GAA+CiC,EAAa0B,EAAYI,EAF9FnC,EAAalH,EAAUF,YAAYvE,WAI/BtC,EADmB,MAAnBqQ,EACgBlC,EAAclgD,OAAOgmC,eAAemc,EAAcC,GAIlDJ,EAAa3N,SAErC,KACK,CACD,IAAIgO,EAAkBlsB,GAAa4rB,GAE/BO,OAAgB,EACpB,GAAIN,EAAaxK,mBAAmBrG,GAAW,CAC3C6O,EAAalH,EAAUF,YAAYvE,UACnC,IAAIkO,EAAmBnE,GAA+CiC,EAAa0B,EAAYC,EAAa3N,UAAW2L,GAEnHsC,EADoB,MAApBC,EACgBP,EACX3N,UACAnO,kBAAkBiL,GAClBzK,YAAY2b,EAAiBE,GAIlBP,EAAa3N,UAAUnO,kBAAkBiL,EAEjE,MAEImR,EAAgBtD,GAA8BqB,EAAalP,EAAU2H,EAAUF,aAG/E7G,EADiB,MAAjBuQ,EACgBpC,EAAclgD,OAAO0mC,YAAYsb,EAAa3N,UAAWlD,EAAUmR,EAAeD,EAAiB/T,EAAQvvC,GAI3GijD,EAAa3N,SAErC,CACJ,CACA,OAAOwE,GAAyBC,EAAW/G,EAAeiQ,EAAa3K,sBAAwBzgB,GAAYmrB,GAAa7B,EAAclgD,OAAOuvC,eAErJ,CACA,SAASmR,GAAkCR,EAAeC,EAAc4B,EAAYS,EAAanC,EAAaC,EAAeC,EAAkBxhD,GAC3I,IACI0jD,EADAC,EAAgBvC,EAAavH,YAE7B+J,EAAepC,EACbL,EAAclgD,OACdkgD,EAAclgD,OAAOwvC,mBAC3B,GAAI5Y,GAAYmrB,GACZU,EAAiBE,EAAatT,eAAeqT,EAAcrO,UAAWmO,EAAa,WAElF,GAAIG,EAAapT,iBAAmBmT,EAAcpL,aAAc,CAEjE,IAAIsL,EAAgBF,EACfrO,UACA3N,YAAYqb,EAAYS,GAC7BC,EAAiBE,EAAatT,eAAeqT,EAAcrO,UAAWuO,EAAe,KACzF,KACK,CACD,IAAIzR,EAAWlb,GAAa8rB,GAC5B,IAAKW,EAAcnL,kBAAkBwK,IACjC7rB,GAAc6rB,GAAc,EAE5B,OAAO5B,EAEX,IAAIkC,EAAkBlsB,GAAa4rB,GAE/Btb,EADYic,EAAcrO,UAAUnO,kBAAkBiL,GAC7BzK,YAAY2b,EAAiBG,GAEtDC,EADa,cAAbtR,EACiBwR,EAAa3c,eAAe0c,EAAcrO,UAAW5N,GAGrDkc,EAAajc,YAAYgc,EAAcrO,UAAWlD,EAAU1K,EAAc4b,EAAiB5C,GAA0B,KAE9I,CACA,IAAI9G,EAAeK,GAA0BmH,EAAcsC,EAAgBC,EAAcrL,sBAAwBzgB,GAAYmrB,GAAaY,EAAapT,gBAEvJ,OAAOmS,GAAgDxB,EAAevH,EAAcoJ,EAAY1B,EADnF,IAAIT,GAA6BS,EAAa1H,EAAc2H,GAC4CvhD,EACzH,CACA,SAAS0hD,GAAgCP,EAAeC,EAAc4B,EAAYS,EAAanC,EAAaC,EAAevhD,GACvH,IACI45C,EAAc5G,EADdiQ,EAAe7B,EAAanI,WAE5B1J,EAAS,IAAIsR,GAA6BS,EAAaF,EAAcG,GACzE,GAAI1pB,GAAYmrB,GACZhQ,EAAgBmO,EAAclgD,OAAOqvC,eAAe8Q,EAAanI,WAAW3D,UAAWmO,EAAazjD,GACpG45C,EAAeE,GAAyBsH,EAAcpO,GAAe,EAAMmO,EAAclgD,OAAOuvC,oBAE/F,CACD,IAAI4B,EAAWlb,GAAa8rB,GAC5B,GAAiB,cAAb5Q,EACAY,EAAgBmO,EAAclgD,OAAOgmC,eAAema,EAAanI,WAAW3D,UAAWmO,GACvF7J,EAAeE,GAAyBsH,EAAcpO,EAAeiQ,EAAa3K,qBAAsB2K,EAAa1K,kBAEpH,CACD,IAAI+K,EAAkBlsB,GAAa4rB,GAC/B5S,EAAW6S,EAAa3N,UAAUnO,kBAAkBiL,GACpDnC,OAAW,EACf,GAAIpY,GAAYyrB,GAEZrT,EAAWwT,MAEV,CACD,IAAIjc,EAAY+H,EAAOqR,iBAAiBxO,GAMhCnC,EALS,MAAbzI,EACqC,cAAjCnQ,GAAYisB,IACZ9b,EAAUH,SAAS7P,GAAW8rB,IAAkBxiB,UAGrC0G,EAGAA,EAAUG,YAAY2b,EAAiBG,GAK3C5X,GAAa9H,UAEhC,CACA,GAAKqM,EAASzH,OAAOsH,GAKjB2J,EAAewH,OAHfxH,EAAeE,GAAyBsH,EADrBD,EAAclgD,OAAO0mC,YAAYsb,EAAa3N,UAAWlD,EAAUnC,EAAUqT,EAAiB/T,EAAQvvC,GACrDijD,EAAa3K,qBAAsB6I,EAAclgD,OAAOuvC,eAKpI,CACJ,CACA,OAAOoJ,CACX,CACA,SAASkI,GAA2B/H,EAAW3H,GAC3C,OAAO2H,EAAUd,WAAWR,mBAAmBrG,EACnD,CAuBA,SAAS0R,GAAwB3C,EAAerf,EAAM1M,GAIlD,OAHAA,EAAMqmB,QAAQ,SAAUjB,EAAchT,GAClC1F,EAAOA,EAAK6F,YAAY6S,EAAchT,EAC1C,GACO1F,CACX,CACA,SAASkgB,GAA8Bb,EAAepH,EAAWttD,EAAMm1D,EAAiBN,EAAazH,EAAa2H,EAAkBxhD,GAGhI,GAAI+5C,EAAUF,YAAYvE,UAAUxU,YAC/BiZ,EAAUF,YAAYvB,qBACvB,OAAOyB,EAQX,IACIgK,EADAlC,EAAe9H,EAGfgK,EADAlsB,GAAYprC,GACIm1D,EAGA,IAAIvH,GAAc,MAAMQ,QAAQpuD,EAAMm1D,GAE1D,IAAIX,EAAalH,EAAUF,YAAYvE,UAqBvC,OApBAyO,EAAcrO,SAASxR,iBAAiB,SAAUkO,EAAUlI,GACxD,GAAI+W,EAAW3Z,SAAS8K,GAAW,CAC/B,IAGInC,EAAW6T,GAAwB3C,EAHrBpH,EAAUF,YACvBvE,UACAnO,kBAAkBiL,GAC4ClI,GACnE2X,EAAeF,GAAkCR,EAAeU,EAAc,IAAIlrB,GAAKyb,GAAWnC,EAAUqR,EAAazH,EAAa2H,EAAkBxhD,EAC5J,CACJ,GACA+jD,EAAcrO,SAASxR,iBAAiB,SAAUkO,EAAU4R,GACxD,IAAIC,GAAsBlK,EAAUF,YAAYpB,mBAAmBrG,SACtC3/D,IAAzBuxE,EAAevvE,MACnB,IAAKwsE,EAAW3Z,SAAS8K,KAAc6R,EAAoB,CACvD,IAGIhU,EAAW6T,GAAwB3C,EAHrBpH,EAAUF,YACvBvE,UACAnO,kBAAkBiL,GAC4C4R,GACnEnC,EAAeF,GAAkCR,EAAeU,EAAc,IAAIlrB,GAAKyb,GAAWnC,EAAUqR,EAAazH,EAAa2H,EAAkBxhD,EAC5J,CACJ,GACO6hD,CACX,CA8HA,IA+IIqC,GA/IAC,GAAsB,WACtB,SAASA,EAAKxL,EAAQyL,GAClBjyE,KAAKwmE,OAASA,EACdxmE,KAAKkyE,oBAAsB,GAC3B,IA1jF0BlQ,EA0jFtB7kD,EAASnd,KAAKwmE,OAAO9b,aACrBynB,EAAc,IAAIvU,GAAczgD,EAAOmuC,YACvCx8B,GA5jFsBkzC,EA4jFY7kD,GA3jF1BytC,eACL,IAAIgT,GAAcoE,EAAY1W,YAEhC0W,EAAYH,WACV,IAAIrC,GAAcwC,GAGlB,IAAIzD,GAAayD,GAqjFxBhiE,KAAKoyE,WA1bb,SAA0BtjD,GACtB,MAAO,CAAEA,OAAQA,EACrB,CAwb0BujD,CAAiBvjD,GACnC,IAAIwjD,EAAqBL,EAAiBvK,YACtC6K,EAAoBN,EAAiBnL,WAErCiB,EAAaoK,EAAYhU,eAAezE,GAAa9H,WAAY0gB,EAAmBnP,UAAW,MAC/F0E,EAAY/4C,EAAOqvC,eAAezE,GAAa9H,WAAY2gB,EAAkBpP,UAAW,MACxFoO,EAAiB,IAAIxL,GAAUgC,EAAYuK,EAAmBnM,qBAAsBgM,EAAY9T,gBAChGwC,EAAgB,IAAIkF,GAAU8B,EAAW0K,EAAkBpM,qBAAsBr3C,EAAOuvC,gBAC5Fr+D,KAAK4uE,WAAanH,GAAa5G,EAAe0Q,GAC9CvxE,KAAKwyE,gBAAkB,IAAIjM,GAAevmE,KAAKwmE,OACnD,CAQA,OAPAhnE,OAAO+kB,eAAeytD,EAAKh0E,UAAW,QAAS,CAC3CmC,IAAK,WACD,OAAOH,KAAKwmE,MAChB,EACAnzB,YAAY,EACZC,cAAc,IAEX0+B,CACX,CA1B0B,GAiC1B,SAASS,GAA2BC,EAAMp4D,GACtC,IAAIq4D,EAAQ1K,GAA+ByK,EAAK9D,YAChD,OAAI+D,IAGID,EAAKj/B,MAAMiX,aAAaE,iBACtBlF,GAAYprC,KACTq4D,EAAM3d,kBAAkBjQ,GAAazqC,IAAOq0C,WAC1CgkB,EAAMzd,SAAS56C,GAGvB,IACX,CACA,SAASs4D,GAAYF,GACjB,OAA2C,IAApCA,EAAKR,oBAAoBpqE,MACpC,CASA,SAAS+qE,GAA4BH,EAAMI,EAAmBC,GAC1D,IAAIC,EAAe,GACnB,GAAID,EAAa,CACb9kC,iBAA4B,MAArB6kC,EAA2B,mDAClC,IAAIG,EAASP,EAAKj/B,MAAMsW,MACxB2oB,EAAKR,oBAAoBtvD,QAAQ,SAAUlU,GACvC,IAAIwkE,EAAaxkE,EAAaykE,kBAAkBJ,EAAaE,GACzDC,GACAF,EAAa77D,KAAK+7D,EAE1B,EACJ,CACA,GAAIJ,EAAmB,CAEnB,IADA,IAAIM,EAAY,GACPlrE,EAAI,EAAGA,EAAIwqE,EAAKR,oBAAoBpqE,SAAUI,EAAG,CACtD,IAAImrE,EAAWX,EAAKR,oBAAoBhqE,GACxC,GAAKmrE,EAAS17D,QAAQm7D,IAGjB,GAAIA,EAAkBQ,iBAAkB,CAEzCF,EAAYA,EAAUj8C,OAAOu7C,EAAKR,oBAAoBv2D,MAAMzT,EAAI,IAChE,KACJ,OANIkrE,EAAUj8D,KAAKk8D,EAOvB,CACAX,EAAKR,oBAAsBkB,CAC/B,MAEIV,EAAKR,oBAAsB,GAE/B,OAAOc,CACX,CAIA,SAASO,GAAmBb,EAAMxD,EAAWC,EAAa7C,GAClD4C,EAAU38D,OAASyxD,GAAc8B,OACJ,OAA7BoJ,EAAU9R,OAAO7S,UACjBtc,iBAAOg6B,GAA+ByK,EAAK9D,YAAa,6DACxD3gC,iBAAO+5B,GAA8B0K,EAAK9D,YAAa,4DAE3D,IAlhBgCI,EAAepH,EAkhB3CqH,EAAeyD,EAAK9D,WACpBxtE,EAAS2tE,GAA4B2D,EAAKN,WAAYnD,EAAcC,EAAWC,EAAa7C,GAKhG,OAxhBgC0C,EAohBL0D,EAAKN,WAphBexK,EAohBHxmE,EAAOwmE,UAnhBnD35B,iBAAO25B,EAAUd,WAAW3D,UAAU5M,UAAUyY,EAAclgD,OAAOw8B,YAAa,0BAClFrd,iBAAO25B,EAAUF,YAAYvE,UAAU5M,UAAUyY,EAAclgD,OAAOw8B,YAAa,2BAmhBnFrd,iBAAO7sC,EAAOwmE,UAAUF,YAAYvB,uBAC/B8I,EAAavH,YAAYvB,qBAAsB,2DACpDuM,EAAK9D,WAAaxtE,EAAOwmE,UAClB4L,GAA8Bd,EAAMtxE,EAAOwlE,QAASxlE,EAAOwmE,UAAUd,WAAW3D,UAAW,KACtG,CAeA,SAASqQ,GAA8Bd,EAAM9L,EAASE,EAAYgM,GAC9D,IAAIjM,EAAgBiM,EACd,CAACA,GACDJ,EAAKR,oBACX,OA/vDJ,SAAgDxL,EAAgBE,EAASE,EAAY2M,GACjF,IAAI9M,EAAS,GACT+M,EAAQ,GAYZ,OAXA9M,EAAQhkD,QAAQ,SAAUokD,GA/+C9B,IAA0B/R,EAg/CE,kBAAhB+R,EAAOz0D,MACPm0D,EAAe7I,OAAO7N,oBAAoBgX,EAAOrJ,QAASqJ,EAAOzJ,eACjEmW,EAAMv8D,MAl/CQ89C,EAk/Cc+R,EAAO/R,UAj/CpC,CAAE1iD,KAAM,cAAiCgrD,aAi/CMyJ,EAAOzJ,aAj/CetI,UAAWA,IAm/CvF,GACAwR,GAAoCC,EAAgBC,EAAQ,gBAAqCC,EAAS6M,EAAoB3M,GAC9HL,GAAoCC,EAAgBC,EAAQ,cAAiCC,EAAS6M,EAAoB3M,GAC1HL,GAAoCC,EAAgBC,EAAQ,cAAiC+M,EAAOD,EAAoB3M,GACxHL,GAAoCC,EAAgBC,EAAQ,gBAAqCC,EAAS6M,EAAoB3M,GAC9HL,GAAoCC,EAAgBC,EAAQ,QAAqBC,EAAS6M,EAAoB3M,GACvGH,CACX,CAgvDWgN,CAAuCjB,EAAKF,gBAAiB5L,EAASE,EAAYD,EAC7F,CA6BA,IA6PI+M,GA7PAC,GACA,WAOI7zE,KAAK8zE,MAAQ,IAAI1rB,GACrB,EAcJ,SAAS2rB,GAAwBC,EAAW9E,EAAWC,EAAa8E,GAChE,IAAI91B,EAAK5M,EACLgZ,EAAU2kB,EAAU9R,OAAO7S,QAC/B,GAAgB,OAAZA,EAAkB,CAClB,IAAImoB,EAAOsB,EAAUF,MAAM3zE,IAAIoqD,GAE/B,OADAtc,iBAAe,MAARykC,EAAc,gDACda,GAAmBb,EAAMxD,EAAWC,EAAa8E,EAC5D,CAEI,IAAItN,EAAS,GACb,IACI,IAAK,IAAInoB,EAAKC,mBAASu1B,EAAUF,MAAM5kB,UAAWvQ,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACpFuhE,EAAO/zB,EAAGr8C,MACdqkE,EAASA,EAAOxvC,OAAOo8C,GAAmBb,EAAMxD,EAAWC,EAAa8E,GAC5E,CACJ,CACA,MAAOn1B,GAASX,EAAM,CAAEx4C,MAAOm5C,EAAS,CAAC,QAErC,IACQH,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIL,EAAK,MAAMA,EAAIx4C,KAAO,CACxC,CACA,OAAOghE,CAEf,CAUA,SAASuN,GAAiBF,EAAWvgC,EAAO07B,EAAazH,EAAayM,GAClE,IAAI5pB,EAAU9W,EAAM+W,iBAChBkoB,EAAOsB,EAAUF,MAAM3zE,IAAIoqD,GAC/B,IAAKmoB,EAAM,CAEP,IAAI5L,EAAa4F,GAAmCyC,EAAagF,EAAsBzM,EAAc,MACjG0M,GAAqB,EACrBtN,EACAsN,GAAqB,EAEhB1M,aAAuBhO,IAC5BoN,EAAa8F,GAAsCuC,EAAazH,GAChE0M,GAAqB,IAGrBtN,EAAapN,GAAa9H,WAC1BwiB,GAAqB,GAEzB,IAAIxM,EAAYH,GAAa,IAAI1B,GAAUe,EAAYsN,GAAoB,GAAQ,IAAIrO,GAAU2B,EAAayM,GAAqB,IACnI,OAAO,IAAInC,GAAKv+B,EAAOm0B,EAC3B,CACA,OAAO8K,CACX,CAWA,SAAS2B,GAA8BL,EAAWvgC,EAAOq/B,EAAmB3D,EAAazH,EAAayM,GAClG,IAAIzB,EAAOwB,GAAiBF,EAAWvgC,EAAO07B,EAAazH,EAAayM,GAMxE,OALKH,EAAUF,MAAMrpB,IAAIhX,EAAM+W,mBAC3BwpB,EAAUF,MAAMjyD,IAAI4xB,EAAM+W,iBAAkBkoB,GAvMpD,SAAkCA,EAAMI,GACpCJ,EAAKR,oBAAoB/6D,KAAK27D,EAClC,CAwMIwB,CAAyB5B,EAAMI,GAjJnC,SAA8BJ,EAAMhkE,GAChC,IAAIm5D,EAAY6K,EAAK9D,WAAW9H,WAC5ByN,EAAiB,GAUrB,OATK1M,EAAU1E,UAAU3O,cACLqT,EAAU1E,UAChBxN,aAAamB,GAAgB,SAAUz1D,EAAKg0D,GAClDkf,EAAep9D,KAAKqmD,GAAiBn8D,EAAKg0D,GAC9C,GAEAwS,EAAU1B,sBACVoO,EAAep9D,KAAKmmD,GAAYuK,EAAU1E,YAEvCqQ,GAA8Bd,EAAM6B,EAAgB1M,EAAU1E,UAAWz0D,EACpF,CAqIW8lE,CAAqB9B,EAAMI,EACtC,CAWA,SAAS2B,GAAiCT,EAAWvgC,EAAOq/B,EAAmBC,GAC3E,IAAI9jB,EAAK1d,EACLgZ,EAAU9W,EAAM+W,iBAChBkqB,EAAU,GACV1B,EAAe,GACf2B,EAAkBC,GAAyBZ,GAC/C,GAAgB,YAAZzpB,EACA,IAEI,IAAK,IAAI/L,EAAKC,mBAASu1B,EAAUF,MAAMh6C,WAAY6kB,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACzF,IAAIg+C,EAAK5gB,iBAAOoQ,EAAGr8C,MAAO,GAAIuyE,EAAc1lB,EAAG,GAAIujB,EAAOvjB,EAAG,GAC7D6jB,EAAeA,EAAa77C,OAAO07C,GAA4BH,EAAMI,EAAmBC,IACpFH,GAAYF,KACZsB,EAAUF,MAAM/wE,OAAO8xE,GAElBnC,EAAKj/B,MAAMiX,aAAaE,gBACzB8pB,EAAQv9D,KAAKu7D,EAAKj/B,OAG9B,CACJ,CACA,MAAO8b,GAASN,EAAM,CAAEtpD,MAAO4pD,EAAS,CAAC,QAErC,IACQ5Q,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIyQ,EAAK,MAAMA,EAAItpD,KAAO,CACxC,MAII+sE,EAAOsB,EAAUF,MAAM3zE,IAAIoqD,MAE3ByoB,EAAeA,EAAa77C,OAAO07C,GAA4BH,EAAMI,EAAmBC,IACpFH,GAAYF,KACZsB,EAAUF,MAAM/wE,OAAOwnD,GAElBmoB,EAAKj/B,MAAMiX,aAAaE,gBACzB8pB,EAAQv9D,KAAKu7D,EAAKj/B,SASlC,OAJIkhC,IAAoBC,GAAyBZ,IAE7CU,EAAQv9D,KAAK,IA1IjB82B,iBAAO8jC,GAAwB,oCACxBA,IAyImDt+B,EAAMqhC,MAAOrhC,EAAMsW,QAEtE,CAAE2qB,QAASA,EAAS/N,OAAQqM,EACvC,CACA,SAAS+B,GAAuBf,GAC5B,IAAIgB,EAAKzjC,EACLnwC,EAAS,GACb,IACI,IAAK,IAAIo9C,EAAKC,mBAASu1B,EAAUF,MAAM5kB,UAAWvQ,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACxF,IAAIuhE,EAAO/zB,EAAGr8C,MACTowE,EAAKj/B,MAAMiX,aAAaE,gBACzBxpD,EAAO+V,KAAKu7D,EAEpB,CACJ,CACA,MAAOuC,GAASD,EAAM,CAAErvE,MAAOsvE,EAAS,CAAC,QAErC,IACQt2B,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIw2B,EAAK,MAAMA,EAAIrvE,KAAO,CACxC,CACA,OAAOvE,CACX,CAKA,SAAS8zE,GAAgClB,EAAW15D,GAChD,IAAI66D,EAAK5jC,EACLm2B,EAAc,KAClB,IACI,IAAK,IAAIlpB,EAAKC,mBAASu1B,EAAUF,MAAM5kB,UAAWvQ,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACxF,IAAIuhE,EAAO/zB,EAAGr8C,MACdolE,EAAcA,GAAe+K,GAA2BC,EAAMp4D,EAClE,CACJ,CACA,MAAO86D,GAASD,EAAM,CAAExvE,MAAOyvE,EAAS,CAAC,QAErC,IACQz2B,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAI22B,EAAK,MAAMA,EAAIxvE,KAAO,CACxC,CACA,OAAO+hE,CACX,CACA,SAAS2N,GAAsBrB,EAAWvgC,GAEtC,GADaA,EAAMiX,aACRE,eACP,OAAO0qB,GAAyBtB,GAGhC,IAAIzpB,EAAU9W,EAAM+W,iBACpB,OAAOwpB,EAAUF,MAAM3zE,IAAIoqD,EAEnC,CACA,SAASgrB,GAA4BvB,EAAWvgC,GAC5C,OAAkD,MAA3C4hC,GAAsBrB,EAAWvgC,EAC5C,CACA,SAASmhC,GAAyBZ,GAC9B,OAA8C,MAAvCsB,GAAyBtB,EACpC,CACA,SAASsB,GAAyBtB,GAC9B,IAAIwB,EAAKjkC,EACT,IACI,IAAK,IAAIiN,EAAKC,mBAASu1B,EAAUF,MAAM5kB,UAAWvQ,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACxF,IAAIuhE,EAAO/zB,EAAGr8C,MACd,GAAIowE,EAAKj/B,MAAMiX,aAAaE,eACxB,OAAO8nB,CAEf,CACJ,CACA,MAAO+C,GAASD,EAAM,CAAE7vE,MAAO8vE,EAAS,CAAC,QAErC,IACQ92B,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIg3B,EAAK,MAAMA,EAAI7vE,KAAO,CACxC,CACA,OAAO,IACX,CA8BA,IAAI+vE,GAAwB,EAsBxBC,GAKA,SAAkBC,GACd51E,KAAK41E,gBAAkBA,EAIvB51E,KAAK61E,eAAiB,IAAI3N,GAAc,MAIxCloE,KAAK81E,kBAtmCF,CACHpK,cAAejC,GAAcE,QAC7BwB,UAAW,GACXU,aAAc,GAomCd7rE,KAAK+1E,cAAgB,IAAI3tB,IACzBpoD,KAAKg2E,cAAgB,IAAI5tB,GAC7B,EAQJ,SAAS6tB,GAA2BC,EAAU57D,EAAM67D,EAASjL,EAAS1jB,GAGlE,OAt/CJ,SAA+BqjB,EAAWvwD,EAAM+hD,EAAM6O,EAAS1jB,GAC3DvZ,iBAAOi9B,EAAUL,EAAUgB,YAAa,qDACxBvrE,IAAZknD,IACAA,GAAU,GAEdqjB,EAAUM,UAAUh0D,KAAK,CACrBmD,KAAMA,EACN+hD,KAAMA,EACN6O,QAASA,EACT1jB,QAASA,IAETA,IACAqjB,EAAUa,cAAgB9B,GAAsBiB,EAAUa,cAAepxD,EAAM+hD,IAEnFwO,EAAUgB,YAAcX,CAC5B,CAs+CIkL,CAAsBF,EAASJ,kBAAmBx7D,EAAM67D,EAASjL,EAAS1jB,GACrEA,EAIM6uB,GAAoCH,EAAU,IAAIvQ,GAr4EtD,CACHZ,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,GAi4EqF3qD,EAAM67D,IAH5F,EAKf,CAMA,SAASG,GAAuBJ,EAAU57D,EAAMm1D,EAAiBvE,IA/+CjE,SAA2BL,EAAWvwD,EAAMm1D,EAAiBvE,GACzDj9B,iBAAOi9B,EAAUL,EAAUgB,YAAa,gDACxChB,EAAUM,UAAUh0D,KAAK,CACrBmD,KAAMA,EACNipD,SAAUkM,EACVvE,QAASA,EACT1jB,SAAS,IAEbqjB,EAAUa,cAAgBzB,GAAuBY,EAAUa,cAAepxD,EAAMm1D,GAChF5E,EAAUgB,YAAcX,CAC5B,CAu+CIqL,CAAkBL,EAASJ,kBAAmBx7D,EAAMm1D,EAAiBvE,GACrE,IAAIsL,EAAatO,GAAcC,WAAWsH,GAC1C,OAAO4G,GAAoCH,EAAU,IAAIrQ,GAj5ElD,CACHd,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,GA64E6E3qD,EAAMk8D,GACnG,CAOA,SAASC,GAAqBP,EAAUhL,EAAS7F,QAC9B,IAAXA,IAAqBA,GAAS,GAClC,IAAIxrB,EAl/CR,SAA2BgxB,EAAWK,GAClC,IAAK,IAAIhjE,EAAI,EAAGA,EAAI2iE,EAAUM,UAAUrjE,OAAQI,IAAK,CACjD,IAAIs4B,EAASqqC,EAAUM,UAAUjjE,GACjC,GAAIs4B,EAAO0qC,UAAYA,EACnB,OAAO1qC,CAEf,CACA,OAAO,IACX,CA0+CgBk2C,CAAkBR,EAASJ,kBAAmB5K,GAE1D,GADuBD,GAAqBiL,EAASJ,kBAAmB5K,GAInE,CACD,IAAIyL,EAAiB,IAAIzO,GAAc,MAUvC,OATkB,MAAdruB,EAAMwiB,KAENsa,EAAiBA,EAAe90D,IAAIijC,MAAgB,GAGpDpV,EAAKmK,EAAM0pB,SAAU,SAAUzgB,GAC3B6zB,EAAiBA,EAAe90D,IAAI,IAAI2iC,GAAK1B,IAAa,EAC9D,GAEGuzB,GAAoCH,EAAU,IAAI/Q,GAAatrB,EAAMv/B,KAAMq8D,EAAgBtR,GACtG,CAdI,MAAO,EAef,CAMA,SAASuR,GAA6BV,EAAU57D,EAAM67D,GAClD,OAAOE,GAAoCH,EAAU,IAAIvQ,GA56ElD,CACHZ,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,GAw6EmF3qD,EAAM67D,GACzG,CA+CA,SAASU,GAAgCX,EAAUziC,EAAOq/B,EAAmBC,GAEzE,IAAIz4D,EAAOm5B,EAAMsW,MACb+sB,EAAiBZ,EAASL,eAAe11E,IAAIma,GAC7C04D,EAAe,GAInB,GAAI8D,IAC4B,YAA3BrjC,EAAM+W,kBACH+qB,GAA4BuB,EAAgBrjC,IAAS,CACzD,IAAIsjC,EAAmBtC,GAAiCqC,EAAgBrjC,EAAOq/B,EAAmBC,GApZtE,IAqZP+D,EArZRhD,MAAMtyD,OAsZf00D,EAASL,eAAiBK,EAASL,eAAezpC,OAAO9xB,IAE7D,IAAIo6D,EAAUqC,EAAiBrC,QAC/B1B,EAAe+D,EAAiBpQ,OAOhC,IAAIqQ,GAAmB,IACnBtC,EAAQtJ,UAAU,SAAU33B,GACxB,OAAOA,EAAMiX,aAAaE,cAC9B,GACAqsB,EAAUf,EAASL,eAAe7M,WAAW1uD,EAAM,SAAU+tD,EAAc6O,GAC3E,OAAOtC,GAAyBsC,EACpC,GACA,GAAIF,IAAoBC,EAAS,CAC7B,IAAIzR,EAAU0Q,EAASL,eAAerQ,QAAQlrD,GAG9C,IAAKkrD,EAAQ7W,UAIT,IAFA,IAAIwoB,EAoUpB,SAAiD3R,GAC7C,OAAOA,EAAQoD,KAAK,SAAUP,EAAc+O,EAAqBC,GAC7D,GAAID,GAAuBxC,GAAyBwC,GAEhD,MAAO,CADY9B,GAAyB8B,IAK5C,IAAIE,EAAU,GAOd,OANIF,IACAE,EAAUvC,GAAuBqC,IAErC1nC,EAAK2nC,EAAU,SAAUE,EAAMC,GAC3BF,EAAUA,EAAQngD,OAAOqgD,EAC7B,GACOF,CAEf,EACJ,CAtV+BG,CAAwCjS,GAE9Ct9D,EAAI,EAAGA,EAAIivE,EAASrvE,SAAUI,EAAG,CACtC,IAAIwqE,EAAOyE,EAASjvE,GAAIwvE,EAAWhF,EAAKj/B,MACpC15B,EAAW49D,GAA+BzB,EAAUxD,GACxDwD,EAASN,gBAAgBgC,eAAeC,GAA2BH,GAAWI,GAAqB5B,EAAUwB,GAAW39D,EAAS+wC,OAAQ/wC,EAASgpC,WACtJ,CAER,CAIA,IAAKk0B,GAAWvC,EAAQ5sE,OAAS,IAAMirE,EAGnC,GAAIiE,EAAiB,CAGjBd,EAASN,gBAAgBmC,cAAcF,GAA2BpkC,GADjD,KAErB,MAEIihC,EAAQ9xD,QAAQ,SAAUo1D,GACtB,IAAIC,EAAc/B,EAASF,cAAc71E,IAAI+3E,GAAsBF,IACnE9B,EAASN,gBAAgBmC,cAAcF,GAA2BG,GAAgBC,EACtF,IA+UhB,SAA6B/B,EAAU9mB,GACnC,IAAK,IAAI5I,EAAI,EAAGA,EAAI4I,EAAQtnD,SAAU0+C,EAAG,CACrC,IAAI2xB,EAAe/oB,EAAQ5I,GAC3B,IAAK2xB,EAAaztB,aAAaE,eAAgB,CAE3C,IAAIwtB,EAAkBF,GAAsBC,GACxCE,EAAkBnC,EAASF,cAAc71E,IAAIi4E,GACjDlC,EAASF,cAAcjzE,OAAOq1E,GAC9BlC,EAASH,cAAchzE,OAAOs1E,EAClC,CACJ,CACJ,CAtVQC,CAAoBpC,EAAUxB,EAClC,CACA,OAAO1B,CACX,CA6CA,SAASuF,GAA6BrC,EAAUziC,EAAOq/B,GACnD,IAAIx4D,EAAOm5B,EAAMsW,MACb2d,EAAc,KACd8Q,GAA2B,EAG/BtC,EAASL,eAAe1M,cAAc7uD,EAAM,SAAUm+D,EAAiBC,GACnE,IAAIrQ,EAAe1iB,GAAgB8yB,EAAiBn+D,GACpDotD,EACIA,GAAewN,GAAgCwD,EAAIrQ,GACvDmQ,EACIA,GAA4B5D,GAAyB8D,EAC7D,GACA,IAWIvE,EAXAH,EAAYkC,EAASL,eAAe11E,IAAIma,IACvC05D,GAKDwE,EACIA,GAA4B5D,GAAyBZ,GACzDtM,EACIA,GAAewN,GAAgClB,EAAWlvB,QAP9DkvB,EAAY,IAAIH,GAChBqC,EAASL,eAAiBK,EAASL,eAAeh0D,IAAIvH,EAAM05D,IAS7C,MAAftM,GACAyM,GAAsB,GAGtBA,GAAsB,EACtBzM,EAAchO,GAAa9H,WACbskB,EAASL,eAAerQ,QAAQlrD,GACtCkvD,aAAa,SAAUvU,EAAW0jB,GACtC,IAAIvJ,EAAgB8F,GAAgCyD,EAAgB7zB,MAChEsqB,IACA1H,EAAcA,EAAYpS,qBAAqBL,EAAWma,GAElE,IAEJ,IAAIwJ,EAAoBrD,GAA4BvB,EAAWvgC,GAC/D,IAAKmlC,IAAsBnlC,EAAMiX,aAAaE,eAAgB,CAE1D,IAAIiuB,EAAWX,GAAsBzkC,GACrCxF,kBAAQioC,EAASF,cAAcvrB,IAAIouB,GAAW,0CAC9C,IAAIvuB,EA+PDorB,KA9PHQ,EAASF,cAAcn0D,IAAIg3D,EAAUvuB,GACrC4rB,EAASH,cAAcl0D,IAAIyoC,EAAKuuB,EACpC,CACA,IACIlS,EAAS0N,GAA8BL,EAAWvgC,EAAOq/B,EAD3C/H,GAAqBmL,EAASJ,kBAAmBx7D,GAC0BotD,EAAayM,GAC1G,IAAKyE,IAAsBJ,EAA0B,CACjD,IAAI9F,EAAO2C,GAAsBrB,EAAWvgC,GAC5CkzB,EAASA,EAAOxvC,OA8PxB,SAAgC++C,EAAUziC,EAAOi/B,GAC7C,IAAIp4D,EAAOm5B,EAAMsW,MACbO,EAAMwtB,GAAqB5B,EAAUziC,GACrC15B,EAAW49D,GAA+BzB,EAAUxD,GACpD/L,EAASuP,EAASN,gBAAgBgC,eAAeC,GAA2BpkC,GAAQ6W,EAAKvwC,EAAS+wC,OAAQ/wC,EAASgpC,YACnHyiB,EAAU0Q,EAASL,eAAerQ,QAAQlrD,GAG9C,GAAIgwC,EACArc,kBAAQ2mC,GAAyBpP,EAAQljE,OAAQ,0DAsBjD,IAlBA,IAAIw2E,EAAgBtT,EAAQoD,KAAK,SAAUP,EAAc+O,EAAqBC,GAC1E,IAAK3xB,GAAY2iB,IACb+O,GACAxC,GAAyBwC,GACzB,MAAO,CAAC9B,GAAyB8B,GAAqB3jC,OAItD,IAAIslC,EAAY,GAOhB,OANI3B,IACA2B,EAAYA,EAAU5hD,OAAO49C,GAAuBqC,GAAqBl1E,IAAI,SAAUwwE,GAAQ,OAAOA,EAAKj/B,KAAO,KAEtH/D,EAAK2nC,EAAU,SAAUE,EAAMyB,GAC3BD,EAAYA,EAAU5hD,OAAO6hD,EACjC,GACOD,CAEf,GACS7wE,EAAI,EAAGA,EAAI4wE,EAAchxE,SAAUI,EAAG,CAC3C,IAAI+wE,EAAcH,EAAc5wE,GAChCguE,EAASN,gBAAgBmC,cAAcF,GAA2BoB,GAAcnB,GAAqB5B,EAAU+C,GACnH,CAEJ,OAAOtS,CACX,CAnS+BuS,CAAuBhD,EAAUziC,EAAOi/B,GACnE,CACA,OAAO/L,CACX,CAYA,SAASwS,GAA+BjD,EAAU57D,EAAMiyD,GACpD,IACI1B,EAAYqL,EAASJ,kBACrBpO,EAAcwO,EAASL,eAAe7M,WAAW1uD,EAAM,SAAUwuD,EAAWkL,GAC5E,IACItM,EAAcwN,GAAgClB,EAD/BruB,GAAgBmjB,EAAWxuD,IAE9C,GAAIotD,EACA,OAAOA,CAEf,GACA,OAAO0E,GAAgCvB,EAAWvwD,EAAMotD,EAAa6E,GAT7C,EAU5B,CACA,SAAS6M,GAAuBlD,EAAUziC,GACtC,IAAIn5B,EAAOm5B,EAAMsW,MACb2d,EAAc,KAGlBwO,EAASL,eAAe1M,cAAc7uD,EAAM,SAAUm+D,EAAiBC,GACnE,IAAIrQ,EAAe1iB,GAAgB8yB,EAAiBn+D,GACpDotD,EACIA,GAAewN,GAAgCwD,EAAIrQ,EAC3D,GACA,IAAI2L,EAAYkC,EAASL,eAAe11E,IAAIma,GACvC05D,EAKDtM,EACIA,GAAewN,GAAgClB,EAAWlvB,OAL9DkvB,EAAY,IAAIH,GAChBqC,EAASL,eAAiBK,EAASL,eAAeh0D,IAAIvH,EAAM05D,IAMhE,IAAIG,EAAqC,MAAfzM,EACtB2R,EAAkBlF,EAChB,IAAIpO,GAAU2B,GAAa,GAAM,GACjC,KAGN,OAlvBJ,SAA6BgL,GACzB,OAAO1K,GAA8B0K,EAAK9D,WAC9C,CAgvBW0K,CADIpF,GAAiBF,EAAWvgC,EADrBs3B,GAAqBmL,EAASJ,kBAAmBriC,EAAMsW,OACdoqB,EAAsBkF,EAAgBlW,UAAYzJ,GAAa9H,WAAYuiB,GAE1I,CAcA,SAASkC,GAAoCH,EAAUhH,GACnD,OAAOqK,GAA8BrK,EAAWgH,EAASL,eACxC,KAAM9K,GAAqBmL,EAASJ,kBAAmBhxB,MAC5E,CAIA,SAASy0B,GAA8BrK,EAAWsK,EAAe9R,EAAayH,GAC1E,GAAIzpB,GAAYwpB,EAAU50D,MACtB,OAAOm/D,GAAyCvK,EAAWsK,EAAe9R,EAAayH,GAGvF,IAAI6E,EAAYwF,EAAcr5E,IAAI2kD,MAEf,MAAf4iB,GAAoC,MAAbsM,IACvBtM,EAAcwN,GAAgClB,EAAWlvB,OAE7D,IAAI6hB,EAAS,GACT1R,EAAYlQ,GAAamqB,EAAU50D,MACnCo/D,EAAiBxK,EAAU3J,kBAAkBtQ,GAC7C8C,EAAYyhB,EAAcjW,SAASpjE,IAAI80D,GAC3C,GAAI8C,GAAa2hB,EAAgB,CAC7B,IAAIC,EAAmBjS,EACjBA,EAAY1S,kBAAkBC,GAC9B,KACF2kB,EAAmB3L,GAAkBkB,EAAala,GACtD0R,EAASA,EAAOxvC,OAAOoiD,GAA8BG,EAAgB3hB,EAAW4hB,EAAkBC,GACtG,CAIA,OAHI5F,IACArN,EAASA,EAAOxvC,OAAO48C,GAAwBC,EAAW9E,EAAWC,EAAazH,KAE/Ef,CAEf,CAIA,SAAS8S,GAAyCvK,EAAWsK,EAAe9R,EAAayH,GACrF,IAAI6E,EAAYwF,EAAcr5E,IAAI2kD,MAEf,MAAf4iB,GAAoC,MAAbsM,IACvBtM,EAAcwN,GAAgClB,EAAWlvB,OAE7D,IAAI6hB,EAAS,GAcb,OAbA6S,EAAcjW,SAASxR,iBAAiB,SAAUkD,EAAW8C,GACzD,IAAI4hB,EAAmBjS,EACjBA,EAAY1S,kBAAkBC,GAC9B,KACF2kB,EAAmB3L,GAAkBkB,EAAala,GAClDykB,EAAiBxK,EAAU3J,kBAAkBtQ,GAC7CykB,IACA/S,EAASA,EAAOxvC,OAAOsiD,GAAyCC,EAAgB3hB,EAAW4hB,EAAkBC,IAErH,GACI5F,IACArN,EAASA,EAAOxvC,OAAO48C,GAAwBC,EAAW9E,EAAWC,EAAazH,KAE/Ef,CACX,CACA,SAASgR,GAA+BzB,EAAUxD,GAC9C,IAAIj/B,EAAQi/B,EAAKj/B,MACb6W,EAAMwtB,GAAqB5B,EAAUziC,GACzC,MAAO,CACHqX,OAAQ,WACJ,IAAI6nB,EAp0BhB,SAA4BD,GACxB,OAAOA,EAAK9D,WAAWlH,YAAYvE,SACvC,CAk0BwB0W,CAAmBnH,IAAShZ,GAAa9H,WACrD,OAAO+gB,EAAM3vB,MACjB,EACAD,WAAY,SAAUl+C,GAClB,GAAe,OAAXA,EACA,OAAIylD,EApUpB,SAA2C4rB,EAAU57D,EAAMgwC,GACvD,IAAIuuB,EAAWiB,GAAwB5D,EAAU5rB,GACjD,GAAIuuB,EAAU,CACV,IAAInmD,EAAIqnD,GAAuBlB,GAC3BmB,EAAYtnD,EAAEpY,KAAMiwC,EAAU73B,EAAE63B,QAChC8d,EAAe1iB,GAAgBq0B,EAAW1/D,GAE9C,OAAO2/D,GAA8B/D,EAAU8D,EADtC,IAAIvU,GAAeX,GAAoCva,GAAU8d,GAE9E,CAGI,MAAO,EAEf,CAwT2B6R,CAAkChE,EAAUziC,EAAMsW,MAAOO,GA7UpF,SAAqC4rB,EAAU57D,GAC3C,OAAO+7D,GAAoCH,EAAU,IAAIzQ,GA77ElD,CACHV,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,GAy7EwF3qD,GACxG,CA8U2B6/D,CAA4BjE,EAAUziC,EAAMsW,OAMvD,IAAIpkD,EA9kTpB,SAA4BtG,EAAMo0C,GAC9B,IAAImP,EAAS,gBACA,YAATvjD,EACAujD,EACI,0FAGU,sBAATvjD,EACLujD,EAAS,6DAEK,gBAATvjD,IACLujD,EAAS,8BAEb,IAAIj9C,EAAQ,IAAIhG,MAAMN,EAAO,OAASo0C,EAAMsW,MAAMnoD,WAAa,KAAOghD,GAGtE,OADAj9C,EAAMtG,KAAOA,EAAK+6E,cACXz0E,CACX,CA6jT4B00E,CAAmBx1E,EAAQ4uC,GACvC,OAAOojC,GAAgCX,EAAUziC,EAC3B,KAAM9tC,EAEpC,EAER,CAIA,SAASmyE,GAAqB5B,EAAUziC,GACpC,IAAIolC,EAAWX,GAAsBzkC,GACrC,OAAOyiC,EAASF,cAAc71E,IAAI04E,EACtC,CAIA,SAASX,GAAsBzkC,GAC3B,OAAOA,EAAMsW,MAAMnoD,WAAa,IAAM6xC,EAAM+W,gBAChD,CAIA,SAASsvB,GAAwB5D,EAAU5rB,GACvC,OAAO4rB,EAASH,cAAc51E,IAAImqD,EACtC,CAIA,SAASyvB,GAAuBlB,GAC5B,IAAIyB,EAAazB,EAASxhE,QAAQ,KAElC,OADA42B,kBAAuB,IAAhBqsC,GAAqBA,EAAazB,EAAS/wE,OAAS,EAAG,iBACvD,CACHyiD,QAASsuB,EAASnoC,OAAO4pC,EAAa,GACtChgE,KAAM,IAAIkqC,GAAKq0B,EAASnoC,OAAO,EAAG4pC,IAE1C,CAIA,SAASL,GAA8B/D,EAAU8D,EAAW9K,GACxD,IAAI8E,EAAYkC,EAASL,eAAe11E,IAAI65E,GAG5C,OAFA/rC,iBAAO+lC,EAAW,wDAEXD,GAAwBC,EAAW9E,EADxBnE,GAAqBmL,EAASJ,kBAAmBkE,GACD,KACtE,CA6BA,SAASnC,GAA2BpkC,GAChC,OAAIA,EAAMiX,aAAaE,iBAAmBnX,EAAMiX,aAAaC,YAIlD,IAhiBX1c,iBAAO2lC,GAAsB,oCACtBA,IA+hB4CngC,EAAMqhC,MAAOrhC,EAAMsW,OAG3DtW,CAEf,CA+EA,IAAI8mC,GAAuC,WACvC,SAASA,EAAsBvU,GAC3BhmE,KAAKgmE,MAAQA,CACjB,CAQA,OAPAuU,EAAsBv8E,UAAUg3D,kBAAoB,SAAUC,GAE1D,OAAO,IAAIslB,EADCv6E,KAAKgmE,MAAMhR,kBAAkBC,GAE7C,EACAslB,EAAsBv8E,UAAU2xD,KAAO,WACnC,OAAO3vD,KAAKgmE,KAChB,EACOuU,CACX,CAZ2C,GAavCC,GAAuC,WACvC,SAASA,EAAsBtE,EAAU57D,GACrCta,KAAKy6E,UAAYvE,EACjBl2E,KAAKua,MAAQD,CACjB,CAQA,OAPAkgE,EAAsBx8E,UAAUg3D,kBAAoB,SAAUC,GAC1D,IAAIrmC,EAAY22B,GAAUvlD,KAAKua,MAAO06C,GACtC,OAAO,IAAIulB,EAAsBx6E,KAAKy6E,UAAW7rD,EACrD,EACA4rD,EAAsBx8E,UAAU2xD,KAAO,WACnC,OAAOwpB,GAA+Bn5E,KAAKy6E,UAAWz6E,KAAKua,MAC/D,EACOigE,CACX,CAb2C,GA0BvCE,GAA2B,SAAUp4E,EAAOq4E,EAAaC,GACzD,OAAKt4E,GAA0B,kBAAVA,GAGrB2rC,iBAAO,QAAS3rC,EAAO,6CACK,kBAAjBA,EAAM,OACNu4E,GAA2Bv4E,EAAM,OAAQq4E,EAAaC,GAEhC,kBAAjBt4E,EAAM,OACXw4E,GAA4Bx4E,EAAM,OAAQq4E,QAGjD1sC,kBAAO,EAAO,4BAA8BvpC,KAAKC,UAAUrC,EAAO,KAAM,KAVjEA,CAYf,EACIu4E,GAA6B,SAAU7sD,EAAIqlD,EAAUuH,GACrD,GACS,cADD5sD,EAEA,OAAO4sD,EAAwB,UAE/B3sC,kBAAO,EAAO,4BAA8BjgB,EAExD,EACI8sD,GAA8B,SAAU9sD,EAAIqlD,EAAU0H,GACjD/sD,EAAG1sB,eAAe,cACnB2sC,kBAAO,EAAO,4BAA8BvpC,KAAKC,UAAUqpB,EAAI,KAAM,IAEzE,IAAI4gC,EAAQ5gC,EAAc,UACL,kBAAV4gC,GACP3gB,kBAAO,EAAO,+BAAiC2gB,GAEnD,IAAIosB,EAAe3H,EAAS1jB,OAG5B,GAFA1hB,iBAAwB,OAAjB+sC,GAAiD,qBAAjBA,EAA8B,+CAEhEA,EAAaxmB,aACd,OAAO5F,EAEX,IACI+rB,EADOK,EACY7xC,WACvB,MAA2B,kBAAhBwxC,EACA/rB,EAGJ+rB,EAAc/rB,CACzB,EAQIqsB,GAA2B,SAAU3gE,EAAMq1C,EAAMumB,EAAU0E,GAC3D,OAAOM,GAAqBvrB,EAAM,IAAI6qB,GAAsBtE,EAAU57D,GAAOsgE,EACjF,EAMIO,GAA+B,SAAUxrB,EAAM0jB,EAAUuH,GACzD,OAAOM,GAAqBvrB,EAAM,IAAI4qB,GAAsBlH,GAAWuH,EAC3E,EACA,SAASM,GAAqBvrB,EAAMgrB,EAAaC,GAC7C,IAEI1qB,EAFAkrB,EAASzrB,EAAK8E,cAAc/xC,MAC5B2xC,EAAWqmB,GAAyBU,EAAQT,EAAY3lB,kBAAkB,aAAc4lB,GAE5F,GAAIjrB,EAAK6E,aAAc,CACnB,IAAI6mB,EAAW1rB,EACXrtD,EAAQo4E,GAAyBW,EAASlyC,WAAYwxC,EAAaC,GACvE,OAAIt4E,IAAU+4E,EAASlyC,YACnBkrB,IAAagnB,EAAS5mB,cAAc/xC,MAC7B,IAAIgyC,GAASpyD,EAAOo5D,GAAarH,IAGjC1E,CAEf,CAEI,IAAI2rB,EAAe3rB,EAWnB,OAVAO,EAAUorB,EACNjnB,IAAainB,EAAa7mB,cAAc/xC,QACxCwtC,EAAUA,EAAQ4E,eAAe,IAAIJ,GAASL,KAElDinB,EAAa3lB,aAAamB,GAAgB,SAAU7B,EAAWI,GAC3D,IAAIE,EAAe2lB,GAAqB7lB,EAAWslB,EAAY3lB,kBAAkBC,GAAY2lB,GACzFrlB,IAAiBF,IACjBnF,EAAUA,EAAQoF,qBAAqBL,EAAWM,GAE1D,GACOrF,CAEf,CAuBA,IAAIqrB,GAMA,SAAc33E,EAAMwuB,EAAQu9B,QACX,IAAT/rD,IAAmBA,EAAO,SACf,IAAXwuB,IAAqBA,EAAS,WACrB,IAATu9B,IAAmBA,EAAO,CAAE4T,SAAU,CAAC,EAAGiY,WAAY,IAC1Dx7E,KAAK4D,KAAOA,EACZ5D,KAAKoyB,OAASA,EACdpyB,KAAK2vD,KAAOA,CAChB,EASJ,SAAS8rB,GAAY9X,EAAM+X,GAIvB,IAFA,IAAIphE,EAAOohE,aAAmBl3B,GAAOk3B,EAAU,IAAIl3B,GAAKk3B,GACpDzsD,EAAQ00C,EAAMxyD,EAAO4zC,GAAazqC,GACtB,OAATnJ,GAAe,CAClB,IAAIkkD,EAAYjK,kBAAQn8B,EAAM0gC,KAAK4T,SAAUpyD,IAAS,CAClDoyD,SAAU,CAAC,EACXiY,WAAY,GAEhBvsD,EAAQ,IAAIssD,GAAKpqE,EAAM8d,EAAOomC,GAE9BlkD,EAAO4zC,GADPzqC,EAAO2qC,GAAa3qC,GAExB,CACA,OAAO2U,CACX,CAMA,SAAS0sD,GAAahY,GAClB,OAAOA,EAAKhU,KAAKrtD,KACrB,CAMA,SAASs5E,GAAajY,EAAMrhE,GACxBqhE,EAAKhU,KAAKrtD,MAAQA,EAClBu5E,GAAkBlY,EACtB,CAIA,SAASmY,GAAgBnY,GACrB,OAAOA,EAAKhU,KAAK6rB,WAAa,CAClC,CAYA,SAASO,GAAiBpY,EAAMvyD,GAC5Bs+B,EAAKi0B,EAAKhU,KAAK4T,SAAU,SAAUt0C,EAAO8oC,GACtC3mD,EAAO,IAAImqE,GAAKtsD,EAAO00C,EAAM5L,GACjC,EACJ,CAUA,SAASikB,GAAsBrY,EAAMvyD,EAAQ6qE,EAAaC,GAClDD,IAAgBC,GAChB9qE,EAAOuyD,GAEXoY,GAAiBpY,EAAM,SAAU10C,GAC7B+sD,GAAsB/sD,EAAO7d,GAAQ,EAAM8qE,EAC/C,GACID,GAAeC,GACf9qE,EAAOuyD,EAEf,CAsBA,SAASwY,GAAYxY,GACjB,OAAO,IAAInf,GAAqB,OAAhBmf,EAAKvxC,OACfuxC,EAAK//D,KACLu4E,GAAYxY,EAAKvxC,QAAU,IAAMuxC,EAAK//D,KAChD,CAIA,SAASi4E,GAAkBlY,GACH,OAAhBA,EAAKvxC,QAUb,SAAyBuxC,EAAM1O,EAAWhmC,GACtC,IAAImtD,EA1ER,SAAqBzY,GACjB,YAA8BrjE,IAAvBq7E,GAAahY,KAAwBmY,GAAgBnY,EAChE,CAwEqB0Y,CAAYptD,GACzBqtD,EAActzE,mBAAS26D,EAAKhU,KAAK4T,SAAUtO,GAC3CmnB,GAAcE,UACP3Y,EAAKhU,KAAK4T,SAAStO,GAC1B0O,EAAKhU,KAAK6rB,aACVK,GAAkBlY,IAEZyY,GAAeE,IACrB3Y,EAAKhU,KAAK4T,SAAStO,GAAahmC,EAAM0gC,KACtCgU,EAAKhU,KAAK6rB,aACVK,GAAkBlY,GAE1B,CAtBQ4Y,CAAgB5Y,EAAKvxC,OAAQuxC,EAAK//D,KAAM+/D,EAEhD,CAyCA,IAAI6Y,GAAqB,iCAKrBC,GAAsB,+BAItBC,GAAiB,SACjBC,GAAa,SAAUt7E,GACvB,MAAuB,kBAARA,GAAmC,IAAfA,EAAIyG,SAAiB00E,GAAmBrtD,KAAK9tB,EACpF,EACIu7E,GAAoB,SAAU95B,GAC9B,MAA8B,kBAAfA,GACW,IAAtBA,EAAWh7C,SACV20E,GAAoBttD,KAAK2zB,EAClC,EAQI+5B,GAAkB,SAAUxoB,GAC5B,OAAqB,OAAbA,GACgB,kBAAbA,GACc,kBAAbA,IAA0B5lB,EAAoB4lB,IACrDA,GACuB,kBAAbA,GAEPrrD,mBAASqrD,EAAU,MAC/B,EAIIyoB,GAA0B,SAAUC,EAAQz6E,EAAOgY,EAAMpa,GACrDA,QAAsBI,IAAVgC,GAGhB06E,GAAqBC,sBAAYF,EAAQ,SAAUz6E,EAAOgY,EAC9D,EAII0iE,GAAuB,SAAUC,EAAaz7E,EAAM+Y,GACpD,IAAID,EAAOC,aAAiBiqC,GAAO,IAAIkC,GAAensC,EAAO0iE,GAAe1iE,EAC5E,QAAaja,IAATkB,EACA,MAAM,IAAI7B,MAAMs9E,EAAc,sBAAwBh2B,GAA4B3sC,IAEtF,GAAoB,oBAAT9Y,EACP,MAAM,IAAI7B,MAAMs9E,EACZ,uBACAh2B,GAA4B3sC,GAC5B,oBACA9Y,EAAKI,YAEb,GAAI6sC,EAAoBjtC,GACpB,MAAM,IAAI7B,MAAMs9E,EACZ,YACAz7E,EAAKI,WACL,IACAqlD,GAA4B3sC,IAGpC,GAAoB,kBAAT9Y,GACPA,EAAKsG,OAAS40E,GAAiB,GAC/B51B,uBAAatlD,GAAQk7E,GACrB,MAAM,IAAI/8E,MAAMs9E,EACZ,kCACAP,GACA,eACAz1B,GAA4B3sC,GAC5B,MACA9Y,EAAKwW,UAAU,EAAG,IAClB,SAIR,GAAIxW,GAAwB,kBAATA,EAAmB,CAClC,IAAI07E,GAAgB,EAChBC,GAAmB,EAqBvB,GApBAztC,EAAKluC,EAAM,SAAUH,EAAKiB,GACtB,GAAY,WAARjB,EACA67E,GAAgB,OAEf,GAAY,cAAR77E,GAA+B,QAARA,IAC5B87E,GAAmB,GACdR,GAAWt7E,IACZ,MAAM,IAAI1B,MAAMs9E,EACZ,6BACA57E,EACA,KACA4lD,GAA4B3sC,GAJhB2iE,yFArpPpC,SAA4Bj2B,EAAgB/3B,GAEpC+3B,EAAeJ,OAAO9+C,OAAS,IAC/Bk/C,EAAeH,aAAe,GAElCG,EAAeJ,OAAOzvC,KAAK8X,GAC3B+3B,EAAeH,aAAeC,uBAAa73B,GAC3C83B,GAAyBC,EAC7B,CAspPYo2B,CAAmB9iE,EAAMjZ,GACzB27E,GAAqBC,EAAa36E,EAAOgY,GAtpPrD,SAA2B0sC,GACvB,IAAIq2B,EAAOr2B,EAAeJ,OAAOyK,MACjCrK,EAAeH,aAAeC,uBAAau2B,GAEvCr2B,EAAeJ,OAAO9+C,OAAS,IAC/Bk/C,EAAeH,aAAe,EAEtC,CAgpPYy2B,CAAkBhjE,EACtB,GACI4iE,GAAiBC,EACjB,MAAM,IAAIx9E,MAAMs9E,EACZ,4BACAh2B,GAA4B3sC,GAC5B,mCAEZ,CACJ,EA2CIijE,GAA+B,SAAUR,EAAQv7E,EAAM8Y,EAAMpa,GAC7D,IAAIA,QAAqBI,IAATkB,EAAhB,CAGA,IAAIg8E,EAAgBP,sBAAYF,EAAQ,UACxC,IAAMv7E,GAAwB,kBAATA,GAAsBQ,MAAMC,QAAQT,GACrD,MAAM,IAAI7B,MAAM69E,EAAgB,0DAEpC,IAAIC,EAAa,GACjB/tC,EAAKluC,EAAM,SAAUH,EAAKiB,GACtB,IAAIo7E,EAAU,IAAIl5B,GAAKnjD,GAEvB,GADA27E,GAAqBQ,EAAel7E,EAAOijD,GAAUjrC,EAAMojE,IAC9B,cAAzBx4B,GAAYw4B,KACPb,GAAgBv6E,GACjB,MAAM,IAAI3C,MAAM69E,EACZ,kCACAE,EAAQ97E,WAFI47E,gGAOxBC,EAAWtmE,KAAKumE,EACpB,GA7D6B,SAAUT,EAAaQ,GACpD,IAAIv1E,EAAGw1E,EACP,IAAKx1E,EAAI,EAAGA,EAAIu1E,EAAW31E,OAAQI,IAG/B,IADA,IAAI02B,EAAOumB,GADXu4B,EAAUD,EAAWv1E,IAEZs+C,EAAI,EAAGA,EAAI5nB,EAAK92B,OAAQ0+C,IAC7B,GAAgB,cAAZ5nB,EAAK4nB,IAAsBA,IAAM5nB,EAAK92B,OAAS,QAC9C,IAAK60E,GAAW/9C,EAAK4nB,IACtB,MAAM,IAAI7mD,MAAMs9E,EACZ,4BACAr+C,EAAK4nB,GACL,aACAk3B,EAAQ97E,WAJIq7E,uFAa5BQ,EAAWnuC,KAAK0W,IAChB,IAAI23B,EAAW,KACf,IAAKz1E,EAAI,EAAGA,EAAIu1E,EAAW31E,OAAQI,IAAK,CAEpC,GADAw1E,EAAUD,EAAWv1E,GACJ,OAAby1E,GAAqBl3B,GAAak3B,EAAUD,GAC5C,MAAM,IAAI/9E,MAAMs9E,EACZ,mBACAU,EAAS/7E,WACT,qCACA87E,EAAQ97E,YAEhB+7E,EAAWD,CACf,CACJ,CA4BIE,CAA2BJ,EAAeC,EApB1C,CAqBJ,EACII,GAAmB,SAAUd,EAAQ1oB,EAAUn0D,GAC/C,IAAIA,QAAyBI,IAAb+zD,EAAhB,CAGA,GAAI5lB,EAAoB4lB,GACpB,MAAM,IAAI10D,MAAMs9E,sBAAYF,EAAQ,YAChC,MACA1oB,EAASzyD,WAFGq7E,6FAOpB,IAAKJ,GAAgBxoB,GACjB,MAAM,IAAI10D,MAAMs9E,sBAAYF,EAAQ,YAApBE,sFAVpB,CAcJ,EAkBIa,GAAc,SAAUf,EAAQgB,EAAc18E,EAAKnB,GACnD,KAAIA,QAAoBI,IAARe,KAGXs7E,GAAWt7E,GACZ,MAAM,IAAI1B,MAAMs9E,sBAAYF,EAAQgB,GAChC,yBACA18E,EAFY47E,mGAMxB,EACIe,GAAqB,SAAUjB,EAAQgB,EAAcj7B,EAAY5iD,GACjE,KAAIA,QAA2BI,IAAfwiD,KAGX85B,GAAkB95B,GACnB,MAAM,IAAInjD,MAAMs9E,sBAAYF,EAAQgB,GAChC,0BACAj7B,EAFYm6B,mFAMxB,EAQIgB,GAAuB,SAAUlB,EAAQziE,GACzC,GAA2B,UAAvByqC,GAAazqC,GACb,MAAM,IAAI3a,MAAMo9E,EAAS,4CAEjC,EACImB,GAAc,SAAUnB,EAAQoB,GAEhC,IAAIr7B,EAAaq7B,EAAU7jE,KAAK1Y,WAChC,GAAyC,kBAA5Bu8E,EAAUxqC,SAAS3vC,MACO,IAAnCm6E,EAAUxqC,SAAS3vC,KAAK8D,SACtB60E,GAAWwB,EAAUxqC,SAAStO,YACc,cAA1C84C,EAAUxqC,SAAS3vC,KAAKiiB,MAAM,KAAK,IAChB,IAAtB68B,EAAWh7C,SA9OQ,SAAUg7C,GAKlC,OAJIA,IAEAA,EAAaA,EAAWr7C,QAAQ,mBAAoB,MAEjDm1E,GAAkB95B,EAC7B,CAwOqCs7B,CAAsBt7B,GACnD,MAAM,IAAInjD,MAAMs9E,sBAAYF,EAAQ,OAApBE,uFAIxB,EAuCIoB,GACA,WACIr+E,KAAKs+E,YAAc,GAInBt+E,KAAKu+E,gBAAkB,CAC3B,EAMJ,SAASC,GAAsBC,EAAYC,GAGvC,IADA,IAAIC,EAAW,KACNz2E,EAAI,EAAGA,EAAIw2E,EAAc52E,OAAQI,IAAK,CAC3C,IAAI1G,EAAOk9E,EAAcx2E,GACrBoS,EAAO9Y,EAAKo9E,UACC,OAAbD,GAAsBr4B,GAAWhsC,EAAMqkE,EAASrkE,QAChDmkE,EAAWH,YAAYnnE,KAAKwnE,GAC5BA,EAAW,MAEE,OAAbA,IACAA,EAAW,CAAEhY,OAAQ,GAAIrsD,KAAMA,IAEnCqkE,EAAShY,OAAOxvD,KAAK3V,EACzB,CACIm9E,GACAF,EAAWH,YAAYnnE,KAAKwnE,EAEpC,CAUA,SAASE,GAA4BJ,EAAYnkE,EAAMokE,GACnDF,GAAsBC,EAAYC,GAClCI,GAA6CL,EAAY,SAAUM,GAC/D,OAAOz4B,GAAWy4B,EAAWzkE,EACjC,EACJ,CAUA,SAAS0kE,GAAoCP,EAAYQ,EAAaP,GAClEF,GAAsBC,EAAYC,GAClCI,GAA6CL,EAAY,SAAUM,GAC/D,OAAOt4B,GAAas4B,EAAWE,IAC3Bx4B,GAAaw4B,EAAaF,EAClC,EACJ,CACA,SAASD,GAA6CL,EAAYnW,GAC9DmW,EAAWF,kBAEX,IADA,IAAIW,GAAU,EACLh3E,EAAI,EAAGA,EAAIu2E,EAAWH,YAAYx2E,OAAQI,IAAK,CACpD,IAAIi3E,EAAYV,EAAWH,YAAYp2E,GACvC,GAAIi3E,EAEI7W,EADY6W,EAAU7kE,OAEtB8kE,GAAeX,EAAWH,YAAYp2E,IACtCu2E,EAAWH,YAAYp2E,GAAK,MAG5Bg3E,GAAU,CAGtB,CACIA,IACAT,EAAWH,YAAc,IAE7BG,EAAWF,iBACf,CAIA,SAASa,GAAeD,GACpB,IAAK,IAAIj3E,EAAI,EAAGA,EAAIi3E,EAAUxY,OAAO7+D,OAAQI,IAAK,CAC9C,IAAI47C,EAAYq7B,EAAUxY,OAAOz+D,GACjC,GAAkB,OAAd47C,EAAoB,CACpBq7B,EAAUxY,OAAOz+D,GAAK,KACtB,IAAIm3E,EAAUv7B,EAAUw7B,iBACpB/6C,GACA6J,EAAI,UAAY0V,EAAUliD,YAE9BmvC,EAAesuC,EACnB,CACJ,CACJ,CAkBA,IAAIE,GAAmB,iBAUnBC,GAAsB,WACtB,SAASA,EAAKrgC,EAAWsgC,EAAkB33B,EAAoB43B,GAC3D1/E,KAAKm/C,UAAYA,EACjBn/C,KAAKy/E,iBAAmBA,EACxBz/E,KAAK8nD,mBAAqBA,EAC1B9nD,KAAK0/E,kBAAoBA,EACzB1/E,KAAK2/E,gBAAkB,EACvB3/E,KAAK0kE,eAAiB,KACtB1kE,KAAK4/E,YAAc,IAAIvB,GACvBr+E,KAAK6/E,aAAe,EACpB7/E,KAAK8/E,6BAA+B,KAEpC9/E,KAAKo2C,cAAgBktB,KAErBtjE,KAAK+/E,sBAAwB,IAAIxE,GAEjCv7E,KAAKggF,sBAAwB,KAE7BhgF,KAAKqB,IAAMrB,KAAKm/C,UAAU5L,aAC9B,CAOA,OAHAisC,EAAKxhF,UAAU4D,SAAW,WACtB,OAAS5B,KAAKm/C,UAAUxM,OAAS,WAAa,WAAa3yC,KAAKm/C,UAAUn7C,IAC9E,EACOw7E,CACX,CA3B0B,GA4B1B,SAASS,GAAUC,EAAMn1E,EAAOo1E,GAE5B,GADAD,EAAKlqC,OAAS1B,GAA0B4rC,EAAK/gC,WACzC+gC,EAAKT,mBA96U0B,kBAAX7rD,QACpBA,OAAkB,WAClBA,OAAkB,UAAa,WAC/B,IAKcwsD,OAAO,6FAA+F,EAu6UpHF,EAAK1b,QAAU,IAAI/B,GAAmByd,EAAK/gC,UAAW,SAAU2D,EAAYthD,EAAM6+E,EAAS/1B,GACvFg2B,GAAiBJ,EAAMp9B,EAAYthD,EAAM6+E,EAAS/1B,EACtD,EAAG41B,EAAKp4B,mBAAoBo4B,EAAKR,mBAEjCp6E,WAAW,WAAc,OAAOi7E,GAAoBL,GAA2B,EAAO,EAAG,OAExF,CAED,GAA4B,qBAAjBC,GAAiD,OAAjBA,EAAuB,CAC9D,GAA4B,kBAAjBA,EACP,MAAM,IAAIxgF,MAAM,sEAEpB,IACIgF,oBAAUw7E,EACd,CACA,MAAOz8E,GACH,MAAM,IAAI/D,MAAM,kCAAoC+D,EACxD,CACJ,CACAw8E,EAAKF,sBAAwB,IAAIt4B,GAAqBw4B,EAAK/gC,UAAWp0C,EAAO,SAAU+3C,EAAYthD,EAAM6+E,EAAS/1B,GAC9Gg2B,GAAiBJ,EAAMp9B,EAAYthD,EAAM6+E,EAAS/1B,EACtD,EAAG,SAAUk2B,GACTD,GAAoBL,EAAMM,EAC9B,EAAG,SAAUtW,IA8GrB,SAAgCgW,EAAMhW,GAClCx6B,EAAKw6B,EAAS,SAAU7oE,EAAKiB,GACzBm+E,GAAeP,EAAM7+E,EAAKiB,EAC9B,EACJ,CAjHYo+E,CAAuBR,EAAMhW,EACjC,EAAGgW,EAAKp4B,mBAAoBo4B,EAAKR,kBAAmBS,GACpDD,EAAK1b,QAAU0b,EAAKF,qBACxB,CACAE,EAAKp4B,mBAAmBxW,uBAAuB,SAAU9wC,GACrD0/E,EAAK1b,QAAQthB,iBAAiB1iD,EAClC,GACA0/E,EAAKR,kBAAkBpuC,uBAAuB,SAAUlwC,GACpD8+E,EAAK1b,QAAQrhB,qBAAqB/hD,EAAOZ,MAC7C,GAGA0/E,EAAKS,eAxiUT,SAAyChtC,EAAUitC,GAC/C,IAAIrsC,EAAaZ,EAAS/xC,WAI1B,OAHKyyC,GAAUE,KACXF,GAAUE,GAAcqsC,KAErBvsC,GAAUE,EACrB,CAkiU0BssC,CAAgCX,EAAK/gC,UAAW,WAAc,OAAO,IAAImlB,GAAc4b,EAAKlqC,OAAQkqC,EAAK1b,QAAU,GAEzI0b,EAAKY,UAAY,IAAI7d,GACrBid,EAAKa,cAAgB,IAAIpL,GAAS,CAC9BiC,eAAgB,SAAUnkC,EAAO6W,EAAKD,EAAetH,GACjD,IAAIi+B,EAAa,GACbrxB,EAAOuwB,EAAKY,UAAU3d,QAAQ1vB,EAAMsW,OASxC,OANK4F,EAAKhB,YACNqyB,EAAapK,GAA6BsJ,EAAKa,cAAettC,EAAMsW,MAAO4F,GAC3ErqD,WAAW,WACPy9C,EAAW,KACf,EAAG,IAEAi+B,CACX,EACAjJ,cAAe,WAAc,IAEjC0I,GAAeP,EAAM,aAAa,GAClCA,EAAKe,gBAAkB,IAAItL,GAAS,CAChCiC,eAAgB,SAAUnkC,EAAO6W,EAAKD,EAAetH,GAMjD,OALAm9B,EAAK1b,QAAQpa,OAAO3W,EAAO4W,EAAeC,EAAK,SAAUzlD,EAAQrD,GAC7D,IAAImlE,EAAS5jB,EAAWl+C,EAAQrD,GAChCw9E,GAAoCkB,EAAKN,YAAansC,EAAMsW,MAAO4c,EACvE,GAEO,EACX,EACAoR,cAAe,SAAUtkC,EAAO6W,GAC5B41B,EAAK1b,QAAQpY,SAAS3Y,EAAO6W,EACjC,GAER,CAIA,SAAS42B,GAAehB,GACpB,IACIiB,EADajB,EAAKY,UAAU3d,QAAQ,IAAI3e,GAAK,2BACzB9hC,OAAS,EACjC,OAAO,IAAI5gB,MAAOkrD,UAAYm0B,CAClC,CAIA,SAASC,GAAyBlB,GAC9B,OAj0BAhxB,GAD+BA,EAk0BL,CACtBhlB,UAAWg3C,GAAehB,MAl0BX,CAAC,GACF,UAAIhxB,EAAkB,YAAK,IAAIptD,MAAOkrD,UACjDkC,EAHc,IAAUA,CAq0BnC,CAIA,SAASoxB,GAAiBJ,EAAMp9B,EAAYthD,EAAM6+E,EAAS/1B,GAEvD41B,EAAKP,kBACL,IAAIrlE,EAAO,IAAIkqC,GAAK1B,GACpBthD,EAAO0+E,EAAKJ,6BACNI,EAAKJ,6BAA6Bh9B,EAAYthD,GAC9CA,EACN,IAAImlE,EAAS,GACb,GAAIrc,EACA,GAAI+1B,EAAS,CACT,IAAIgB,EAAiBn/E,cAAIV,EAAM,SAAU8/E,GAAO,OAAO5lB,GAAa4lB,EAAM,GAC1E3a,EA/uCZ,SAAuCuP,EAAU57D,EAAMm1D,EAAiBnlB,GACpE,IAAIuuB,EAAWiB,GAAwB5D,EAAU5rB,GACjD,GAAIuuB,EAAU,CACV,IAAInmD,EAAIqnD,GAAuBlB,GAC3BmB,EAAYtnD,EAAEpY,KAAMiwC,EAAU73B,EAAE63B,QAChC8d,EAAe1iB,GAAgBq0B,EAAW1/D,GAC1Ck8D,EAAatO,GAAcC,WAAWsH,GAE1C,OAAOwK,GAA8B/D,EAAU8D,EADtC,IAAInU,GAAMf,GAAoCva,GAAU8d,EAAcmO,GAEnF,CAGI,MAAO,EAEf,CAiuCqB+K,CAA8BrB,EAAKe,gBAAiB3mE,EAAM+mE,EAAgB/2B,EACvF,KACK,CACD,IAAIk3B,EAAa9lB,GAAal6D,GAC9BmlE,EAtwCZ,SAA2CuP,EAAU57D,EAAM+hD,EAAM/R,GAC7D,IAAIuuB,EAAWiB,GAAwB5D,EAAU5rB,GACjD,GAAgB,MAAZuuB,EAAkB,CAClB,IAAInmD,EAAIqnD,GAAuBlB,GAC3BmB,EAAYtnD,EAAEpY,KAAMiwC,EAAU73B,EAAE63B,QAChC8d,EAAe1iB,GAAgBq0B,EAAW1/D,GAE9C,OAAO2/D,GAA8B/D,EAAU8D,EADtC,IAAIrU,GAAUb,GAAoCva,GAAU8d,EAAchM,GAEvF,CAGI,MAAO,EAEf,CAyvCqBolB,CAAkCvB,EAAKe,gBAAiB3mE,EAAMknE,EAAYl3B,EACvF,MAEC,GAAI+1B,EAAS,CACd,IAAI5Q,EAAkBvtE,cAAIV,EAAM,SAAU8/E,GAAO,OAAO5lB,GAAa4lB,EAAM,GAC3E3a,EA73CR,SAAkCuP,EAAU57D,EAAMm1D,GAC9C,IAAI+G,EAAatO,GAAcC,WAAWsH,GAC1C,OAAO4G,GAAoCH,EAAU,IAAIrQ,GAr7ElD,CACHd,UAAU,EACVC,YAAY,EACZza,QAAS,KACT0a,QAAQ,GAi7E+E3qD,EAAMk8D,GACrG,CA03CiBkL,CAAyBxB,EAAKe,gBAAiB3mE,EAAMm1D,EAClE,KACK,CACD,IAAIpT,EAAOX,GAAal6D,GACxBmlE,EAASiQ,GAA6BsJ,EAAKe,gBAAiB3mE,EAAM+hD,EACtE,CACA,IAAI0B,EAAezjD,EACfqsD,EAAO7+D,OAAS,IAGhBi2D,EAAe4jB,GAAsBzB,EAAM5lE,IAE/C0kE,GAAoCkB,EAAKN,YAAa7hB,EAAc4I,EACxE,CAKA,SAAS4Z,GAAoBL,EAAMM,GAC/BC,GAAeP,EAAM,YAAaM,IACZ,IAAlBA,GAsHR,SAAmCN,GAC/B0B,GAAQ1B,EAAM,sBACd,IAAItF,EAAewG,GAAyBlB,GACxC2B,EAA2Bve,KAC/BM,GAA8Bsc,EAAK9pC,cAAe0O,KAAgB,SAAUxqC,EAAMq1C,GAC9E,IAAImyB,EAAW7G,GAAyB3gE,EAAMq1C,EAAMuwB,EAAKe,gBAAiBrG,GAC1EpX,GAA2Bqe,EAA0BvnE,EAAMwnE,EAC/D,GACA,IAAInb,EAAS,GACb/C,GAA8Bie,EAA0B/8B,KAAgB,SAAUxqC,EAAM+hD,GACpFsK,EAASA,EAAOxvC,OAAOy/C,GAA6BsJ,EAAKe,gBAAiB3mE,EAAM+hD,IAChF,IAAI0B,EAAegkB,GAAsB7B,EAAM5lE,GAC/CqnE,GAAsBzB,EAAMniB,EAChC,GACAmiB,EAAK9pC,cAAgBktB,KACrB0b,GAAoCkB,EAAKN,YAAa96B,KAAgB6hB,EAC1E,CArIQqb,CAA0B9B,EAElC,CAMA,SAASO,GAAeP,EAAMp9B,EAAYxgD,GACtC,IAAIgY,EAAO,IAAIkqC,GAAK,UAAY1B,GAC5BoN,EAAUwL,GAAap5D,GAC3B49E,EAAKY,UAAU1d,eAAe9oD,EAAM41C,GACpC,IAAIyW,EAASiQ,GAA6BsJ,EAAKa,cAAezmE,EAAM41C,GACpE8uB,GAAoCkB,EAAKN,YAAatlE,EAAMqsD,EAChE,CACA,SAASsb,GAAmB/B,GACxB,OAAOA,EAAKL,cAChB,CAgCA,SAASqC,GAAoBhC,EAAM5lE,EAAM6nE,EAAQpoB,EAAahX,GAC1D6+B,GAAQ1B,EAAM,MAAO,CACjB5lE,KAAMA,EAAK1Y,WACXU,MAAO6/E,EACP9tB,SAAU0F,IAId,IAAI6gB,EAAewG,GAAyBlB,GACxCkC,EAAoB1mB,GAAaymB,EAAQpoB,GACzCsZ,EAAW8F,GAA+B+G,EAAKe,gBAAiB3mE,GAChE41C,EAAUirB,GAA6BiH,EAAmB/O,EAAUuH,GACpE1P,EAAU+W,GAAmB/B,GAC7BvZ,EAASsP,GAA2BiK,EAAKe,gBAAiB3mE,EAAM41C,EAASgb,GAAS,GACtFsT,GAAsB0B,EAAKN,YAAajZ,GACxCuZ,EAAK1b,QAAQ55D,IAAI0P,EAAK1Y,WAAYwgF,EAAkB1/D,KAAgB,GAAO,SAAU7d,EAAQ8nD,GACzF,IAAI/sC,EAAqB,OAAX/a,EACT+a,GACD5S,EAAK,UAAYsN,EAAO,YAAczV,GAE1C,IAAIw9E,EAAc5L,GAAqByJ,EAAKe,gBAAiB/V,GAAUtrD,GACvEo/D,GAAoCkB,EAAKN,YAAatlE,EAAM+nE,GAC5DC,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,GACA,IAAIoR,EAAegkB,GAAsB7B,EAAM5lE,GAC/CqnE,GAAsBzB,EAAMniB,GAE5BihB,GAAoCkB,EAAKN,YAAa7hB,EAAc,GACxE,CAyDA,SAASwkB,GAAuBrC,EAAM5lE,EAAMyoC,GACxCm9B,EAAK1b,QAAQlhB,mBAAmBhpC,EAAK1Y,WAAY,SAAUiD,EAAQ8nD,GAChD,OAAX9nD,GACA6+D,GAAyBwc,EAAK9pC,cAAe97B,GAEjDgoE,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,EACJ,CACA,SAAS61B,GAAoBtC,EAAM5lE,EAAMhY,EAAOygD,GAC5C,IAAImN,EAAUwL,GAAap5D,GAC3B49E,EAAK1b,QAAQphB,gBAAgB9oC,EAAK1Y,WAAYsuD,EAAQxtC,KAAgB,GAAO,SAAU7d,EAAQ8nD,GAC5E,OAAX9nD,GACA2+D,GAA2B0c,EAAK9pC,cAAe97B,EAAM41C,GAEzDoyB,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,EACJ,CAoCA,SAAS81B,GAAgCvC,EAAMzsC,EAAOq/B,GAGlD,IAAInM,EAEAA,EAD8B,UAA9B5hB,GAAatR,EAAMsW,OACV8sB,GAAgCqJ,EAAKa,cAAettC,EAAOq/B,GAG3D+D,GAAgCqJ,EAAKe,gBAAiBxtC,EAAOq/B,GAE1E+L,GAA4BqB,EAAKN,YAAansC,EAAMsW,MAAO4c,EAC/D,CACA,SAAS+b,GAAcxC,GACfA,EAAKF,uBACLE,EAAKF,sBAAsBtxB,UAAU6wB,GAE7C,CAqCA,SAASqC,GAAQ1B,GAEb,IADA,IAAIzyC,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCD,EAAQC,EAAK,GAAKC,UAAUD,GAEhC,IAAI/L,EAAS,GACTu+C,EAAKF,wBACLr+C,EAASu+C,EAAKF,sBAAsBhzC,GAAK,KAE7CoB,EAAI5uB,WAAM,EAAQ8uB,wBAAc,CAAC3M,GAAS4M,iBAAOd,IACrD,CACA,SAAS60C,GAA2BpC,EAAM3xE,EAAU1J,EAAQ8nD,GACpDp+C,GACAwiC,EAAe,WACX,GAAe,OAAXlsC,EACA0J,EAAS,UAER,CACD,IAAIlP,GAAQwF,GAAU,SAASu1E,cAC3B96E,EAAUD,EACVstD,IACArtD,GAAW,KAAOqtD,GAEtB,IAAIhnD,EAAQ,IAAIhG,MAAML,GAEtBqG,EAAMtG,KAAOA,EACbkP,EAAS5I,EACb,CACJ,EAER,CA0FA,SAASg9E,GAAmBzC,EAAM5lE,EAAMsoE,GACpC,OAAQzJ,GAA+B+G,EAAKe,gBAAiB3mE,EAAMsoE,IAC/DlpB,GAAa9H,UACrB,CAUA,SAASixB,GAA0B3C,EAAMvwB,GAMrC,QALa,IAATA,IAAmBA,EAAOuwB,EAAKH,uBAE9BpwB,GACDmzB,GAAwC5C,EAAMvwB,GAE9CgsB,GAAahsB,GAAO,CACpB,IAAIx0B,EAAQ4nD,GAA0B7C,EAAMvwB,GAC5C1hB,iBAAO9S,EAAMrzB,OAAS,EAAG,yCACZqzB,EAAM6nD,MAAM,SAAU95E,GAAe,OAA8B,IAAvBA,EAAYrE,MAAwB,IAmBrG,SAAkCq7E,EAAM5lE,EAAM6gB,GAQ1C,IANA,IAAI8nD,EAAe9nD,EAAMj5B,IAAI,SAAUghF,GACnC,OAAOA,EAAIC,cACf,GACIC,EAAcT,GAAmBzC,EAAM5lE,EAAM2oE,GAC7CI,EAAaD,EACbE,EAAaF,EAAYpgC,OACpB96C,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IAAK,CACnC,IAAIg7E,EAAM/nD,EAAMjzB,GAChB+lC,iBAAsB,IAAfi1C,EAAIr+E,OAAwB,iEACnCq+E,EAAIr+E,OAAS,EACbq+E,EAAIK,aACJ,IAAIlb,EAAe1iB,GAAgBrrC,EAAM4oE,EAAI5oE,MAE7C+oE,EAAaA,EAAW7tB,YAAY6S,EAAmC6a,EAAIM,yBAC/E,CACA,IAAIC,EAAaJ,EAAW3gE,KAAI,GAC5BghE,EAAappE,EAEjB4lE,EAAK1b,QAAQ55D,IAAI84E,EAAW9hF,WAAY6hF,EAAY,SAAU5+E,GAC1D+8E,GAAQ1B,EAAM,2BAA4B,CACtC5lE,KAAMopE,EAAW9hF,WACjBiD,OAAQA,IAEZ,IAAI8hE,EAAS,GACb,GAAe,OAAX9hE,EAAiB,CAiBjB,IAbA,IAAI8+E,EAAY,GACZzuC,EAAU,SAAUhtC,GACpBizB,EAAMjzB,GAAGrD,OAAS,EAClB8hE,EAASA,EAAOxvC,OAAOs/C,GAAqByJ,EAAKe,gBAAiB9lD,EAAMjzB,GAAGi7E,iBACvEhoD,EAAMjzB,GAAG66C,YAGT4gC,EAAUxsE,KAAK,WACX,OAAOgkB,EAAMjzB,GAAG66C,WAAW,MAAM,EAAM5nB,EAAMjzB,GAAG07E,8BACpD,GAEJzoD,EAAMjzB,GAAG27E,WACb,EACS37E,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IAC9BgtC,EAAQhtC,GAGZ46E,GAAwC5C,EAAMzE,GAAYyE,EAAKH,sBAAuBzlE,IAEtFuoE,GAA0B3C,EAAMA,EAAKH,uBACrCf,GAAoCkB,EAAKN,YAAatlE,EAAMqsD,GAE5D,IAASz+D,EAAI,EAAGA,EAAIy7E,EAAU77E,OAAQI,IAClC6oC,EAAe4yC,EAAUz7E,GAEjC,KACK,CAED,GAAe,cAAXrD,EACA,IAASqD,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IACN,IAApBizB,EAAMjzB,GAAGrD,OACTs2B,EAAMjzB,GAAGrD,OAAS,EAGlBs2B,EAAMjzB,GAAGrD,OAAS,MAIzB,CACDmI,EAAK,kBAAoB02E,EAAW9hF,WAAa,YAAciD,GAC/D,IAASqD,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IAC9BizB,EAAMjzB,GAAGrD,OAAS,EAClBs2B,EAAMjzB,GAAG47E,YAAcj/E,CAE/B,CACA88E,GAAsBzB,EAAM5lE,EAChC,CACJ,EAAGgpE,EACP,CA9FYS,CAAyB7D,EAAM/D,GAAYxsB,GAAOx0B,EAE1D,MACS2gD,GAAgBnsB,IACrBosB,GAAiBpsB,EAAM,SAAU0F,GAC7BwtB,GAA0B3C,EAAM7qB,EACpC,EAER,CAkGA,SAASssB,GAAsBzB,EAAMjB,GACjC,IAAI+E,EAA0BC,GAA+B/D,EAAMjB,GAC/D3kE,EAAO6hE,GAAY6H,GAGvB,OASJ,SAAmC9D,EAAM/kD,EAAO7gB,GAC5C,GAAqB,IAAjB6gB,EAAMrzB,OACN,OAwFJ,IAnFA,IAAI67E,EAAY,GACZhd,EAAS,GAKTsc,EAHc9nD,EAAMrM,OAAO,SAAUk7B,GACrC,OAAoB,IAAbA,EAAEnlD,MACb,GAC+B3C,IAAI,SAAU8nD,GACzC,OAAOA,EAAEm5B,cACb,GACI9tC,EAAU,SAAUntC,GACpB,IAE8B47E,EAsDfD,EAxDX36E,EAAciyB,EAAMjzB,GACpBmgE,EAAe1iB,GAAgBrrC,EAAMpR,EAAYoR,MACjD4pE,GAAmB,EAEvB,GADAj2C,iBAAwB,OAAjBo6B,EAAuB,iEACH,IAAvBn/D,EAAYrE,OACZq/E,GAAmB,EACnBJ,EAAc56E,EAAY46E,YAC1Bnd,EAASA,EAAOxvC,OAAOs/C,GAAqByJ,EAAKe,gBAAiB/3E,EAAYi6E,gBAAgB,SAE7F,GAA2B,IAAvBj6E,EAAYrE,OACjB,GAAIqE,EAAYq6E,YAxrBE,GAyrBdW,GAAmB,EACnBJ,EAAc,WACdnd,EAASA,EAAOxvC,OAAOs/C,GAAqByJ,EAAKe,gBAAiB/3E,EAAYi6E,gBAAgB,QAE7F,CAED,IAAIgB,EAAcxB,GAAmBzC,EAAMh3E,EAAYoR,KAAM2oE,GAC7D/5E,EAAYk7E,qBAAuBD,EACnC,IAAIhO,EAAUh7C,EAAMjzB,GAAG0L,OAAOuwE,EAAYzhE,OAC1C,QAAgBpiB,IAAZ61E,EAAuB,CACvB6G,GAAqB,qCAAsC7G,EAASjtE,EAAYoR,MAChF,IAAI+pE,EAAc3oB,GAAaya,GACc,kBAAZA,GAClB,MAAXA,GACAntE,mBAASmtE,EAAS,eAGlBkO,EAAcA,EAAYvvB,eAAeqvB,EAAY1vB,gBAEzD,IAAI6vB,EAAap7E,EAAYi6E,eACzBvI,EAAewG,GAAyBlB,GACxCqE,EAAkBpJ,GAA6BkJ,EAAaF,EAAavJ,GAC7E1xE,EAAYs6E,yBAA2Ba,EACvCn7E,EAAY06E,8BAAgCW,EAC5Cr7E,EAAYi6E,eAAiBlB,GAAmB/B,GAEhD+C,EAAan2D,OAAOm2D,EAAa5rE,QAAQitE,GAAa,GAEtD3d,GADAA,EAASA,EAAOxvC,OAAO8+C,GAA2BiK,EAAKe,gBAAiB/3E,EAAYoR,KAAMiqE,EAAiBr7E,EAAYi6E,eAAgBj6E,EAAYs7E,gBACnIrtD,OAAOs/C,GAAqByJ,EAAKe,gBAAiBqD,GAAY,GAClF,MAEIJ,GAAmB,EACnBJ,EAAc,SACdnd,EAASA,EAAOxvC,OAAOs/C,GAAqByJ,EAAKe,gBAAiB/3E,EAAYi6E,gBAAgB,GAEtG,CAEJnE,GAAoCkB,EAAKN,YAAatlE,EAAMqsD,GAC5DA,EAAS,GACLud,IAEA/oD,EAAMjzB,GAAGrD,OAAS,EAIPg/E,EAER1oD,EAAMjzB,GAAG27E,UADRv+E,WAAWu+E,EAAWtvE,KAAKC,MAAM,IAEjC2mB,EAAMjzB,GAAG66C,aACW,WAAhB+gC,EACAH,EAAUxsE,KAAK,WACX,OAAOgkB,EAAMjzB,GAAG66C,WAAW,MAAM,EAAO5nB,EAAMjzB,GAAGk8E,qBACrD,GAGAT,EAAUxsE,KAAK,WACX,OAAOgkB,EAAMjzB,GAAG66C,WAAW,IAAIpjD,MAAMmkF,IAAc,EAAO,KAC9D,IAIhB,EACS57E,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IAC9BmtC,EAAQntC,GAGZ46E,GAAwC5C,EAAMA,EAAKH,uBAEnD,IAAS73E,EAAI,EAAGA,EAAIy7E,EAAU77E,OAAQI,IAClC6oC,EAAe4yC,EAAUz7E,IAG7B26E,GAA0B3C,EAAMA,EAAKH,sBACzC,CA/GI0E,CAA0BvE,EADd6C,GAA0B7C,EAAM8D,GACL1pE,GAChCA,CACX,CAsHA,SAAS2pE,GAA+B/D,EAAM5lE,GAC1C,IAAIm7C,EAGAivB,EAAkBxE,EAAKH,sBAE3B,IADAtqB,EAAQ1Q,GAAazqC,GACJ,OAAVm7C,QAAoDn1D,IAAlCq7E,GAAa+I,IAClCA,EAAkBjJ,GAAYiJ,EAAiBjvB,GAE/CA,EAAQ1Q,GADRzqC,EAAO2qC,GAAa3qC,IAGxB,OAAOoqE,CACX,CAQA,SAAS3B,GAA0B7C,EAAMwE,GAErC,IAAIC,EAAmB,GAIvB,OAHAC,GAAsC1E,EAAMwE,EAAiBC,GAE7DA,EAAiBr1C,KAAK,SAAUR,EAAG73B,GAAK,OAAO63B,EAAE+1C,MAAQ5tE,EAAE4tE,KAAO,GAC3DF,CACX,CACA,SAASC,GAAsC1E,EAAMvwB,EAAMx0B,GACvD,IAAI2pD,EAAYnJ,GAAahsB,GAC7B,GAAIm1B,EACA,IAAK,IAAI58E,EAAI,EAAGA,EAAI48E,EAAUh9E,OAAQI,IAClCizB,EAAMhkB,KAAK2tE,EAAU58E,IAG7B6zE,GAAiBpsB,EAAM,SAAU1gC,GAC7B21D,GAAsC1E,EAAMjxD,EAAOkM,EACvD,EACJ,CAIA,SAAS2nD,GAAwC5C,EAAMvwB,GACnD,IAAIx0B,EAAQwgD,GAAahsB,GACzB,GAAIx0B,EAAO,CAEP,IADA,IAAI4pD,EAAK,EACA50E,EAAO,EAAGA,EAAOgrB,EAAMrzB,OAAQqI,IACT,IAAvBgrB,EAAMhrB,GAAMtL,SACZs2B,EAAM4pD,GAAM5pD,EAAMhrB,GAClB40E,KAGR5pD,EAAMrzB,OAASi9E,EACfnJ,GAAajsB,EAAMx0B,EAAMrzB,OAAS,EAAIqzB,OAAQ76B,EAClD,CACAy7E,GAAiBpsB,EAAM,SAAU0F,GAC7BytB,GAAwC5C,EAAM7qB,EAClD,EACJ,CAQA,SAAS0sB,GAAsB7B,EAAM5lE,GACjC,IAAIyjD,EAAeoe,GAAY8H,GAA+B/D,EAAM5lE,IAChEoqE,EAAkBjJ,GAAYyE,EAAKH,sBAAuBzlE,GAQ9D,OAh0CJ,SAA6BqpD,EAAMvyD,EAAQ6qE,GAEvC,IADA,IAAItsB,EAAOssB,EAActY,EAAOA,EAAKvxC,OACrB,OAATu9B,GAAe,CAClB,GAAIv+C,EAAOu+C,GACP,OAAO,EAEXA,EAAOA,EAAKv9B,MAChB,CAEJ,CAgzCI4yD,CAAoBN,EAAiB,SAAU/0B,GAC3Cs1B,GAA4B/E,EAAMvwB,EACtC,GACAs1B,GAA4B/E,EAAMwE,GAClC1I,GAAsB0I,EAAiB,SAAU/0B,GAC7Cs1B,GAA4B/E,EAAMvwB,EACtC,GACOoO,CACX,CAMA,SAASknB,GAA4B/E,EAAMvwB,GACvC,IAAIx0B,EAAQwgD,GAAahsB,GACzB,GAAIx0B,EAAO,CASP,IALA,IAAIwoD,EAAY,GAGZhd,EAAS,GACTue,GAAY,EACPh9E,EAAI,EAAGA,EAAIizB,EAAMrzB,OAAQI,IACN,IAApBizB,EAAMjzB,GAAGrD,SACgB,IAApBs2B,EAAMjzB,GAAGrD,QACdopC,iBAAOi3C,IAAah9E,EAAI,EAAG,mDAC3Bg9E,EAAWh9E,EAEXizB,EAAMjzB,GAAGrD,OAAS,EAClBs2B,EAAMjzB,GAAG47E,YAAc,QAGvB71C,iBAA2B,IAApB9S,EAAMjzB,GAAGrD,OAAwB,0CAExCs2B,EAAMjzB,GAAG27E,YACTld,EAASA,EAAOxvC,OAAOs/C,GAAqByJ,EAAKe,gBAAiB9lD,EAAMjzB,GAAGi7E,gBAAgB,IACvFhoD,EAAMjzB,GAAG66C,YACT4gC,EAAUxsE,KAAKgkB,EAAMjzB,GAAG66C,WAAW71B,KAAK,KAAM,IAAIvtB,MAAM,QAAQ,EAAO,UAIjE,IAAdulF,EAEAtJ,GAAajsB,OAAMrvD,GAInB66B,EAAMrzB,OAASo9E,EAAW,EAG9BlG,GAAoCkB,EAAKN,YAAazD,GAAYxsB,GAAOgX,GACzE,IAASz+D,EAAI,EAAGA,EAAIy7E,EAAU77E,OAAQI,IAClC6oC,EAAe4yC,EAAUz7E,GAEjC,CACJ,CAkEA,IAAIi9E,GAAgB,SAAUztE,EAASm7B,GACnC,IAAIsrC,EAAYiH,GAAiB1tE,GAAU2tB,EAAY84C,EAAU94C,UACxC,iBAArB84C,EAAUzkC,QACVlL,EAAM2vC,EAAUn6E,KAAVm6E,8EAKJ94C,GAA2B,cAAdA,GACM,cAArB84C,EAAUzkC,QACVlL,EAAM,gFAEL2vC,EAAUxrC,QAnrXO,qBAAX/e,QACPA,OAAOriB,UACPqiB,OAAOriB,SAASiiC,WACgC,IAAhD5f,OAAOriB,SAASiiC,SAASn8B,QAAQ,WACjCrK,EAAK,6FAkrXT,IAAI4lC,EAAqC,OAArBurC,EAAUkH,QAAwC,QAArBlH,EAAUkH,OAC3D,MAAO,CACH1xC,SAAU,IAAIjB,EAASyrC,EAAUn6E,KAAMm6E,EAAUxrC,OAAQtN,EAAWwN,EAAWD,EAC3D,GACevN,IAAc84C,EAAUmH,WAC3DhrE,KAAM,IAAIkqC,GAAK25B,EAAUr7B,YAEjC,EACIsiC,GAAmB,SAAU1tE,GAE7B,IAAI1T,EAAO,GAAI01C,EAAS,GAAI4rC,EAAY,GAAIxiC,EAAa,GAAIzd,EAAY,GAErEsN,GAAS,EAAM0yC,EAAS,QAASphF,EAAO,IAE5C,GAAuB,kBAAZyT,EAAsB,CAE7B,IAAI6tE,EAAW7tE,EAAQL,QAAQ,MAC3BkuE,GAAY,IACZF,EAAS3tE,EAAQM,UAAU,EAAGutE,EAAW,GACzC7tE,EAAUA,EAAQM,UAAUutE,EAAW,IAG3C,IAAIC,EAAW9tE,EAAQL,QAAQ,MACb,IAAdmuE,IACAA,EAAW9tE,EAAQ5P,QAEvB,IAAI29E,EAAkB/tE,EAAQL,QAAQ,MACb,IAArBouE,IACAA,EAAkB/tE,EAAQ5P,QAE9B9D,EAAO0T,EAAQM,UAAU,EAAGzD,KAAKyT,IAAIw9D,EAAUC,IAC3CD,EAAWC,IAEX3iC,EAhGZ,SAAoBA,GAGhB,IAFA,IAAI4iC,EAAoB,GACpBpgC,EAASxC,EAAW78B,MAAM,KACrB/d,EAAI,EAAGA,EAAIo9C,EAAOx9C,OAAQI,IAC/B,GAAIo9C,EAAOp9C,GAAGJ,OAAS,EAAG,CACtB,IAAI69E,EAAQrgC,EAAOp9C,GACnB,IACIy9E,EAAQ7uE,mBAAmB6uE,EAAMl+E,QAAQ,MAAO,KACpD,CACA,MAAO/D,GAAK,CACZgiF,GAAqB,IAAMC,CAC/B,CAEJ,OAAOD,CACX,CAkFyBE,CAAWluE,EAAQM,UAAUwtE,EAAUC,KAExD,IAAIzjB,EAhFZ,SAAqB6jB,GACjB,IAAI1nC,EAAK5M,EACLu0C,EAAU,CAAC,EACe,MAA1BD,EAAYnqE,OAAO,KACnBmqE,EAAcA,EAAY7tE,UAAU,IAExC,IACI,IAAK,IAAIwmC,EAAKC,mBAASonC,EAAY5/D,MAAM,MAAO04B,EAAKH,EAAGrtC,QAASwtC,EAAGC,KAAMD,EAAKH,EAAGrtC,OAAQ,CACtF,IAAI40E,EAAUpnC,EAAGr8C,MACjB,GAAuB,IAAnByjF,EAAQj+E,OAAZ,CAGA,IAAIk+E,EAAKD,EAAQ9/D,MAAM,KACL,IAAd+/D,EAAGl+E,OACHg+E,EAAQhvE,mBAAmBkvE,EAAG,KAAOlvE,mBAAmBkvE,EAAG,IAG3Dh5E,EAAK,0BAA4B+4E,EAAU,eAAiBF,EAAc,IAN9E,CAQJ,CACJ,CACA,MAAO/mC,GAASX,EAAM,CAAEx4C,MAAOm5C,EAAS,CAAC,QAErC,IACQH,IAAOA,EAAGC,OAASrN,EAAKiN,EAAGO,SAASxN,EAAG1vC,KAAK28C,EACpD,CAAC,QACS,GAAIL,EAAK,MAAMA,EAAIx4C,KAAO,CACxC,CACA,OAAOmgF,CACX,CAmD0BG,CAAYvuE,EAAQM,UAAUzD,KAAKyT,IAAItQ,EAAQ5P,OAAQ29E,MAEzEF,EAAWvhF,EAAKqT,QAAQ,OACR,GACZs7B,EAAoB,UAAX0yC,GAAiC,QAAXA,EAC/BphF,EAAOwsC,SAASzsC,EAAKgU,UAAUutE,EAAW,GAAI,KAG9CA,EAAWvhF,EAAK8D,OAEpB,IAAIo+E,EAAkBliF,EAAK2X,MAAM,EAAG4pE,GACpC,GAAsC,cAAlCW,EAAgBr/C,cAChB6S,EAAS,iBAER,GAAIwsC,EAAgBjgE,MAAM,KAAKne,QAAU,EAC1C4xC,EAASwsC,MAER,CAED,IAAIC,EAASniF,EAAKqT,QAAQ,KAC1BiuE,EAAYthF,EAAKgU,UAAU,EAAGmuE,GAAQt/C,cACtC6S,EAAS11C,EAAKgU,UAAUmuE,EAAS,GAEjC9gD,EAAYigD,CAChB,CAEI,OAAQtjB,IACR38B,EAAY28B,EAAgB,GAEpC,CACA,MAAO,CACHh+D,KAAMA,EACNC,KAAMA,EACNy1C,OAAQA,EACR4rC,UAAWA,EACX3yC,OAAQA,EACR0yC,OAAQA,EACRviC,WAAYA,EACZzd,UAAWA,EAEnB,EAqBI+gD,GAA2B,WAO3B,SAASA,EAAUpyE,EAAW8+D,EAAmB3lD,EAAUk6C,GACvDrnE,KAAKgU,UAAYA,EACjBhU,KAAK8yE,kBAAoBA,EACzB9yE,KAAKmtB,SAAWA,EAChBntB,KAAKqnE,SAAWA,CACpB,CAuBA,OAtBA+e,EAAUpoF,UAAU4gF,QAAU,WAC1B,IAAIt2D,EAAMtoB,KAAKmtB,SAAS7E,IACxB,MAAuB,UAAnBtoB,KAAKgU,UACEsU,EAAIyhC,MAGJzhC,EAAI8J,OAAO23B,KAE1B,EACAq8B,EAAUpoF,UAAUiW,aAAe,WAC/B,OAAOjU,KAAKgU,SAChB,EACAoyE,EAAUpoF,UAAUshF,eAAiB,WACjC,OAAOt/E,KAAK8yE,kBAAkBwM,eAAet/E,KACjD,EACAomF,EAAUpoF,UAAU4D,SAAW,WAC3B,OAAQ5B,KAAK4+E,UAAUh9E,WACnB,IACA5B,KAAKgU,UACL,IACArP,oBAAU3E,KAAKmtB,SAASk5D,YAChC,EACOD,CACX,CApC+B,GAqC3BE,GAA6B,WAC7B,SAASA,EAAYxT,EAAmBntE,EAAO2U,GAC3Cta,KAAK8yE,kBAAoBA,EACzB9yE,KAAK2F,MAAQA,EACb3F,KAAKsa,KAAOA,CAChB,CAaA,OAZAgsE,EAAYtoF,UAAU4gF,QAAU,WAC5B,OAAO5+E,KAAKsa,IAChB,EACAgsE,EAAYtoF,UAAUiW,aAAe,WACjC,MAAO,QACX,EACAqyE,EAAYtoF,UAAUshF,eAAiB,WACnC,OAAOt/E,KAAK8yE,kBAAkBwM,eAAet/E,KACjD,EACAsmF,EAAYtoF,UAAU4D,SAAW,WAC7B,OAAO5B,KAAKsa,KAAK1Y,WAAa,SAClC,EACO0kF,CACX,CAnBiC,GA2C7BC,GAAiC,WACjC,SAASA,EAAgBC,EAAkBC,GACvCzmF,KAAKwmF,iBAAmBA,EACxBxmF,KAAKymF,eAAiBA,CAC1B,CAsBA,OArBAF,EAAgBvoF,UAAU0oF,QAAU,SAAUC,EAAiBC,GAC3D5mF,KAAKwmF,iBAAiB3kF,KAAK,KAAM8kF,EAAiBC,EACtD,EACAL,EAAgBvoF,UAAU6oF,SAAW,SAAUlhF,GAE3C,OADAsoC,iBAAOjuC,KAAK8mF,kBAAmB,gEACxB9mF,KAAKymF,eAAe5kF,KAAK,KAAM8D,EAC1C,EACAnG,OAAO+kB,eAAegiE,EAAgBvoF,UAAW,oBAAqB,CAClEmC,IAAK,WACD,QAASH,KAAKymF,cAClB,EACApzC,YAAY,EACZC,cAAc,IAElBizC,EAAgBvoF,UAAU2Z,QAAU,SAAU4uC,GAC1C,OAAQvmD,KAAKwmF,mBAAqBjgC,EAAMigC,uBACIlmF,IAAvCN,KAAKwmF,iBAAiBO,cACnB/mF,KAAKwmF,iBAAiBO,eAClBxgC,EAAMigC,iBAAiBO,cAC3B/mF,KAAKwmF,iBAAiBzhF,UAAYwhD,EAAMigC,iBAAiBzhF,OACrE,EACOwhF,CACX,CA3BqC,GAiEjCS,GAAgC,WAEhC,SAASC,EAAanS,EAAO/qB,GACzB/pD,KAAK80E,MAAQA,EACb90E,KAAK+pD,MAAQA,CACjB,CA+FA,OApFAk9B,EAAajpF,UAAUoe,OAAS,WAC5B,IAAIytC,EAAW,IAAIC,WAEnB,OADAy4B,GAAuBviF,KAAK80E,MAAO90E,KAAK+pD,MAAOF,EAASq9B,aAAa,WAAc,IAC5Er9B,EAAS1kD,OACpB,EAOA8hF,EAAajpF,UAAUouC,OAAS,WAC5B6xC,GAAqB,sBAAuBj+E,KAAK+pD,OACjD,IAAIF,EAAW,IAAIC,WAEnB,OADA04B,GAAoBxiF,KAAK80E,MAAO90E,KAAK+pD,MAAO,KAAMF,EAASq9B,aAAa,WAAc,IAC/Er9B,EAAS1kD,OACpB,EAoBA8hF,EAAajpF,UAAU6jB,IAAM,SAAUvf,GACnC27E,GAAqB,mBAAoBj+E,KAAK+pD,OAC9C+yB,GAAwB,mBAAoBx6E,EAAOtC,KAAK+pD,OAAO,GAC/D,IAAIF,EAAW,IAAIC,WAEnB,OADA04B,GAAoBxiF,KAAK80E,MAAO90E,KAAK+pD,MAAOznD,EAAOunD,EAASq9B,aAAa,WAAc,IAChFr9B,EAAS1kD,OACpB,EAWA8hF,EAAajpF,UAAUmpF,gBAAkB,SAAU7kF,EAAO+xD,GACtD4pB,GAAqB,+BAAgCj+E,KAAK+pD,OAC1D+yB,GAAwB,+BAAgCx6E,EAAOtC,KAAK+pD,OAAO,GAC3E8zB,GAAiB,+BAAgCxpB,GAAU,GAC3D,IAAIxK,EAAW,IAAIC,WAEnB,OA39BR,SAAyCo2B,EAAM5lE,EAAMhY,EAAO+xD,EAAUtR,GAClE,IAAImN,EAAUwL,GAAap5D,EAAO+xD,GAClC6rB,EAAK1b,QAAQphB,gBAAgB9oC,EAAK1Y,WAAYsuD,EAAQxtC,KAAgB,GAAO,SAAU7d,EAAQ8nD,GAC5E,OAAX9nD,GACA2+D,GAA2B0c,EAAK9pC,cAAe97B,EAAM41C,GAEzDoyB,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,EACJ,CAk9BQy6B,CAAgCpnF,KAAK80E,MAAO90E,KAAK+pD,MAAOznD,EAAO+xD,EAAUxK,EAASq9B,aAAa,WAAc,IACtGr9B,EAAS1kD,OACpB,EAiBA8hF,EAAajpF,UAAU4V,OAAS,SAAUs7C,GACtC+uB,GAAqB,sBAAuBj+E,KAAK+pD,OACjDwzB,GAA6B,sBAAuBruB,EAAQlvD,KAAK+pD,OAAO,GACxE,IAAIF,EAAW,IAAIC,WAEnB,OAz+BR,SAAgCo2B,EAAM5lE,EAAM+sE,EAAiBtkC,GACzD,GAAI4L,kBAAQ04B,GAGR,OAFAj5C,EAAI,4EACJk0C,GAA2BpC,EAAMn9B,EAAY,UAAMziD,GAGvD4/E,EAAK1b,QAAQnhB,kBAAkB/oC,EAAK1Y,WAAYylF,EAAiB,SAAUxiF,EAAQ8nD,GAChE,OAAX9nD,GACA6qC,EAAK23C,EAAiB,SAAUpyB,EAAWI,GACvC,IAAIE,EAAemG,GAAarG,GAChCmO,GAA2B0c,EAAK9pC,cAAemP,GAAUjrC,EAAM26C,GAAYM,EAC/E,GAEJ+sB,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,EACJ,CAy9BQ26B,CAAuBtnF,KAAK80E,MAAO90E,KAAK+pD,MAAOmF,EAAQrF,EAASq9B,aAAa,WAAc,IACpFr9B,EAAS1kD,OACpB,EACO8hF,CACX,CArGoC,GA0HhCM,GAA2B,WAI3B,SAASA,EAAUzS,EAAO/qB,EAAOW,EAAc88B,GAC3CxnF,KAAK80E,MAAQA,EACb90E,KAAK+pD,MAAQA,EACb/pD,KAAK0qD,aAAeA,EACpB1qD,KAAKwnF,eAAiBA,CAC1B,CAuDA,OAtDAhoF,OAAO+kB,eAAegjE,EAAUvpF,UAAW,MAAO,CAC9CmC,IAAK,WACD,OAAIulD,GAAY1lD,KAAK+pD,OACV,KAGA7E,GAAYllD,KAAK+pD,MAEhC,EACA1W,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAegjE,EAAUvpF,UAAW,MAAO,CAC9CmC,IAAK,WACD,OAAO,IAAIsnF,GAAcznF,KAAK80E,MAAO90E,KAAK+pD,MAC9C,EACA1W,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAegjE,EAAUvpF,UAAW,mBAAoB,CAC3DmC,IAAK,WACD,IAAI4iB,EAAMw/C,GAA0BviE,KAAK0qD,cACrC1d,EAAKoC,EAAkBrsB,GAC3B,MAAc,OAAPiqB,EAAc,UAAYA,CACrC,EACAqG,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAegjE,EAAUvpF,UAAW,eAAgB,CAIvDmC,IAAK,WACD,OAAOoiE,GAA0BviE,KAAK0qD,aAC1C,EACArX,YAAY,EACZC,cAAc,IAElBi0C,EAAUvpF,UAAU0pF,QAAU,SAAUnhC,GAEpC,MADAA,EAAQohC,6BAAmBphC,cACJghC,GACnB,OAAO,EAEX,IAAIK,EAAW5nF,KAAK80E,QAAUvuB,EAAMuuB,MAChC+S,EAAWvhC,GAAWtmD,KAAK+pD,MAAOxD,EAAMwD,OACxC+9B,EAAsB9nF,KAAKwqD,mBAAqBjE,EAAMiE,iBAC1D,OAAOo9B,GAAYC,GAAYC,CACnC,EACAP,EAAUvpF,UAAU+pF,OAAS,WACzB,OAAO/nF,KAAK4B,UAChB,EACA2lF,EAAUvpF,UAAU4D,SAAW,WAC3B,OAAO5B,KAAK80E,MAAMlzE,WA3/S1B,SAAgC0Y,GAE5B,IADA,IAAIwoC,EAAa,GACR56C,EAAIoS,EAAKuqC,UAAW38C,EAAIoS,EAAKqqC,QAAQ78C,OAAQI,IAC1B,KAApBoS,EAAKqqC,QAAQz8C,KACb46C,GAAc,IAAMroC,mBAAmBlT,OAAO+S,EAAKqqC,QAAQz8C,MAGnE,OAAO46C,GAAc,GACzB,CAm/SuCklC,CAAuBhoF,KAAK+pD,MAC/D,EACOw9B,CACX,CAjE+B,GAqE/B,SAASU,GAA8Bx0C,EAAOspC,GAC1C,IAA6B,IAAzBtpC,EAAM+zC,eACN,MAAM,IAAI7nF,MAAMo9E,EAAS,8CAEjC,CAIA,SAASmL,GAAuB/qE,GAC5B,IAAIgrE,EAAY,KACZC,EAAU,KAOd,GANIjrE,EAAO6hD,aACPmpB,EAAYhrE,EAAOgiD,sBAEnBhiD,EAAOiiD,WACPgpB,EAAUjrE,EAAOoiD,oBAEjBpiD,EAAOmuC,aAAeuF,GAAW,CACjC,IAAIw3B,EAAmB,mGAEnBC,EAAoB,oIAExB,GAAInrE,EAAO6hD,WAAY,CAEnB,GADgB7hD,EAAO+hD,sBACLvwB,EACd,MAAM,IAAIhvC,MAAM0oF,GAEf,GAAyB,kBAAdF,EACZ,MAAM,IAAIxoF,MAAM2oF,EAExB,CACA,GAAInrE,EAAOiiD,SAAU,CAEjB,GADcjiD,EAAOmiD,oBACL1wB,EACZ,MAAM,IAAIjvC,MAAM0oF,GAEf,GAAuB,kBAAZD,EACZ,MAAM,IAAIzoF,MAAM2oF,EAExB,CACJ,MACK,GAAInrE,EAAOmuC,aAAewL,IAC3B,GAAkB,MAAbqxB,IAAsBtL,GAAgBsL,IAC3B,MAAXC,IAAoBvL,GAAgBuL,GACrC,MAAM,IAAIzoF,MAAM,gMAQpB,GAFAsuC,iBAAO9wB,EAAOmuC,qBAAsB4Q,IAChC/+C,EAAOmuC,aAAeoR,GAAa,uBACrB,MAAbyrB,GAA0C,kBAAdA,GACjB,MAAXC,GAAsC,kBAAZA,EAC3B,MAAM,IAAIzoF,MAAM,mHAI5B,CAIA,SAAS4oF,GAAcprE,GACnB,GAAIA,EAAO6hD,YACP7hD,EAAOiiD,UACPjiD,EAAO0kD,aACN1kD,EAAO2kD,mBACR,MAAM,IAAIniE,MAAM,gIAGxB,CAIA,IAAI8nF,GAA+B,SAAUtjC,GAGzC,SAASsjC,EAAcvH,EAAM5lE,GACzB,OAAO6pC,EAAOtiD,KAAK7B,KAAMkgF,EAAM5lE,EAAM,IAAIwmD,IAAe,IAAU9gE,IACtE,CAsBA,OA1BAskD,oBAAUmjC,EAAetjC,GAKzB3kD,OAAO+kB,eAAekjE,EAAczpF,UAAW,SAAU,CACrDmC,IAAK,WACD,IAAIqoF,EAAanjC,GAAWrlD,KAAK+pD,OACjC,OAAsB,OAAfy+B,EACD,KACA,IAAIf,EAAcznF,KAAK80E,MAAO0T,EACxC,EACAn1C,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAekjE,EAAczpF,UAAW,OAAQ,CACnDmC,IAAK,WAED,IADA,IAAImoB,EAAMtoB,KACY,OAAfsoB,EAAI8J,QACP9J,EAAMA,EAAI8J,OAEd,OAAO9J,CACX,EACA+qB,YAAY,EACZC,cAAc,IAEXm0C,CACX,CA5BmC,CA4BjCF,IAeEkB,GAAgC,WAOhC,SAASC,EAAaC,EAItBrgE,EAAKsgE,GACD5oF,KAAK2oF,MAAQA,EACb3oF,KAAKsoB,IAAMA,EACXtoB,KAAK4oF,OAASA,CAClB,CA+JA,OA9JAppF,OAAO+kB,eAAemkE,EAAa1qF,UAAW,WAAY,CAStDmC,IAAK,WAED,OAAOH,KAAK2oF,MAAMl0B,cAAc/xC,KACpC,EACA2wB,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAemkE,EAAa1qF,UAAW,MAAO,CAUjDmC,IAAK,WACD,OAAOH,KAAKsoB,IAAIjnB,GACpB,EACAgyC,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAemkE,EAAa1qF,UAAW,OAAQ,CAElDmC,IAAK,WACD,OAAOH,KAAK2oF,MAAMjzB,aACtB,EACAriB,YAAY,EACZC,cAAc,IAclBo1C,EAAa1qF,UAAUixB,MAAQ,SAAU3U,GACrC,IAAIsU,EAAY,IAAI41B,GAAKlqC,GACrBuuE,EAAW55D,GAAMjvB,KAAKsoB,IAAKhO,GAC/B,OAAO,IAAIouE,EAAa1oF,KAAK2oF,MAAMzzB,SAAStmC,GAAYi6D,EAAU/xB,GACtE,EAKA4xB,EAAa1qF,UAAU8qF,OAAS,WAC5B,OAAQ9oF,KAAK2oF,MAAMh6B,SACvB,EAWA+5B,EAAa1qF,UAAUqoF,UAAY,WAC/B,OAAOrmF,KAAK2oF,MAAMjmE,KAAI,EAC1B,EAmBAgmE,EAAa1qF,UAAU4kB,QAAU,SAAUxR,GACvC,IAAIggC,EAAQpxC,KACZ,OAAIA,KAAK2oF,MAAMn0B,gBAGIx0D,KAAK2oF,MAEFhzB,aAAa31D,KAAK4oF,OAAQ,SAAUvnF,EAAKsuD,GAC3D,OAAOv+C,EAAO,IAAIs3E,EAAa/4B,EAAM1gC,GAAMmiB,EAAM9oB,IAAKjnB,GAAMy1D,IAChE,EACJ,EAQA4xB,EAAa1qF,UAAUm3D,SAAW,SAAU76C,GACxC,IAAIsU,EAAY,IAAI41B,GAAKlqC,GACzB,OAAQta,KAAK2oF,MAAMzzB,SAAStmC,GAAW+/B,SAC3C,EAaA+5B,EAAa1qF,UAAU+qF,YAAc,WACjC,OAAI/oF,KAAK2oF,MAAMn0B,eAIHx0D,KAAK2oF,MAAMh6B,SAE3B,EAIA+5B,EAAa1qF,UAAU+pF,OAAS,WAC5B,OAAO/nF,KAAKqmF,WAChB,EAaAqC,EAAa1qF,UAAU0kB,IAAM,WACzB,OAAO1iB,KAAK2oF,MAAMjmE,KACtB,EACOgmE,CACX,CA/KoC,GA8LpC,SAASpgE,GAAI3f,EAAI2R,GAGb,OAFA3R,EAAKg/E,6BAAmBh/E,IACrBqgF,iBAAiB,YACJ1oF,IAATga,EAAqB2U,GAAMtmB,EAAGsgF,MAAO3uE,GAAQ3R,EAAGsgF,KAC3D,CAiBA,SAASj2D,GAAWrqB,EAAItF,IACpBsF,EAAKg/E,6BAAmBh/E,IACrBqgF,iBAAiB,cACpB,IAAIE,EAAY/D,GAAc9hF,EAAKsF,EAAGmsE,MAAM31B,UAAUtM,WACtDqrC,GAAY,aAAcgL,GAC1B,IAAIv1C,EAAWu1C,EAAUv1C,SAWzB,OAVKhrC,EAAGmsE,MAAM31B,UAAUhM,gBACpBQ,EAAS3vC,OAAS2E,EAAGmsE,MAAM31B,UAAUn7C,MACrCwqC,EAAM,qEAGFmF,EAAS3vC,KACT,iBACA2E,EAAGmsE,MAAM31B,UAAUn7C,KACnB,KAEDskB,GAAI3f,EAAIugF,EAAU5uE,KAAK1Y,WAClC,CAYA,SAASqtB,GAAMmD,EAAQ9X,GA16DM,IAAUyiE,EAAQgB,EAAcj7B,EAAY5iD,EAk7DrE,OANmC,OAA/B6kD,IADJ3yB,EAASu1D,6BAAmBv1D,IACJ23B,QA56DWgzB,EA66DR,QA76DgBgB,EA66DP,OA76DiC79E,GA66DnB,GA76DO4iD,EA66DbxoC,KA16DxCwoC,EAAaA,EAAWr7C,QAAQ,mBAAoB,MAExDu2E,GAAmBjB,EAAQgB,EAAcj7B,EAAY5iD,IA26DjD89E,GAAmB,QAAS,OAAQ1jE,GAAM,GAEvC,IAAImtE,GAAcr1D,EAAO0iD,MAAOvvB,GAAUnzB,EAAO23B,MAAOzvC,GACnE,CAgGA,SAASuH,GAAIyG,EAAKhmB,GACdgmB,EAAMq/D,6BAAmBr/D,GACzB21D,GAAqB,MAAO31D,EAAIyhC,OAChC+yB,GAAwB,MAAOx6E,EAAOgmB,EAAIyhC,OAAO,GACjD,IAAIF,EAAW,IAAIC,WAGnB,OAFAo4B,GAAoB55D,EAAIwsD,MAAOxsD,EAAIyhC,MAAOznD,EAC5B,KAAMunD,EAASq9B,aAAa,WAAc,IACjDr9B,EAAS1kD,OACpB,CAkFA,SAASyO,GAAO0U,EAAK4mC,GACjBquB,GAA6B,SAAUruB,EAAQ5mC,EAAIyhC,OAAO,GAC1D,IAAIF,EAAW,IAAIC,WAEnB,OApsDJ,SAAoBo2B,EAAM5lE,EAAM+sE,EAAiBtkC,GAC7C6+B,GAAQ1B,EAAM,SAAU,CAAE5lE,KAAMA,EAAK1Y,WAAYU,MAAO+kF,IAExD,IAAI1d,GAAQ,EACRiR,EAAewG,GAAyBlB,GACxCzQ,EAAkB,CAAC,EAKvB,GAJA//B,EAAK23C,EAAiB,SAAU8B,EAAYC,GACxCzf,GAAQ,EACR8F,EAAgB0Z,GAAclO,GAAyB11B,GAAUjrC,EAAM6uE,GAAaztB,GAAa0tB,GAAelJ,EAAKe,gBAAiBrG,EAC1I,GACKjR,EAsBDv7B,EAAI,wDACJk0C,GAA2BpC,EAAMn9B,EAAY,UAAMziD,OAvB3C,CACR,IAAI+oF,EAAYpH,GAAmB/B,GAC/BvZ,EAAS2P,GAAuB4J,EAAKe,gBAAiB3mE,EAAMm1D,EAAiB4Z,GACjF7K,GAAsB0B,EAAKN,YAAajZ,GACxCuZ,EAAK1b,QAAQvhB,MAAM3oC,EAAK1Y,WAAYylF,EAAiB,SAAUxiF,EAAQ8nD,GACnE,IAAI/sC,EAAqB,OAAX/a,EACT+a,GACD5S,EAAK,aAAesN,EAAO,YAAczV,GAE7C,IAAIw9E,EAAc5L,GAAqByJ,EAAKe,gBAAiBoI,GAAYzpE,GACrEm+C,EAAeskB,EAAYv6E,OAAS,EAAI65E,GAAsBzB,EAAM5lE,GAAQA,EAChF0kE,GAAoCkB,EAAKN,YAAa7hB,EAAcskB,GACpEC,GAA2BpC,EAAMn9B,EAAYl+C,EAAQ8nD,EACzD,GACAjd,EAAK23C,EAAiB,SAAUpI,GAC5B,IAAIlhB,EAAegkB,GAAsB7B,EAAM36B,GAAUjrC,EAAM2kE,IAC/D0C,GAAsBzB,EAAMniB,EAChC,GAEAihB,GAAoCkB,EAAKN,YAAatlE,EAAM,GAChE,CAKJ,CAgqDIgvE,CAAWhhE,EAAIwsD,MAAOxsD,EAAIyhC,MAAOmF,EAAQrF,EAASq9B,aAAa,WAAc,IACtEr9B,EAAS1kD,OACpB,CASA,SAAShF,GAAIszC,GAET,OA7vDJ,SAAsBysC,EAAMzsC,GAExB,IAAI81C,EAASnQ,GAAuB8G,EAAKe,gBAAiBxtC,GAC1D,OAAc,MAAV81C,EACOvmF,QAAQC,QAAQsmF,GAEpBrJ,EAAK1b,QAAQrkE,IAAIszC,GAAOrzC,KAAK,SAAU8P,GAC1C,IAAIy/C,EAAO+L,GAAaxrD,GAASomD,UAAU7iB,EAAMiX,aAAaY,YAC1Dqb,EAASiQ,GAA6BsJ,EAAKe,gBAAiBxtC,EAAMsW,MAAO4F,GAE7E,OADAkvB,GAA4BqB,EAAKN,YAAansC,EAAMsW,MAAO4c,GACpD3jE,QAAQC,QAAQ0sD,EAC3B,EAAG,SAAUzgD,GAET,OADA0yE,GAAQ1B,EAAM,iBAAmBv7E,oBAAU8uC,GAAS,YAAcvkC,GAC3DlM,QAAQqC,OAAO,IAAI1F,MAAMuP,GACpC,EACJ,CA8uDWs6E,EADP/1C,EAAQk0C,6BAAmBl0C,IACDqhC,MAAOrhC,GAAOrzC,KAAK,SAAUuvD,GACnD,OAAO,IAAI84B,GAAe94B,EAAM,IAAI83B,GAAch0C,EAAMqhC,MAAOrhC,EAAMsW,OAAQtW,EAAMiX,aAAaY,WACpG,EACJ,CAIA,IAAIm+B,GAAwC,WACxC,SAASA,EAAuBC,GAC5B1pF,KAAK0pF,gBAAkBA,CAC3B,CA4CA,OA3CAD,EAAuBzrF,UAAUupE,WAAa,SAAUvzD,GACpD,MAAqB,UAAdA,CACX,EACAy1E,EAAuBzrF,UAAUwpE,YAAc,SAAUR,EAAQvzB,GAC7D,IAAItqC,EAAQsqC,EAAMiX,aAAaY,WAC/B,OAAO,IAAI86B,GAAU,QAASpmF,KAAM,IAAIyoF,GAAezhB,EAAOzJ,aAAc,IAAIkqB,GAAch0C,EAAMqhC,MAAOrhC,EAAMsW,OAAQ5gD,GAC7H,EACAsgF,EAAuBzrF,UAAUshF,eAAiB,SAAUx7B,GACxD,IAAI1S,EAAQpxC,KACZ,MAAiC,WAA7B8jD,EAAU7vC,eACH,WACH,OAAOm9B,EAAMs4C,gBAAgB7C,SAAS/iC,EAAUn+C,MACpD,EAGO,WACH,OAAOyrC,EAAMs4C,gBAAgBhD,QAAQ5iC,EAAU32B,SAAU,KAC7D,CAER,EACAs8D,EAAuBzrF,UAAUm1E,kBAAoB,SAAUxtE,EAAO2U,GAClE,OAAIta,KAAK0pF,gBAAgB5C,kBACd,IAAIR,GAAYtmF,KAAM2F,EAAO2U,GAG7B,IAEf,EACAmvE,EAAuBzrF,UAAU2Z,QAAU,SAAU4uC,GACjD,OAAMA,aAAiBkjC,KAGbljC,EAAMmjC,kBAAoB1pF,KAAK0pF,iBAK9BnjC,EAAMmjC,gBAAgB/xE,QAAQ3X,KAAK0pF,iBAElD,EACAD,EAAuBzrF,UAAUs1E,eAAiB,WAC9C,OAAgC,OAAzBtzE,KAAK0pF,eAChB,EACOD,CACX,CAhD4C,GAoDxCE,GAAwC,WACxC,SAASA,EAAuB31E,EAAW01E,GACvC1pF,KAAKgU,UAAYA,EACjBhU,KAAK0pF,gBAAkBA,CAC3B,CA8CA,OA7CAC,EAAuB3rF,UAAUupE,WAAa,SAAUvzD,GACpD,IAAI41E,EAA6B,mBAAd51E,EAAiC,cAAgBA,EAGpE,OAFA41E,EACqB,qBAAjBA,EAAsC,gBAAkBA,EACrD5pF,KAAKgU,YAAc41E,CAC9B,EACAD,EAAuB3rF,UAAUm1E,kBAAoB,SAAUxtE,EAAO2U,GAClE,OAAIta,KAAK0pF,gBAAgB5C,kBACd,IAAIR,GAAYtmF,KAAM2F,EAAO2U,GAG7B,IAEf,EACAqvE,EAAuB3rF,UAAUwpE,YAAc,SAAUR,EAAQvzB,GAC7DxF,iBAA2B,MAApB+4B,EAAO/R,UAAmB,yCACjC,IAAI4zB,EAAW55D,GAAM,IAAIw4D,GAAch0C,EAAMqhC,MAAOrhC,EAAMsW,OAAQid,EAAO/R,WACrE9rD,EAAQsqC,EAAMiX,aAAaY,WAC/B,OAAO,IAAI86B,GAAUpf,EAAOz0D,KAAMvS,KAAM,IAAIyoF,GAAezhB,EAAOzJ,aAAcsrB,EAAU1/E,GAAQ69D,EAAOK,SAC7G,EACAsiB,EAAuB3rF,UAAUshF,eAAiB,SAAUx7B,GACxD,IAAI1S,EAAQpxC,KACZ,MAAiC,WAA7B8jD,EAAU7vC,eACH,WACH,OAAOm9B,EAAMs4C,gBAAgB7C,SAAS/iC,EAAUn+C,MACpD,EAGO,WACH,OAAOyrC,EAAMs4C,gBAAgBhD,QAAQ5iC,EAAU32B,SAAU22B,EAAUujB,SACvE,CAER,EACAsiB,EAAuB3rF,UAAU2Z,QAAU,SAAU4uC,GACjD,OAAIA,aAAiBojC,IACT3pF,KAAKgU,YAAcuyC,EAAMvyC,aAC3BhU,KAAK0pF,kBACFnjC,EAAMmjC,iBACP1pF,KAAK0pF,gBAAgB/xE,QAAQ4uC,EAAMmjC,kBAGnD,EACAC,EAAuB3rF,UAAUs1E,eAAiB,WAC9C,QAAStzE,KAAK0pF,eAClB,EACOC,CACX,CAnD4C,GAoD5C,SAAS17E,GAAiBwlC,EAAOz/B,EAAWzF,EAAUs7E,EAA+B/lF,GACjF,IAAI2iF,EAQJ,GAP6C,kBAAlCoD,IACPpD,OAAiBnmF,EACjBwD,EAAU+lF,GAE+B,oBAAlCA,IACPpD,EAAiBoD,GAEjB/lF,GAAWA,EAAQgmF,SAAU,CAC7B,IAAIC,EAAiBx7E,EACjBy7E,EAAe,SAAUC,EAAcrD,GACvCnE,GAAgChvC,EAAMqhC,MAAOrhC,EAAOntC,GACpDyjF,EAAeE,EAAcrD,EACjC,EACAoD,EAAajD,aAAex4E,EAASw4E,aACrCiD,EAAajlF,QAAUwJ,EAASxJ,QAChCwJ,EAAWy7E,CACf,CACA,IAAIN,EAAkB,IAAInD,GAAgBh4E,EAAUk4E,QAAkBnmF,GAClEgG,EAA0B,UAAd0N,EACV,IAAIy1E,GAAuBC,GAC3B,IAAIC,GAAuB31E,EAAW01E,GAE5C,OArvDJ,SAAsCxJ,EAAMzsC,EAAOq/B,GAC/C,IAAInM,EAEAA,EAD8B,UAA9B5hB,GAAatR,EAAMsW,OACVwuB,GAA6B2H,EAAKa,cAAettC,EAAOq/B,GAGxDyF,GAA6B2H,EAAKe,gBAAiBxtC,EAAOq/B,GAEvE+L,GAA4BqB,EAAKN,YAAansC,EAAMsW,MAAO4c,EAC/D,CA2uDIujB,CAA6Bz2C,EAAMqhC,MAAOrhC,EAAOntC,GAC1C,WAAc,OAAOm8E,GAAgChvC,EAAMqhC,MAAOrhC,EAAOntC,EAAY,CAChG,CACA,SAASogF,GAAQjzC,EAAOllC,EAAUs7E,EAA+B/lF,GAC7D,OAAOmK,GAAiBwlC,EAAO,QAASllC,EAAUs7E,EAA+B/lF,EACrF,CACA,SAASqmF,GAAa12C,EAAOllC,EAAUs7E,EAA+B/lF,GAClE,OAAOmK,GAAiBwlC,EAAO,cAAellC,EAAUs7E,EAA+B/lF,EAC3F,CACA,SAASsmF,GAAe32C,EAAOllC,EAAUs7E,EAA+B/lF,GACpE,OAAOmK,GAAiBwlC,EAAO,gBAAiBllC,EAAUs7E,EAA+B/lF,EAC7F,CACA,SAASumF,GAAa52C,EAAOllC,EAAUs7E,EAA+B/lF,GAClE,OAAOmK,GAAiBwlC,EAAO,cAAellC,EAAUs7E,EAA+B/lF,EAC3F,CACA,SAASwmF,GAAe72C,EAAOllC,EAAUs7E,EAA+B/lF,GACpE,OAAOmK,GAAiBwlC,EAAO,gBAAiBllC,EAAUs7E,EAA+B/lF,EAC7F,CAyBA,SAASkgD,GAAIvQ,EAAOz/B,EAAWzF,GAC3B,IAAIjI,EAAY,KACZikF,EAAch8E,EAAW,IAAIg4E,GAAgBh4E,GAAY,KAC3C,UAAdyF,EACA1N,EAAY,IAAImjF,GAAuBc,GAElCv2E,IACL1N,EAAY,IAAIqjF,GAAuB31E,EAAWu2E,IAEtD9H,GAAgChvC,EAAMqhC,MAAOrhC,EAAOntC,EACxD,CAWA,IAAIkkF,GACA,WACA,EAGAC,GAAsC,SAAUtmC,GAEhD,SAASsmC,EAAqB/jD,EAAQ6wC,GAClC,IAAInmC,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM1K,OAASA,EACf0K,EAAMmmC,KAAOA,EACNnmC,CACX,CAYA,OAlBAkT,oBAAUmmC,EAAsBtmC,GAOhCsmC,EAAqBzsF,UAAU0sF,OAAS,SAAUj3C,GAC9CqpC,GAAwB,QAAS98E,KAAK0mC,OAAQ+M,EAAMsW,OAAO,GAC3D,IAAIkY,EAAYC,GAAiBzuB,EAAMiX,aAAc1qD,KAAK0mC,OAAQ1mC,KAAKu3E,MAGvE,GAFAgR,GAActmB,GACdimB,GAAuBjmB,GACnBxuB,EAAMiX,aAAa0U,SACnB,MAAM,IAAIz/D,MAAM,2FAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,EAAWxuB,EAAM+zC,eACpE,EACOiD,CACX,CApB0C,CAoBxCD,IA4BF,IAAIG,GAA0C,SAAUxmC,GAEpD,SAASwmC,EAAyBjkD,EAAQ6wC,GACtC,IAAInmC,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM1K,OAASA,EACf0K,EAAMmmC,KAAOA,EACNnmC,CACX,CAYA,OAlBAkT,oBAAUqmC,EAA0BxmC,GAOpCwmC,EAAyB3sF,UAAU0sF,OAAS,SAAUj3C,GAClDqpC,GAAwB,YAAa98E,KAAK0mC,OAAQ+M,EAAMsW,OAAO,GAC/D,IAAIkY,EAz6MZ,SAA8BD,EAAapR,EAAYvvD,GACnD,IACI8b,EAiBJ,OAhBI6kD,EAAYnE,SAAWhN,IACG,kBAAfD,IACPA,EAAa2J,GAAY3J,IAE7BzzC,EAAS+kD,GAAiBF,EAAapR,EAAYvvD,IASnD8b,EAAS+kD,GAAiBF,EAAapR,EAN5B,MAAPvvD,EACWstC,EAGA4rB,GAAYl5D,IAI/B8b,EAAOkkD,eAAgB,EAChBlkD,CACX,CAq5MwBytE,CAAqBn3C,EAAMiX,aAAc1qD,KAAK0mC,OAAQ1mC,KAAKu3E,MAG3E,GAFAgR,GAActmB,GACdimB,GAAuBjmB,GACnBxuB,EAAMiX,aAAa0U,SACnB,MAAM,IAAIz/D,MAAM,+FAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,EAAWxuB,EAAM+zC,eACpE,EACOmD,CACX,CApB8C,CAoB5CH,IAwBF,IAAIK,GAAwC,SAAU1mC,GAElD,SAAS0mC,EAAuBnkD,EAAQ6wC,GACpC,IAAInmC,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM1K,OAASA,EACf0K,EAAMmmC,KAAOA,EACNnmC,CACX,CAYA,OAlBAkT,oBAAUumC,EAAwB1mC,GAOlC0mC,EAAuB7sF,UAAU0sF,OAAS,SAAUj3C,GAChDqpC,GAAwB,UAAW98E,KAAK0mC,OAAQ+M,EAAMsW,OAAO,GAC7D,IAAIkY,EAAYF,GAAmBtuB,EAAMiX,aAAc1qD,KAAK0mC,OAAQ1mC,KAAKu3E,MAGzE,GAFAgR,GAActmB,GACdimB,GAAuBjmB,GACnBxuB,EAAMiX,aAAasU,WACnB,MAAM,IAAIr/D,MAAM,iGAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,EAAWxuB,EAAM+zC,eACpE,EACOqD,CACX,CApB4C,CAoB1CL,IA4BF,IAAIM,GAA2C,SAAU3mC,GAErD,SAAS2mC,EAA0BpkD,EAAQ6wC,GACvC,IAAInmC,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM1K,OAASA,EACf0K,EAAMmmC,KAAOA,EACNnmC,CACX,CAYA,OAlBAkT,oBAAUwmC,EAA2B3mC,GAOrC2mC,EAA0B9sF,UAAU0sF,OAAS,SAAUj3C,GACnDqpC,GAAwB,aAAc98E,KAAK0mC,OAAQ+M,EAAMsW,OAAO,GAChE,IAAIkY,EA3iNZ,SAA+BD,EAAapR,EAAYvvD,GACpD,IAAI8b,EACA6kD,EAAYnE,SAAWhN,IACG,kBAAfD,IACPA,EAAaqM,GAAUrM,IAE3BzzC,EAAS4kD,GAAmBC,EAAapR,EAAYvvD,IAUrD8b,EAAS4kD,GAAmBC,EAAapR,EAN9B,MAAPvvD,EACWutC,EAGAquB,GAAU57D,IAK7B,OADA8b,EAAO+jD,gBAAiB,EACjB/jD,CACX,CAuhNwB4tE,CAAsBt3C,EAAMiX,aAAc1qD,KAAK0mC,OAAQ1mC,KAAKu3E,MAG5E,GAFAgR,GAActmB,GACdimB,GAAuBjmB,GACnBxuB,EAAMiX,aAAasU,WACnB,MAAM,IAAIr/D,MAAM,oGAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,EAAWxuB,EAAM+zC,eACpE,EACOsD,CACX,CApB+C,CAoB7CN,IAuBF,IAAIQ,GAA6C,SAAU7mC,GAEvD,SAAS6mC,EAA4BC,GACjC,IAAI75C,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAEjC,OADAoxC,EAAM65C,OAASA,EACR75C,CACX,CAQA,OAbAkT,oBAAU0mC,EAA6B7mC,GAMvC6mC,EAA4BhtF,UAAU0sF,OAAS,SAAUj3C,GACrD,GAAIA,EAAMiX,aAAamX,WACnB,MAAM,IAAIliE,MAAM,yFAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAvnNhD,SAAiCiY,EAAakpB,GAC1C,IAAIjpB,EAAYD,EAAYnQ,OAI5B,OAHAoQ,EAAUlB,WAAY,EACtBkB,EAAUvC,OAASwrB,EACnBjpB,EAAUX,UAAY,IACfW,CACX,CAinNuDkpB,CAAwB13C,EAAMiX,aAAc1qD,KAAKirF,QAASx3C,EAAM+zC,eACnH,EACOwD,CACX,CAfiD,CAe/CR,IAyBF,IAAIY,GAA4C,SAAUjnC,GAEtD,SAASinC,EAA2BH,GAChC,IAAI75C,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAEjC,OADAoxC,EAAM65C,OAASA,EACR75C,CACX,CAQA,OAbAkT,oBAAU8mC,EAA4BjnC,GAMtCinC,EAA2BptF,UAAU0sF,OAAS,SAAUj3C,GACpD,GAAIA,EAAMiX,aAAamX,WACnB,MAAM,IAAIliE,MAAM,wFAGpB,OAAO,IAAI4nF,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAxpNhD,SAAgCiY,EAAakpB,GACzC,IAAIjpB,EAAYD,EAAYnQ,OAI5B,OAHAoQ,EAAUlB,WAAY,EACtBkB,EAAUvC,OAASwrB,EACnBjpB,EAAUX,UAAY,IACfW,CACX,CAkpNuDopB,CAAuB53C,EAAMiX,aAAc1qD,KAAKirF,QAASx3C,EAAM+zC,eAClH,EACO4D,CACX,CAfgD,CAe9CZ,IAyBF,IAAIc,GAA6C,SAAUnnC,GAEvD,SAASmnC,EAA4BvhC,GACjC,IAAI3Y,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAEjC,OADAoxC,EAAM2Y,MAAQA,EACP3Y,CACX,CAaA,OAlBAkT,oBAAUgnC,EAA6BnnC,GAMvCmnC,EAA4BttF,UAAU0sF,OAAS,SAAUj3C,GACrDw0C,GAA8Bx0C,EAAO,gBACrC,IAAI83C,EAAa,IAAI/mC,GAAKxkD,KAAK+pD,OAC/B,GAAIrE,GAAY6lC,GACZ,MAAM,IAAI5rF,MAAM,wEAEpB,IAAIwJ,EAAQ,IAAI+yD,GAAUqvB,GACtBtpB,EAAYE,GAAmB1uB,EAAMiX,aAAcvhD,GAEvD,OADA++E,GAAuBjmB,GAChB,IAAIslB,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,GAC5B,EACvB,EACOqpB,CACX,CApBiD,CAoB/Cd,IA+BF,IAAIgB,GAA2C,SAAUrnC,GAErD,SAASqnC,IACL,OAAkB,OAAXrnC,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CAQA,OAXAskD,oBAAUknC,EAA2BrnC,GAIrCqnC,EAA0BxtF,UAAU0sF,OAAS,SAAUj3C,GACnDw0C,GAA8Bx0C,EAAO,cACrC,IAAIwuB,EAAYE,GAAmB1uB,EAAMiX,aAAcmG,IAEvD,OADAq3B,GAAuBjmB,GAChB,IAAIslB,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,GAC5B,EACvB,EACOupB,CACX,CAb+C,CAa7ChB,IAYF,IAAIiB,GAAgD,SAAUtnC,GAE1D,SAASsnC,IACL,OAAkB,OAAXtnC,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CAQA,OAXAskD,oBAAUmnC,EAAgCtnC,GAI1CsnC,EAA+BztF,UAAU0sF,OAAS,SAAUj3C,GACxDw0C,GAA8Bx0C,EAAO,mBACrC,IAAIwuB,EAAYE,GAAmB1uB,EAAMiX,aAAcoM,IAEvD,OADAoxB,GAAuBjmB,GAChB,IAAIslB,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,GAC5B,EACvB,EACOwpB,CACX,CAboD,CAalDjB,IAYF,IAAIkB,GAA6C,SAAUvnC,GAEvD,SAASunC,IACL,OAAkB,OAAXvnC,GAAmBA,EAAO3kC,MAAMxf,KAAM2tC,YAAc3tC,IAC/D,CAQA,OAXAskD,oBAAUonC,EAA6BvnC,GAIvCunC,EAA4B1tF,UAAU0sF,OAAS,SAAUj3C,GACrDw0C,GAA8Bx0C,EAAO,gBACrC,IAAIwuB,EAAYE,GAAmB1uB,EAAMiX,aAAcgS,IAEvD,OADAwrB,GAAuBjmB,GAChB,IAAIslB,GAAU9zC,EAAMqhC,MAAOrhC,EAAMsW,MAAOkY,GAC5B,EACvB,EACOypB,CACX,CAbiD,CAa/ClB,IAaF,IAAImB,GAA6C,SAAUxnC,GAEvD,SAASwnC,EAA4BjlD,EAAQ6wC,GACzC,IAAInmC,EAAQ+S,EAAOtiD,KAAK7B,OAASA,KAGjC,OAFAoxC,EAAM1K,OAASA,EACf0K,EAAMmmC,KAAOA,EACNnmC,CACX,CAaA,OAnBAkT,oBAAUqnC,EAA6BxnC,GAOvCwnC,EAA4B3tF,UAAU0sF,OAAS,SAAUj3C,GAErD,GADAqpC,GAAwB,UAAW98E,KAAK0mC,OAAQ+M,EAAMsW,OAAO,GACzDtW,EAAMiX,aAAasU,WACnB,MAAM,IAAIr/D,MAAM,+FAGpB,GAAI8zC,EAAMiX,aAAa0U,SACnB,MAAM,IAAIz/D,MAAM,0FAGpB,OAAO,IAAI8qF,GAAqBzqF,KAAK0mC,OAAQ1mC,KAAKu3E,MAAMmT,OAAO,IAAIG,GAAuB7qF,KAAK0mC,OAAQ1mC,KAAKu3E,MAAMmT,OAAOj3C,GAC7H,EACOk4C,CACX,CArBiD,CAqB/CnB,IAqCF,SAAS/2C,GAAMA,GAGX,IAFA,IAAI0K,EAAK5M,EACLq6C,EAAmB,GACdl+C,EAAK,EAAGA,EAAKC,UAAU7lC,OAAQ4lC,IACpCk+C,EAAiBl+C,EAAK,GAAKC,UAAUD,GAEzC,IAAIm+C,EAAYlE,6BAAmBl0C,GACnC,IACI,IAAK,IAAIq4C,EAAqBrtC,mBAASmtC,GAAmBG,EAAuBD,EAAmB36E,QAAS46E,EAAqBntC,KAAMmtC,EAAuBD,EAAmB36E,OAAQ,CAEtL06E,EADiBE,EAAqBzpF,MACfooF,OAAOmB,EAClC,CACJ,CACA,MAAO/sC,GAASX,EAAM,CAAEx4C,MAAOm5C,EAAS,CAAC,QAErC,IACQitC,IAAyBA,EAAqBntC,OAASrN,EAAKu6C,EAAmB/sC,SAASxN,EAAG1vC,KAAKiqF,EACxG,CAAC,QACS,GAAI3tC,EAAK,MAAMA,EAAIx4C,KAAO,CACxC,CACA,OAAOkmF,CACX,EAxrIA,SAA0CnpE,GACtCurB,kBAAQ8jC,GAAwB,mDAChCA,GAAyBrvD,CAC7B,CA4rIAspE,CAAiCvE,IA78HjC,SAAyC/kE,GACrCurB,kBAAQ2lC,GAAsB,mDAC9BA,GAAuBlxD,CAC3B,CA28HAupE,CAAgCxE,IA0BhC,IAIIyE,GAAQ,CAAC,EAITC,IAAgB,EAepB,SAASC,GAA2B5lF,EAAK5G,EAAc6C,EAAkBY,EAAKwvC,GAC1E,IAAIw5C,EAAQhpF,GAAOmD,EAAI1C,QAAQwoF,iBACjBhsF,IAAV+rF,IACK7lF,EAAI1C,QAAQD,WACb2qC,EAAM,kHAGVJ,EAAI,kCAAmC5nC,EAAI1C,QAAQD,WACnDwoF,EAAQ7lF,EAAI1C,QAAQD,UAAY,gCAEpC,IAEI0oF,EAFApO,EAAYgH,GAAckH,EAAOx5C,GACjCc,EAAWwqC,EAAUxqC,SAErB64C,OAAiBlsF,EACE,qBAAZ87C,IACPowC,EAAiBpwC,uKAA+C,iCAEhEowC,GACAD,GAAa,EACbF,EAAQ,UAAYG,EAAiB,OAAS74C,EAAStO,UAEvDsO,GADAwqC,EAAYgH,GAAckH,EAAOx5C,IACZc,UAGrB44C,GAAcpO,EAAUxqC,SAAShB,OAErC,IAAI85C,EAAoB55C,GAAa05C,EAC/B,IAAIp6C,EAAsBA,EAAsBC,OAChD,IAAIV,EAA0BlrC,EAAI5C,KAAM4C,EAAI1C,QAASlE,GAC3Ds+E,GAAY,gCAAiCC,GACxCz4B,GAAYy4B,EAAU7jE,OACvBk0B,EAAM,4FAGV,IAAI0xC,EAuBR,SAA+BvsC,EAAUntC,EAAKimF,EAAmBhqF,GAC7D,IAAIiqF,EAAWR,GAAM1lF,EAAI5C,MACpB8oF,IACDA,EAAW,CAAC,EACZR,GAAM1lF,EAAI5C,MAAQ8oF,GAEtB,IAAIxM,EAAOwM,EAAS/4C,EAASJ,eACzB2sC,GACA1xC,EAAM,2HAIV,OAFA0xC,EAAO,IAAIV,GAAK7rC,EAAUw4C,GAAeM,EAAmBhqF,GAC5DiqF,EAAS/4C,EAASJ,eAAiB2sC,EAC5BA,CACX,CApCeyM,CAAsBh5C,EAAUntC,EAAKimF,EAAmB,IAAIv7C,EAAsB1qC,EAAI5C,KAAMnB,IACvG,OAAO,IAAImqF,GAAW1M,EAAM15E,EAChC,CA4CA,IAAIomF,GAA4B,WAE5B,SAASC,EAASC,EAElBtmF,GACIxG,KAAK8sF,cAAgBA,EACrB9sF,KAAKwG,IAAMA,EAEXxG,KAAW,KAAI,WAEfA,KAAK+sF,kBAAmB,CAC5B,CAmCA,OAlCAvtF,OAAO+kB,eAAesoE,EAAS7uF,UAAW,QAAS,CAC/CmC,IAAK,WAKD,OAJKH,KAAK+sF,mBACN9M,GAAUjgF,KAAK8sF,cAAe9sF,KAAKwG,IAAI1C,QAAQiH,MAAO/K,KAAKwG,IAAI1C,QAAsC,8BACrG9D,KAAK+sF,kBAAmB,GAErB/sF,KAAK8sF,aAChB,EACAz5C,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAesoE,EAAS7uF,UAAW,QAAS,CAC/CmC,IAAK,WAID,OAHKH,KAAKgtF,gBACNhtF,KAAKgtF,cAAgB,IAAIvF,GAAcznF,KAAK80E,MAAOhwB,OAEhD9kD,KAAKgtF,aAChB,EACA35C,YAAY,EACZC,cAAc,IAElBu5C,EAAS7uF,UAAUyyB,QAAU,WAMzB,OAL2B,OAAvBzwB,KAAKgtF,iBAzEjB,SAA+B9M,EAAMtrE,GACjC,IAAI83E,EAAWR,GAAMt3E,GAEhB83E,GAAYA,EAASxM,EAAK7+E,OAAS6+E,GACpC1xC,EAAM,YAAc55B,EAAU,IAAMsrE,EAAK/gC,UAAY,+BAEzDujC,GAAcxC,UACPwM,EAASxM,EAAK7+E,IACzB,CAkEY4rF,CAAsBjtF,KAAK80E,MAAO90E,KAAKwG,IAAI5C,MAC3C5D,KAAK8sF,cAAgB,KACrB9sF,KAAKgtF,cAAgB,MAElBhqF,QAAQC,SACnB,EACA4pF,EAAS7uF,UAAUgrF,iBAAmB,SAAUkE,GACjB,OAAvBltF,KAAKgtF,eACLx+C,EAAM,eAAiB0+C,EAAU,0BAEzC,EACOL,CACX,CA/CgC,GA2DhC,SAASM,GAAwBxkF,EAAI3E,EAAMC,EAAMH,QAC7B,IAAZA,IAAsBA,EAAU,CAAC,IACrC6E,EAAKg/E,6BAAmBh/E,IACrBqgF,iBAAiB,eAChBrgF,EAAGokF,kBACHv+C,EAAM,0EAEV,IAAI0xC,EAAOv3E,EAAGmkF,cACVM,OAAgB9sF,EACpB,GAAI4/E,EAAK/gC,UAAUtM,UACX/uC,EAAQ6tB,eACR6c,EAAM,sJAEV4+C,EAAgB,IAAIj7C,EAAsBA,EAAsBC,YAE/D,GAAItuC,EAAQ6tB,cAAe,CAC5B,IAAInxB,EAAyC,kBAA1BsD,EAAQ6tB,cACrB7tB,EAAQ6tB,cACR07D,8BAAoBvpF,EAAQ6tB,cAAehpB,EAAGnC,IAAI1C,QAAQD,WAChEupF,EAAgB,IAAIj7C,EAAsB3xC,EAC9C,EA1KJ,SAA0C0/E,EAAMl8E,EAAMC,EAAMmpF,GACxDlN,EAAK/gC,UAAY,IAAIzM,EAAS1uC,EAAO,IAAMC,GAC7B,EAAOi8E,EAAK/gC,UAAU9Z,UAAW66C,EAAK/gC,UAAUvM,cAAestC,EAAK/gC,UAAUtM,UAAWqtC,EAAK/gC,UAAUrM,eAAgBotC,EAAK/gC,UAAUpM,+BACjJq6C,IACAlN,EAAKp4B,mBAAqBslC,EAElC,CAsKIE,CAAiCpN,EAAMl8E,EAAMC,EAAMmpF,EACvD,CAsCA,SAASG,GAAS5kF,GAn/ElB,IAAoBu3E,GAo/EhBv3E,EAAKg/E,6BAAmBh/E,IACrBqgF,iBAAiB,aAr/EJ9I,EAs/ELv3E,EAAGmsE,OAr/ELkL,uBACLE,EAAKF,sBAAsB5yD,OAAOmyD,GAq/E1C,CAkBA,IAAIiO,GAAmB,CACnB,MAAO,aA4CX,IAAIC,GAAqC,WAErC,SAASC,EAETC,EAEAxgE,GACIntB,KAAK2tF,UAAYA,EACjB3tF,KAAKmtB,SAAWA,CACpB,CAKA,OAHAugE,EAAkB1vF,UAAU+pF,OAAS,WACjC,MAAO,CAAE4F,UAAW3tF,KAAK2tF,UAAWxgE,SAAUntB,KAAKmtB,SAAS46D,SAChE,EACO2F,CACX,CAfyC,GAqDzC,SAASE,GAAetlE,EAExBulE,EAAmB/pF,GACf,IAAIytC,EAGJ,GAFAjpB,EAAMq/D,6BAAmBr/D,GACzB21D,GAAqB,wBAAyB31D,EAAIyhC,OAClC,YAAZzhC,EAAIjnB,KAAiC,UAAZinB,EAAIjnB,IAC7B,KAAO,iCAAmCinB,EAAIjnB,IAAM,0BAExD,IAAImjF,EAAiG,QAAjFjzC,EAAiB,OAAZztC,QAAgC,IAAZA,OAAqB,EAASA,EAAQ0gF,oBAAiC,IAAPjzC,GAAgBA,EACzHsY,EAAW,IAAIC,WAYf+5B,EAAY6C,GAAQp+D,EAAK,WAAc,GAE3C,OArjFJ,SAA8B43D,EAAM5lE,EAAMuzE,EAAmB9qC,EAAY8gC,EAAWW,GAChF5C,GAAQ1B,EAAM,kBAAoB5lE,GAElC,IAAIpR,EAAc,CACdoR,KAAMA,EACN1G,OAAQi6E,EACR9qC,WAAYA,EAEZl+C,OAAQ,KAGRggF,MAAO93C,IAEPy3C,aAAcA,EAEdjB,WAAY,EAEZM,UAAWA,EAEXC,YAAa,KACbX,eAAgB,KAChBiB,qBAAsB,KACtBZ,yBAA0B,KAC1BI,8BAA+B,MAG/BkK,EAAenL,GAAmBzC,EAAM5lE,OAAMha,GAClD4I,EAAYk7E,qBAAuB0J,EACnC,IAAI3L,EAASj5E,EAAY0K,OAAOk6E,EAAaprE,OAC7C,QAAepiB,IAAX6hF,EAEAj5E,EAAY26E,YACZ36E,EAAYs6E,yBAA2B,KACvCt6E,EAAY06E,8BAAgC,KACxC16E,EAAY65C,YACZ75C,EAAY65C,WAAW,MAAM,EAAO75C,EAAYk7E,0BAGnD,CACDpH,GAAqB,qCAAsCmF,EAAQj5E,EAAYoR,MAE/EpR,EAAYrE,OAAS,EACrB,IAAIkpF,EAAYtS,GAAYyE,EAAKH,sBAAuBzlE,GACpDwqE,EAAYnJ,GAAaoS,IAAc,GAC3CjJ,EAAU3tE,KAAKjO,GACf0yE,GAAamS,EAAWjJ,GAKxB,IAAIkJ,OAAkB,EACA,kBAAX7L,GACI,OAAXA,GACAn5E,mBAASm5E,EAAQ,cAEjB6L,EAAkB5iC,kBAAQ+2B,EAAQ,aAClCl0C,iBAAO4uC,GAAgBmR,GAAkB,qHAMzCA,GAFkB7U,GAA+B+G,EAAKe,gBAAiB3mE,IACnEo/C,GAAa9H,YACa6C,cAAc/xC,MAEhD,IAAIk4D,EAAewG,GAAyBlB,GACxCkC,EAAoB1mB,GAAaymB,EAAQ6L,GACzC99B,EAAUirB,GAA6BiH,EAAmB0L,EAAclT,GAC5E1xE,EAAYs6E,yBAA2BpB,EACvCl5E,EAAY06E,8BAAgC1zB,EAC5ChnD,EAAYi6E,eAAiBlB,GAAmB/B,GAChD,IAAIvZ,EAASsP,GAA2BiK,EAAKe,gBAAiB3mE,EAAM41C,EAAShnD,EAAYi6E,eAAgBj6E,EAAYs7E,cACrHxF,GAAoCkB,EAAKN,YAAatlE,EAAMqsD,GAC5Dkc,GAA0B3C,EAAMA,EAAKH,sBACzC,CACJ,CA0+EIkO,CAAqB3lE,EAAIwsD,MAAOxsD,EAAIyhC,MAAO8jC,EAZrB,SAAUloF,EAAOgoF,EAAWh+B,GAC9C,IAAIs6B,EAAe,KACftkF,EACAkkD,EAASxkD,OAAOM,IAGhBskF,EAAe,IAAIxB,GAAe94B,EAAM,IAAI83B,GAAcn/D,EAAIwsD,MAAOxsD,EAAIyhC,OAAQ+M,IACjFjN,EAAS5mD,QAAQ,IAAIwqF,GAAoBE,EAAW1D,IAE5D,EAG+EpG,EAAWW,GACnF36B,EAAS1kD,OACpB,CAkBA,IAAI8hF,GAA8B,WAC9B,SAASA,EAAap1D,GAClB7xB,KAAK6xB,UAAYA,CACrB,CAuDA,OAtDAo1D,EAAajpF,UAAUoe,OAAS,SAAU2mC,GACtCmrC,2BAAiB,sBAAuB,EAAG,EAAGvgD,UAAU7lC,QACxDqmF,2BAAiB,sBAAuB,aAAcprC,GAAY,GAClE,IAAI3hD,EAASpB,KAAK6xB,UAAUzV,SAI5B,OAHI2mC,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACA6lF,EAAajpF,UAAUouC,OAAS,SAAU2W,GACtCmrC,2BAAiB,sBAAuB,EAAG,EAAGvgD,UAAU7lC,QACxDqmF,2BAAiB,sBAAuB,aAAcprC,GAAY,GAClE,IAAI3hD,EAASpB,KAAK6xB,UAAUua,SAI5B,OAHI2W,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACA6lF,EAAajpF,UAAU6jB,IAAM,SAAUvf,EAAOygD,GAC1CmrC,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QACrDqmF,2BAAiB,mBAAoB,aAAcprC,GAAY,GAC/D,IAAI3hD,EAASpB,KAAK6xB,UAAUhQ,IAAIvf,GAIhC,OAHIygD,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACA6lF,EAAajpF,UAAUmpF,gBAAkB,SAAU7kF,EAAO+xD,EAAUtR,GAChEmrC,2BAAiB,+BAAgC,EAAG,EAAGvgD,UAAU7lC,QACjEqmF,2BAAiB,+BAAgC,aAAcprC,GAAY,GAC3E,IAAI3hD,EAASpB,KAAK6xB,UAAUs1D,gBAAgB7kF,EAAO+xD,GAInD,OAHItR,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACA6lF,EAAajpF,UAAU4V,OAAS,SAAUw6E,EAAerrC,GAErD,GADAmrC,2BAAiB,sBAAuB,EAAG,EAAGvgD,UAAU7lC,QACpD9F,MAAMC,QAAQmsF,GAAgB,CAE9B,IADA,IAAIC,EAAmB,CAAC,EACfnmF,EAAI,EAAGA,EAAIkmF,EAActmF,SAAUI,EACxCmmF,EAAiB,GAAKnmF,GAAKkmF,EAAclmF,GAE7CkmF,EAAgBC,EAChBrhF,EAAK,+NAET,CACAmhF,2BAAiB,sBAAuB,aAAcprC,GAAY,GAClE,IAAI3hD,EAASpB,KAAK6xB,UAAUje,OAAOw6E,GAInC,OAHIrrC,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACO6lF,CACX,CA3DkC,GA6E9ByG,GAAmC,WAInC,SAASA,EAAkBC,EAAWxgE,GAClCntB,KAAK2tF,UAAYA,EACjB3tF,KAAKmtB,SAAWA,CACpB,CAOA,OAJAugE,EAAkB1vF,UAAU+pF,OAAS,WAEjC,OADAmG,2BAAiB,2BAA4B,EAAG,EAAGvgD,UAAU7lC,QACtD,CAAE6lF,UAAW3tF,KAAK2tF,UAAWxgE,SAAUntB,KAAKmtB,SAAS46D,SAChE,EACO2F,CACX,CAfuC,GAsCnChF,GAA8B,WAC9B,SAASA,EAAa4F,EAAWz8D,GAC7B7xB,KAAKsuF,UAAYA,EACjBtuF,KAAK6xB,UAAYA,CACrB,CA2HA,OApHA62D,EAAa1qF,UAAU0kB,IAAM,WAEzB,OADAwrE,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QAC9C9H,KAAK6xB,UAAUnP,KAC1B,EAMAgmE,EAAa1qF,UAAUqoF,UAAY,WAE/B,OADA6H,2BAAiB,yBAA0B,EAAG,EAAGvgD,UAAU7lC,QACpD9H,KAAK6xB,UAAUw0D,WAC1B,EAGAqC,EAAa1qF,UAAU+pF,OAAS,WAG5B,OADAmG,2BAAiB,sBAAuB,EAAG,EAAGvgD,UAAU7lC,QACjD9H,KAAK6xB,UAAUk2D,QAC1B,EAMAW,EAAa1qF,UAAU8qF,OAAS,WAE5B,OADAoF,2BAAiB,sBAAuB,EAAG,EAAGvgD,UAAU7lC,QACjD9H,KAAK6xB,UAAUi3D,QAC1B,EAOAJ,EAAa1qF,UAAUixB,MAAQ,SAAU3U,GAKrC,OAJA4zE,2BAAiB,qBAAsB,EAAG,EAAGvgD,UAAU7lC,QAEvDwS,EAAO/S,OAAO+S,GACd0jE,GAAmB,qBAAsB,OAAQ1jE,GAAM,GAChD,IAAIouE,EAAa1oF,KAAKsuF,UAAWtuF,KAAK6xB,UAAU5C,MAAM3U,GACjE,EAOAouE,EAAa1qF,UAAUm3D,SAAW,SAAU76C,GAGxC,OAFA4zE,2BAAiB,wBAAyB,EAAG,EAAGvgD,UAAU7lC,QAC1Dk2E,GAAmB,wBAAyB,OAAQ1jE,GAAM,GACnDta,KAAK6xB,UAAUsjC,SAAS76C,EACnC,EAMAouE,EAAa1qF,UAAUy2D,YAAc,WAEjC,OADAy5B,2BAAiB,2BAA4B,EAAG,EAAGvgD,UAAU7lC,QACtD9H,KAAK6xB,UAAUwiC,QAC1B,EASAq0B,EAAa1qF,UAAU4kB,QAAU,SAAUxR,GACvC,IAAIggC,EAAQpxC,KAGZ,OAFAkuF,2BAAiB,uBAAwB,EAAG,EAAGvgD,UAAU7lC,QACzDqmF,2BAAiB,uBAAwB,SAAU/8E,GAAQ,GACpDpR,KAAK6xB,UAAUjP,QAAQ,SAAU+jE,GACpC,OAAOv1E,EAAO,IAAIs3E,EAAat3C,EAAMk9C,UAAW3H,GACpD,EACJ,EAKA+B,EAAa1qF,UAAU+qF,YAAc,WAEjC,OADAmF,2BAAiB,2BAA4B,EAAG,EAAGvgD,UAAU7lC,QACtD9H,KAAK6xB,UAAUk3D,aAC1B,EACAvpF,OAAO+kB,eAAemkE,EAAa1qF,UAAW,MAAO,CACjDmC,IAAK,WACD,OAAOH,KAAK6xB,UAAUxwB,GAC1B,EACAgyC,YAAY,EACZC,cAAc,IAMlBo1C,EAAa1qF,UAAU03D,YAAc,WAEjC,OADAw4B,2BAAiB,2BAA4B,EAAG,EAAGvgD,UAAU7lC,QACtD9H,KAAK6xB,UAAUrQ,IAC1B,EAKAknE,EAAa1qF,UAAUuwF,OAAS,WAE5B,OADAL,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QAC9C,IAAI2lB,GAAUztB,KAAKsuF,UAAWtuF,KAAK6xB,UAAUvJ,IACxD,EACA9oB,OAAO+kB,eAAemkE,EAAa1qF,UAAW,MAAO,CACjDmC,IAAK,WACD,OAAOH,KAAKuuF,QAChB,EACAl7C,YAAY,EACZC,cAAc,IAEXo1C,CACX,CAhIkC,GAuI9B8F,GAAuB,WACvB,SAASA,EAAMC,EAAU58D,GACrB7xB,KAAKyuF,SAAWA,EAChBzuF,KAAK6xB,UAAYA,CACrB,CAuPA,OAtPA28D,EAAMxwF,UAAUsuB,GAAK,SAAUtY,EAAWzF,EAAUmgF,EAAyB3pF,GACzE,IACIwsC,EADAH,EAAQpxC,KAEZkuF,2BAAiB,WAAY,EAAG,EAAGvgD,UAAU7lC,QAC7CqmF,2BAAiB,WAAY,WAAY5/E,GAAU,GACnD,IAAIogF,EAAMH,EAAMI,yBAAyB,WAAYF,EAAyB3pF,GAC1E8pF,EAAgB,SAAUC,EAAalI,GACvCr4E,EAAS1M,KAAK8sF,EAAI5pF,QAAS,IAAI2jF,GAAat3C,EAAMq9C,SAAUK,GAAclI,EAC9E,EACAiI,EAAc9H,aAAex4E,EAC7BsgF,EAAc9pF,QAAU4pF,EAAI5pF,QAC5B,IAAI0hF,EAAuC,QAArBl1C,EAAKo9C,EAAIvyE,cAA2B,IAAPm1B,OAAgB,EAASA,EAAGrkB,KAAKyhE,EAAI5pF,SACxF,OAAQiP,GACJ,IAAK,QAED,OADA0yE,GAAQ1mF,KAAK6xB,UAAWg9D,EAAepI,GAChCl4E,EACX,IAAK,cAED,OADA47E,GAAanqF,KAAK6xB,UAAWg9D,EAAepI,GACrCl4E,EACX,IAAK,gBAED,OADA+7E,GAAetqF,KAAK6xB,UAAWg9D,EAAepI,GACvCl4E,EACX,IAAK,gBAED,OADA67E,GAAepqF,KAAK6xB,UAAWg9D,EAAepI,GACvCl4E,EACX,IAAK,cAED,OADA87E,GAAarqF,KAAK6xB,UAAWg9D,EAAepI,GACrCl4E,EACX,QACI,MAAM,IAAI5O,MAAMs9E,sBAAY,WAAY,aAAxBA,4GAI5B,EACAuR,EAAMxwF,UAAUgmD,IAAM,SAAUhwC,EAAWzF,EAAUxJ,GAKjD,GAJAmpF,2BAAiB,YAAa,EAAG,EAAGvgD,UAAU7lC,QA3gH9B,SAAUi1E,EAAQ/oE,EAAW9T,GACjD,IAAIA,QAA0BI,IAAd0T,EAGhB,OAAQA,GACJ,IAAK,QACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACL,IAAK,cACD,MACJ,QACI,MAAM,IAAIrU,MAAMs9E,sBAAYF,EAAQ,aAApBE,4GAI5B,CA4/GQ8R,CAAkB,YAAa/6E,GAAW,GAC1Cm6E,2BAAiB,YAAa,WAAY5/E,GAAU,GACpDygF,gCAAsB,YAAa,UAAWjqF,GAAS,GACnDwJ,EAAU,CACV,IAAIsgF,EAAgB,WAAc,EAClCA,EAAc9H,aAAex4E,EAC7BsgF,EAAc9pF,QAAUA,EACxBi/C,GAAIhkD,KAAK6xB,UAAW7d,EAAW66E,EACnC,MAEI7qC,GAAIhkD,KAAK6xB,UAAW7d,EAE5B,EAIAw6E,EAAMxwF,UAAUmC,IAAM,WAClB,IAAIixC,EAAQpxC,KACZ,OAAOG,GAAIH,KAAK6xB,WAAWzxB,KAAK,SAAU0uF,GACtC,OAAO,IAAIpG,GAAat3C,EAAMq9C,SAAUK,EAC5C,EACJ,EAIAN,EAAMxwF,UAAUixF,KAAO,SAAUj7E,EAAWzF,EAAU2gF,EAA0BnqF,GAC5E,IAAIqsC,EAAQpxC,KACZkuF,2BAAiB,aAAc,EAAG,EAAGvgD,UAAU7lC,QAC/CqmF,2BAAiB,aAAc,WAAY5/E,GAAU,GACrD,IAAIogF,EAAMH,EAAMI,yBAAyB,aAAcM,EAA0BnqF,GAC7E8kD,EAAW,IAAIC,WACf+kC,EAAgB,SAAUC,EAAalI,GACvC,IAAIxlF,EAAS,IAAIsnF,GAAat3C,EAAMq9C,SAAUK,GAC1CvgF,GACAA,EAAS1M,KAAK8sF,EAAI5pF,QAAS3D,EAAQwlF,GAEvC/8B,EAAS5mD,QAAQ7B,EACrB,EACAytF,EAAc9H,aAAex4E,EAC7BsgF,EAAc9pF,QAAU4pF,EAAI5pF,QAC5B,IAAI0hF,EAAiB,SAAU9gF,GACvBgpF,EAAIvyE,QACJuyE,EAAIvyE,OAAOva,KAAK8sF,EAAI5pF,QAASY,GAEjCkkD,EAASxkD,OAAOM,EACpB,EACA,OAAQqO,GACJ,IAAK,QACD0yE,GAAQ1mF,KAAK6xB,UAAWg9D,EAAepI,EAAgB,CACnDqD,UAAU,IAEd,MACJ,IAAK,cACDK,GAAanqF,KAAK6xB,UAAWg9D,EAAepI,EAAgB,CACxDqD,UAAU,IAEd,MACJ,IAAK,gBACDQ,GAAetqF,KAAK6xB,UAAWg9D,EAAepI,EAAgB,CAC1DqD,UAAU,IAEd,MACJ,IAAK,gBACDM,GAAepqF,KAAK6xB,UAAWg9D,EAAepI,EAAgB,CAC1DqD,UAAU,IAEd,MACJ,IAAK,cACDO,GAAarqF,KAAK6xB,UAAWg9D,EAAepI,EAAgB,CACxDqD,UAAU,IAEd,MACJ,QACI,MAAM,IAAInqF,MAAMs9E,sBAAY,aAAc,aAA1BA,4GAIxB,OAAOpzB,EAAS1kD,OACpB,EAIAqpF,EAAMxwF,UAAUmxF,aAAe,SAAUC,GAErC,OADAlB,2BAAiB,qBAAsB,EAAG,EAAGvgD,UAAU7lC,QAChD,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAvhCnD,SAAsBu9D,GAClB,GAAqB,kBAAVA,GAAsB76E,KAAKC,MAAM46E,KAAWA,GAASA,GAAS,EACrE,MAAM,IAAIzvF,MAAM,4DAEpB,OAAO,IAAIqrF,GAA4BoE,EAC3C,CAkhC8DD,CAAaC,IACvE,EAIAZ,EAAMxwF,UAAUqxF,YAAc,SAAUD,GAEpC,OADAlB,2BAAiB,oBAAqB,EAAG,EAAGvgD,UAAU7lC,QAC/C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAt/BnD,SAAqBu9D,GACjB,GAAqB,kBAAVA,GAAsB76E,KAAKC,MAAM46E,KAAWA,GAASA,GAAS,EACrE,MAAM,IAAIzvF,MAAM,2DAEpB,OAAO,IAAIyrF,GAA2BgE,EAC1C,CAi/B8DC,CAAYD,IACtE,EAIAZ,EAAMxwF,UAAUsxF,aAAe,SAAUh1E,GAErC,OADA4zE,2BAAiB,qBAAsB,EAAG,EAAGvgD,UAAU7lC,QAChD,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAj9BnD,SAAsBvX,GAClB,GAAa,SAATA,EACA,MAAM,IAAI3a,MAAM,+DAEf,GAAa,cAAT2a,EACL,MAAM,IAAI3a,MAAM,yEAEf,GAAa,WAAT2a,EACL,MAAM,IAAI3a,MAAM,mEAGpB,OADAq+E,GAAmB,eAAgB,OAAQ1jE,GAAM,GAC1C,IAAIgxE,GAA4BhxE,EAC3C,CAq8B8Dg1E,CAAah1E,IACvE,EAIAk0E,EAAMxwF,UAAUuxF,WAAa,WAEzB,OADArB,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QAC9C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAp7BxC,IAAI25D,IAq7BX,EAIAgD,EAAMxwF,UAAUwxF,gBAAkB,WAE9B,OADAtB,2BAAiB,wBAAyB,EAAG,EAAGvgD,UAAU7lC,QACnD,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAl6BxC,IAAI45D,IAm6BX,EAIA+C,EAAMxwF,UAAUyxF,aAAe,WAE3B,OADAvB,2BAAiB,qBAAsB,EAAG,EAAGvgD,UAAU7lC,QAChD,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UA/4BxC,IAAI65D,IAg5BX,EACA8C,EAAMxwF,UAAU0xF,QAAU,SAAUptF,EAAOsB,GAGvC,YAFc,IAAVtB,IAAoBA,EAAQ,MAChC4rF,2BAAiB,gBAAiB,EAAG,EAAGvgD,UAAU7lC,QAC3C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAjpCnD,SAAiBvvB,EAAOjB,GAGpB,YAFc,IAAViB,IAAoBA,EAAQ,MAChCw7E,GAAY,UAAW,MAAOz8E,GAAK,GAC5B,IAAIwpF,GAAuBvoF,EAAOjB,EAC7C,CA6oC8DquF,CAAQptF,EAAOsB,IACzE,EACA4qF,EAAMxwF,UAAU2xF,WAAa,SAAUrtF,EAAOsB,GAG1C,YAFc,IAAVtB,IAAoBA,EAAQ,MAChC4rF,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QAC9C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UA1mCnD,SAAoBvvB,EAAOjB,GAEvB,OADAy8E,GAAY,aAAc,MAAOz8E,GAAK,GAC/B,IAAIypF,GAA0BxoF,EAAOjB,EAChD,CAumC8DsuF,CAAWrtF,EAAOsB,IAC5E,EACA4qF,EAAMxwF,UAAU4xF,MAAQ,SAAUttF,EAAOsB,GAGrC,YAFc,IAAVtB,IAAoBA,EAAQ,MAChC4rF,2BAAiB,cAAe,EAAG,EAAGvgD,UAAU7lC,QACzC,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UAtvCnD,SAAevvB,EAAOjB,GAElB,OADAy8E,GAAY,QAAS,MAAOz8E,GAAK,GAC1B,IAAIopF,GAAqBnoF,EAAOjB,EAC3C,CAmvC8DuuF,CAAMttF,EAAOsB,IACvE,EACA4qF,EAAMxwF,UAAU6xF,UAAY,SAAUvtF,EAAOsB,GAGzC,YAFc,IAAVtB,IAAoBA,EAAQ,MAChC4rF,2BAAiB,kBAAmB,EAAG,EAAGvgD,UAAU7lC,QAC7C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UA/sCnD,SAAmBvvB,EAAOjB,GAEtB,OADAy8E,GAAY,YAAa,MAAOz8E,GAAK,GAC9B,IAAIspF,GAAyBroF,EAAOjB,EAC/C,CA4sC8DwuF,CAAUvtF,EAAOsB,IAC3E,EAKA4qF,EAAMxwF,UAAU8xF,QAAU,SAAUxtF,EAAOsB,GAEvC,OADAsqF,2BAAiB,gBAAiB,EAAG,EAAGvgD,UAAU7lC,QAC3C,IAAI0mF,EAAMxuF,KAAKyuF,SAAUh7C,GAAMzzC,KAAK6xB,UA53BnD,SAAiBvvB,EAAOjB,GAEpB,OADAy8E,GAAY,UAAW,MAAOz8E,GAAK,GAC5B,IAAIsqF,GAA4BrpF,EAAOjB,EAClD,CAy3B8DyuF,CAAQxtF,EAAOsB,IACzE,EAIA4qF,EAAMxwF,UAAU4D,SAAW,WAEvB,OADAssF,2BAAiB,iBAAkB,EAAG,EAAGvgD,UAAU7lC,QAC5C9H,KAAK6xB,UAAUjwB,UAC1B,EAGA4sF,EAAMxwF,UAAU+pF,OAAS,WAGrB,OADAmG,2BAAiB,eAAgB,EAAG,EAAGvgD,UAAU7lC,QAC1C9H,KAAK6xB,UAAUk2D,QAC1B,EAIAyG,EAAMxwF,UAAU0pF,QAAU,SAAUnhC,GAEhC,GADA2nC,2BAAiB,gBAAiB,EAAG,EAAGvgD,UAAU7lC,UAC5Cy+C,aAAiBioC,GAAQ,CAE3B,MAAM,IAAI7uF,MADE,uFAEhB,CACA,OAAOK,KAAK6xB,UAAU61D,QAAQnhC,EAAM10B,UACxC,EAMA28D,EAAMI,yBAA2B,SAAU7R,EAAQgT,EAAiBhrF,GAChE,IAAI4pF,EAAM,CAAEvyE,YAAQ9b,EAAWyE,aAASzE,GACxC,GAAIyvF,GAAmBhrF,EACnB4pF,EAAIvyE,OAAS2zE,EACb5B,2BAAiBpR,EAAQ,SAAU4R,EAAIvyE,QAAQ,GAC/CuyE,EAAI5pF,QAAUA,EACdiqF,gCAAsBjS,EAAQ,UAAW4R,EAAI5pF,SAAS,QAErD,GAAIgrF,EAEL,GAA+B,kBAApBA,GAAoD,OAApBA,EAEvCpB,EAAI5pF,QAAUgrF,MAEb,IAA+B,oBAApBA,EAIZ,MAAM,IAAIpwF,MAAMs9E,sBAAYF,EAAQ,mBAChC,0DAJJ4R,EAAIvyE,OAAS2zE,CAKjB,CAEJ,OAAOpB,CACX,EACAnvF,OAAO+kB,eAAeiqE,EAAMxwF,UAAW,MAAO,CAC1CmC,IAAK,WACD,OAAO,IAAIstB,GAAUztB,KAAKyuF,SAAU,IAAIhH,GAAcznF,KAAK6xB,UAAUijD,MAAO90E,KAAK6xB,UAAUk4B,OAC/F,EACA1W,YAAY,EACZC,cAAc,IAEXk7C,CACX,CA5P2B,GA6PvB/gE,GAA2B,SAAU02B,GASrC,SAAS12B,EAAUghE,EAAU58D,GACzB,IAAIuf,EAAQ+S,EAAOtiD,KAAK7B,KAAMyuF,EAAU,IAAIlH,GAAU11D,EAAUijD,MAAOjjD,EAAUk4B,MAAO,IAAI+W,IAAe,KAAW9gE,KAGtH,OAFAoxC,EAAMq9C,SAAWA,EACjBr9C,EAAMvf,UAAYA,EACXuf,CACX,CA0IA,OAvJAkT,oBAAU72B,EAAW02B,GAerB12B,EAAUzvB,UAAUuM,OAAS,WAEzB,OADA2jF,2BAAiB,gBAAiB,EAAG,EAAGvgD,UAAU7lC,QAC3C9H,KAAK6xB,UAAUxwB,GAC1B,EACAosB,EAAUzvB,UAAUixB,MAAQ,SAAU6zB,GAKlC,OAJAorC,2BAAiB,kBAAmB,EAAG,EAAGvgD,UAAU7lC,QAC1B,kBAAfg7C,IACPA,EAAav7C,OAAOu7C,IAEjB,IAAIr1B,EAAUztB,KAAKyuF,SAAUx/D,GAAMjvB,KAAK6xB,UAAWixB,GAC9D,EAEAr1B,EAAUzvB,UAAUgyF,UAAY,WAC5B9B,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QACrD,IAAIsqB,EAASpyB,KAAK6xB,UAAUO,OAC5B,OAAOA,EAAS,IAAI3E,EAAUztB,KAAKyuF,SAAUr8D,GAAU,IAC3D,EAEA3E,EAAUzvB,UAAUiyF,QAAU,WAE1B,OADA/B,2BAAiB,iBAAkB,EAAG,EAAGvgD,UAAU7lC,QAC5C,IAAI2lB,EAAUztB,KAAKyuF,SAAUzuF,KAAK6xB,UAAUM,KACvD,EACA1E,EAAUzvB,UAAU6jB,IAAM,SAAUsgE,EAAQp/B,GACxCmrC,2BAAiB,gBAAiB,EAAG,EAAGvgD,UAAU7lC,QAClDqmF,2BAAiB,gBAAiB,aAAcprC,GAAY,GAC5D,IAAI3hD,EAASygB,GAAI7hB,KAAK6xB,UAAWswD,GAIjC,OAHIp/B,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACAqsB,EAAUzvB,UAAU4V,OAAS,SAAUs7C,EAAQnM,GAE3C,GADAmrC,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QACjD9F,MAAMC,QAAQitD,GAAS,CAEvB,IADA,IAAIm/B,EAAmB,CAAC,EACfnmF,EAAI,EAAGA,EAAIgnD,EAAOpnD,SAAUI,EACjCmmF,EAAiB,GAAKnmF,GAAKgnD,EAAOhnD,GAEtCgnD,EAASm/B,EACTrhF,EAAK,uMAIT,CACAixE,GAAqB,mBAAoBj+E,KAAK6xB,UAAUk4B,OACxDokC,2BAAiB,mBAAoB,aAAcprC,GAAY,GAC/D,IAAI3hD,EAASwS,GAAO5T,KAAK6xB,UAAWq9B,GAIpC,OAHInM,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACAqsB,EAAUzvB,UAAUmpF,gBAAkB,SAAUhF,EAAQpoB,EAAahX,GACjEmrC,2BAAiB,4BAA6B,EAAG,EAAGvgD,UAAU7lC,QAC9DqmF,2BAAiB,4BAA6B,aAAcprC,GAAY,GACxE,IAAI3hD,EA/rDZ,SAAyBknB,EAAKhmB,EAAO+xD,GAIjC,GAHA4pB,GAAqB,kBAAmB31D,EAAIyhC,OAC5C+yB,GAAwB,kBAAmBx6E,EAAOgmB,EAAIyhC,OAAO,GAC7D8zB,GAAiB,kBAAmBxpB,GAAU,GAC9B,YAAZ/rC,EAAIjnB,KAAiC,UAAZinB,EAAIjnB,IAC7B,KAAM,2BAA6BinB,EAAIjnB,IAAM,0BAEjD,IAAIwoD,EAAW,IAAIC,WAEnB,OADAo4B,GAAoB55D,EAAIwsD,MAAOxsD,EAAIyhC,MAAOznD,EAAO+xD,EAAUxK,EAASq9B,aAAa,WAAc,IACxFr9B,EAAS1kD,OACpB,CAqrDqBgiF,CAAgBnnF,KAAK6xB,UAAWswD,EAAQpoB,GAIrD,OAHIhX,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACAqsB,EAAUzvB,UAAUouC,OAAS,SAAU2W,GACnCmrC,2BAAiB,mBAAoB,EAAG,EAAGvgD,UAAU7lC,QACrDqmF,2BAAiB,mBAAoB,aAAcprC,GAAY,GAC/D,IAAI3hD,EArxDZ,SAAgBknB,GAEZ,OADA21D,GAAqB,SAAU31D,EAAIyhC,OAC5BloC,GAAIyG,EAAK,KACpB,CAkxDqB8jB,CAAOpsC,KAAK6xB,WAIzB,OAHIkxB,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACAqsB,EAAUzvB,UAAUkL,YAAc,SAAU2kF,EAAmB9qC,EAAYyhC,GACvE,IAAIpzC,EAAQpxC,KACZkuF,2BAAiB,wBAAyB,EAAG,EAAGvgD,UAAU7lC,QAC1DqmF,2BAAiB,wBAAyB,oBAAqBN,GAAmB,GAClFM,2BAAiB,wBAAyB,aAAcprC,GAAY,GAxvHtD,SAAUg6B,EAAQgB,EAAcmS,EAAMhwF,GACxD,KAAIA,QAAqBI,IAAT4vF,IAGI,mBAATA,EACP,MAAM,IAAIvwF,MAAMs9E,sBAAYF,EAAQgB,GAAgB,qBAE5D,CAkvHQoS,CAAgB,wBAAyB,eAAgB3L,GAAc,GACvE,IAAIpjF,EAASwsF,GAAe5tF,KAAK6xB,UAAWg8D,EAAmB,CAC3DrJ,aAAcA,IACfpkF,KAAK,SAAUgwF,GACd,OAAO,IAAI1C,GAAkB0C,EAAkBzC,UAAW,IAAIjF,GAAat3C,EAAMq9C,SAAU2B,EAAkBjjE,UACjH,GAMA,OALI41B,GACA3hD,EAAOhB,KAAK,SAAUgwF,GAClB,OAAOrtC,EAAW,KAAMqtC,EAAkBzC,UAAWyC,EAAkBjjE,SAC3E,EAAG,SAAUxnB,GAAS,OAAOo9C,EAAWp9C,GAAO,EAAO,KAAO,GAE1DvE,CACX,EACAqsB,EAAUzvB,UAAUqyF,YAAc,SAAUh8B,EAAUtR,GAClDmrC,2BAAiB,wBAAyB,EAAG,EAAGvgD,UAAU7lC,QAC1DqmF,2BAAiB,wBAAyB,aAAcprC,GAAY,GACpE,IAAI3hD,EA1vDZ,SAAqBknB,EAAK+rC,GACtB/rC,EAAMq/D,6BAAmBr/D,GACzB21D,GAAqB,cAAe31D,EAAIyhC,OACxC8zB,GAAiB,cAAexpB,GAAU,GAC1C,IAAIxK,EAAW,IAAIC,WAEnB,OADAo4B,GAAoB55D,EAAIwsD,MAAOvvB,GAAUj9B,EAAIyhC,MAAO,aAAcsK,EAAU,KAAMxK,EAASq9B,aAAa,WAAc,IAC/Gr9B,EAAS1kD,OACpB,CAmvDqBkrF,CAAYrwF,KAAK6xB,UAAWwiC,GAIzC,OAHItR,GACA3hD,EAAOhB,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAEhGvE,CACX,EACAqsB,EAAUzvB,UAAUmZ,KAAO,SAAU7U,EAAOygD,GACxC,IAAI3R,EAAQpxC,KACZkuF,2BAAiB,iBAAkB,EAAG,EAAGvgD,UAAU7lC,QACnDqmF,2BAAiB,iBAAkB,aAAcprC,GAAY,GAC7D,IAAIutC,EAj2DZ,SAAcl+D,EAAQ9vB,GAClB8vB,EAASu1D,6BAAmBv1D,GAC5B6rD,GAAqB,OAAQ7rD,EAAO23B,OACpC+yB,GAAwB,OAAQx6E,EAAO8vB,EAAO23B,OAAO,GACrD,IAUI5kD,EAVAuE,EAAMw3E,GAAe9uD,EAAO0iD,OAC5BlxE,EAAOg5D,GAAWlzD,GAOlB6mF,EAAmBthE,GAAMmD,EAAQxuB,GACjC4sF,EAAUvhE,GAAMmD,EAAQxuB,GAU5B,OAPIuB,EADS,MAAT7C,EACUuf,GAAI2uE,EAASluF,GAAOlC,KAAK,WAAc,OAAOowF,CAAS,GAGvDxtF,QAAQC,QAAQutF,GAE9BD,EAAiBnwF,KAAO+E,EAAQ/E,KAAK8sB,KAAK/nB,GAC1CorF,EAAiB18E,MAAQ1O,EAAQ/E,KAAK8sB,KAAK/nB,OAAS7E,GAC7CiwF,CACX,CAy0DyBp5E,CAAKnX,KAAK6xB,UAAWvvB,GAClC6C,EAAUmrF,EAAWlwF,KAAK,SAAUqwF,GAAU,OAAO,IAAIhjE,EAAU2jB,EAAMq9C,SAAUgC,EAAS,GAC5F1tC,GACA59C,EAAQ/E,KAAK,WAAc,OAAO2iD,EAAW,KAAO,EAAG,SAAUp9C,GAAS,OAAOo9C,EAAWp9C,EAAQ,GAExG,IAAIvE,EAAS,IAAIqsB,EAAUztB,KAAKyuF,SAAU6B,GAG1C,OAFAlvF,EAAOhB,KAAO+E,EAAQ/E,KAAK8sB,KAAK/nB,GAChC/D,EAAOyS,MAAQ1O,EAAQ0O,MAAMqZ,KAAK/nB,OAAS7E,GACpCc,CACX,EACAqsB,EAAUzvB,UAAUk4C,aAAe,WAE/B,OADA+nC,GAAqB,yBAA0Bj+E,KAAK6xB,UAAUk4B,OACvD,IAAIk9B,GAAa,IAAID,GAAehnF,KAAK6xB,UAAUijD,MAAO90E,KAAK6xB,UAAUk4B,OACpF,EACAvqD,OAAO+kB,eAAekJ,EAAUzvB,UAAW,MAAO,CAC9CmC,IAAK,WACD,OAAOH,KAAKuK,QAChB,EACA8oC,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAekJ,EAAUzvB,UAAW,SAAU,CACjDmC,IAAK,WACD,OAAOH,KAAKgwF,WAChB,EACA38C,YAAY,EACZC,cAAc,IAElB9zC,OAAO+kB,eAAekJ,EAAUzvB,UAAW,OAAQ,CAC/CmC,IAAK,WACD,OAAOH,KAAKiwF,SAChB,EACA58C,YAAY,EACZC,cAAc,IAEX7lB,CACX,CAzJ+B,CAyJ7B+gE,IAqBE3B,GAA0B,WAI1B,SAASA,EAASh7D,EAAWrrB,GACzB,IAAI4qC,EAAQpxC,KACZA,KAAK6xB,UAAYA,EACjB7xB,KAAKwG,IAAMA,EACXxG,KAAKd,SAAW,CACZ6D,OAAQ,WAAc,OAAOquC,EAAMvf,UAAUpB,SAAW,EAEhE,CAkDA,OAxCAo8D,EAAS7uF,UAAU+F,YAAc,SAAUC,EAAMC,EAAMH,QACnC,IAAZA,IAAsBA,EAAU,CAAC,GACrCqpF,GAAwBntF,KAAK6xB,UAAW7tB,EAAMC,EAAMH,EACxD,EACA+oF,EAAS7uF,UAAUsqB,IAAM,SAAUhO,GAE/B,GADA4zE,2BAAiB,eAAgB,EAAG,EAAGvgD,UAAU7lC,QAC7CwS,aAAgBmT,GAAW,CAC3B,IAAIo7D,EAAW71D,GAAWhzB,KAAK6xB,UAAWvX,EAAK1Y,YAC/C,OAAO,IAAI6rB,GAAUztB,KAAM6oF,EAC/B,CAEQA,EAAWvgE,GAAItoB,KAAK6xB,UAAWvX,GACnC,OAAO,IAAImT,GAAUztB,KAAM6oF,EAEnC,EAOAgE,EAAS7uF,UAAUg1B,WAAa,SAAU3vB,GAEtC6qF,2BADc,sBACY,EAAG,EAAGvgD,UAAU7lC,QAC1C,IAAI+gF,EAAW71D,GAAWhzB,KAAK6xB,UAAWxuB,GAC1C,OAAO,IAAIoqB,GAAUztB,KAAM6oF,EAC/B,EAEAgE,EAAS7uF,UAAU0yF,UAAY,WAE3B,OADAxC,2BAAiB,qBAAsB,EAAG,EAAGvgD,UAAU7lC,QA14B5Ca,EA24BM3I,KAAK6xB,WA14B1BlpB,EAAKg/E,6BAAmBh/E,IACrBqgF,iBAAiB,kBACpBtG,GAAc/5E,EAAGmsE,OAHrB,IAAmBnsE,CA44Bf,EACAkkF,EAAS7uF,UAAUuvF,SAAW,WAE1B,OADAW,2BAAiB,oBAAqB,EAAG,EAAGvgD,UAAU7lC,QAC/CylF,GAASvtF,KAAK6xB,UACzB,EACAg7D,EAAS8D,YAAc,CACnBC,UAn2BGpD,GAo2BHqD,UAAW,SAAUjiC,GAAS,OA31BtC,SAAmBA,GACf,MAAO,CACH,MAAO,CACH,UAAaA,GAGzB,CAq1B6CiiC,CAAUjiC,EAAQ,GAEpDi+B,CACX,CA9D8B,GA0I9B,IAAI3tF,GAAwBM,OAAOsxF,OAAO,CACxCC,UAAW,KACXC,iBAvDqB,WACnBl1C,GAAoB/D,gBACpBxC,GAAsBsC,YAC1B,EAqDEo5C,gBApDoB,WAClB17C,GAAsBwC,eAC1B,EAmDEqG,sBAjD0B,WACxB,OAAOtC,GAAiC,aAC5C,EAgDEo1C,yBA/C6B,SAAU5oE,EAAK/Z,GACzB+Z,EAAIuJ,UAAUijD,MAAMkL,sBAE1Bn3B,uBAAyBt6C,CACxC,EA4CEi1C,MA3CU,SAAUl7B,EAAK6oE,IA35G3B,SAAmBjR,EAAMiR,GAErB,QADkB,IAAdA,IAAwBA,GAAY,GACjB,qBAAZpkF,QAAX,CAGA,IAAIy2C,EACA2tC,GACKjR,EAAKxb,iBACNwb,EAAKxb,eAAiB,IAAIT,GAAcic,EAAKlqC,SAEjDwN,EAAQ08B,EAAKxb,eAAevkE,OAG5BqjD,EAAQ08B,EAAKlqC,OAAO71C,MAExB,IAAIixF,EAAc5xF,OAAOo/B,KAAK4kB,GAAOva,OAAO,SAAUooD,EAAeC,GACjE,OAAO/8E,KAAK4nB,IAAIm1D,EAAaxpF,OAAQupF,EACzC,EAAG,GACH3hD,EAAK8T,EAAO,SAAU6gB,EAAM/hE,GAGxB,IAFA,IAAIivF,EAAaltB,EAERn8D,EAAIm8D,EAAKv8D,OAAQI,EAAIkpF,EAAc,EAAGlpF,IAC3CqpF,GAAc,IAElBxkF,QAAQqhC,IAAImjD,EAAajvF,EAC7B,EArBA,CAsBJ,CAk4GIkvF,CAAUlpE,EAAIuJ,UAAUijD,MAAOqc,EACnC,EA0CEM,sBAzC0B,SAAUnpE,EAAKuY,IAn4G3C,SAAmCq/C,EAAMr/C,GAxlIzC,IAAkC6wD,EAAUrtB,EAylIxC6b,EAAKlqC,OAAO/B,iBAAiBpT,GAzlIC6wD,EA0lILxR,EAAKS,eA1lIUtc,EA0lIMxjC,EAzlI9C6wD,EAASjtB,eAAeJ,IAAQ,CA0lIpC,CAi4GIstB,CAA0BrpE,EAAIuJ,UAAUijD,MAAOj0C,EACnD,EAwCE8+C,gBAvCoB,SAAUr3D,GAC5B,OAAOA,EAAIuJ,UAAUijD,MAAM6K,eAC/B,EAsCEiS,oBArCwB,SAAUtpE,EAAK/Z,GACrC,OA3nHJ,SAAiC2xE,EAAM3xE,GACnC2xE,EAAKJ,6BAA+BvxE,CACxC,CAynHWsjF,CAAwBvpE,EAAIuJ,UAAUijD,MAAOvmE,EACxD,EAoCEujF,eA1BF,SAAwBvgD,GACpB,IAAI/qC,EAAM+qC,EAAG/qC,IAAKnD,EAAMkuC,EAAGluC,IAAKsoC,EAAU4F,EAAG5F,QAASomD,EAAiBxgD,EAAGwgD,eAAgB1sD,EAAYkM,EAAGlM,UAAWmZ,EAAKjN,EAAGsB,UAAWA,OAAmB,IAAP2L,GAAwBA,EAC3K5S,EAAcD,GAKd,IAAI/rC,EAAe,IAAIoyF,WAAS,gBAAiB,IAAIC,qBAAmB,wBAExE,OADAryF,EAAasyF,aAAa,IAAIC,YAAU,gBAAiB,WAAc,OAAOJ,CAAgB,EAAG,YAC1F,CACHj0F,SAAU,IAAI+uF,GAAST,GAA2B5lF,EAAK5G,OAC/BU,EAAW+C,EAAKwvC,GAAYrsC,GACpD6+B,UAAWA,EAEnB,IA+BI+sD,GAAiB1qC,GAErBA,GAAqB1pD,UAAUq0F,aAAe,SAAUvvC,EAAYC,GAChE/iD,KAAKghD,YAAY,IAAK,CAAEzkC,EAAGumC,GAAcC,EAC7C,EAEA2E,GAAqB1pD,UAAUs0F,KAAO,SAAU9wF,EAAM+wF,GAClDvyF,KAAKghD,YAAY,OAAQ,CAAExG,EAAGh5C,GAAQ+wF,EAC1C,EAEA,IAAIC,GAAqBtzC,GAarBuzC,GAAmB//C,EAWnBggD,GAA2BlzF,OAAOsxF,OAAO,CAC3CC,UAAW,KACXqB,eAAgBA,GAChBI,mBAAoBA,GACpBG,WA3Be,SAAUC,GACvB,IAAIC,EAASnrC,GAAqB1pD,UAAU4M,IAO5C,OANA88C,GAAqB1pD,UAAU4M,IAAM,SAAUk4C,EAAYthD,EAAMuhD,EAAYC,QAC5D1iD,IAAT0iD,IACAA,EAAO4vC,KAEXC,EAAOhxF,KAAK7B,KAAM8iD,EAAYthD,EAAMuhD,EAAYC,EACpD,EACO,WACH0E,GAAqB1pD,UAAU4M,IAAMioF,CACzC,CACJ,EAiBEJ,iBAAkBA,GAClBK,gBAhBoB,SAAUr/C,GAC5B,OAAOA,EAAM5hB,UAAU24B,gBAC3B,EAeEuoC,gBAXoB,SAAUA,IA3oChC,SAAoCA,GAChC5G,GAAgB4G,CACpB,CA0oCIC,CAA2BD,EAC/B,IA4BIpC,GAAc9D,GAAS8D,aAC3B,SAA0B7yF,GAEtB8tC,EAAc9tC,EAASy7B,aAEvB,IAAI8L,EAAYvnC,EAASoB,SAASmH,kBAAkB,IAAI8rF,YAAU,WAAY,SAAU7rF,EAAWirC,GAC/F,IAAIluC,EAAMkuC,EAAG0hD,mBAGTzsF,EAAMF,EAAUG,YAAY,OAAOxG,eACnCL,EAAe0G,EAAUG,YAAY,iBACrChE,EAAmB6D,EAAUG,YAAY,sBAC7C,OAAO,IAAIomF,GAAST,GAA2B5lF,EAAK5G,EAAc6C,EAAkBY,GAAMmD,EAC9F,EAAG,UACEE,gBAEL,CACI+mB,UAAWA,GACX+gE,MAAOA,GACP3B,SAAUA,GACVnE,aAAcA,GACd56C,cAAeA,EACf5uC,SAAUA,GACVyxF,YAAaA,GACb+B,YAAaA,KAEZ/rF,sBAAqB,IAC1B7I,EAAS4tC,gBAt9dF,qBACG,UAs9dN+K,wBACAy8C,EAAOC,QAAU9tD,EAEzB,CACA+tD,CAAiBC,U,8LVl8dXC,IAAM,MACV,qBACE,sIAGF,2BACE,oKAEF,yBACE,4GAEF,uBACE,kFAEF,wBACE,0EACF,kBACE,8EACF,iBACE,mFACF,iBACE,iFACF,qBAAiC,mB,GActBxsF,EAAgB,IAAIysF,eAC/B,WACA,WACAD,GWNIE,EAAmB,IAAIprC,IAChBqrC,EAA+B,CAC1CC,WAAW,EACXC,eAAgB,IAGZC,EAA0B,CAC9BC,SAAS,G,SAGKC,EAASttF,GACvB,OAAOgtF,EAAiBrzF,IAAIqG,IAAQitF,CACtC,C,SAEgBM,EAASvtF,EAAkBmS,GACzC66E,EAAiB3xE,IAAIrb,EAAKmS,EAC5B,C,SASgBq7E,IACd,OAAOJ,CACT,C5B3EO,IAAMK,EACX,yDAKWC,EAUO,IAVPA,EAcO,K6BXpB,aAGE,WACmBhlB,EACAilB,EACAC,EACAC,EACAC,GAIjB,GARiB,KAAAplB,YACA,KAAAilB,cACA,KAAAC,kBACA,KAAAC,aACA,KAAAC,aAPX,KAAAC,QAAoC,KAS1Cv0F,KAAKw0F,sBAAwBH,EAEzBA,EAAaC,EACf,MAAM,IAAI30F,MACR,0DAGL,CAwEH,OAtEE,YAAAugB,MAAA,WACElgB,KAAKw0F,sBAAwBx0F,KAAKq0F,WAClCr0F,KAAKo8C,SAAQ,GAAMvoC,MAAM,W,IAK3B,YAAAmM,KAAA,WACMhgB,KAAKu0F,UACPv0F,KAAKu0F,QAAQlvF,OAAO,aACpBrF,KAAKu0F,QAAU,K,EAInB,YAAAE,UAAA,WACE,QAASz0F,KAAKu0F,O,EAGF,YAAAn4C,QAAd,SAAsBs4C,G,oHACpB10F,KAAKggB,O,iBAGH,O,sBADAhgB,KAAKu0F,QAAU,IAAIzqC,WACnB,IAkDSh8C,EAlDG9N,KAAK20F,WAAWD,GAmDzB,IAAI1xF,QAAc,SAAAC,GACvBqC,WAAWrC,EAAS6K,E,YA5ClB,OARA,SAOA9N,KAAKu0F,QAAQtxF,UACb,GAAMjD,KAAKu0F,QAAQpvF,S,OAEnB,OAFA,SACAnF,KAAKu0F,QAAU,IAAIzqC,WACnB,GAAM9pD,KAAKkvE,a,OAGX,OAHA,SAEAlvE,KAAKu0F,QAAQtxF,UACb,GAAMjD,KAAKu0F,QAAQpvF,S,cAAnB,SAEAnF,KAAKo8C,SAAQ,GAAMvoC,MAAM,W,kCAIrB7T,KAAKm0F,YAAY,GACnBn0F,KAAKo8C,SAAQ,GAAOvoC,MAAM,W,GAI1B7T,KAAKggB,O,uBA0Bb,IAAelS,C,MArBL,YAAA6mF,WAAR,SAAmBD,GACjB,GAAIA,EAKF,OAFA10F,KAAKw0F,sBAAwBx0F,KAAKq0F,WAE3Br0F,KAAKo0F,kBAGZ,IAAMQ,EAA2B50F,KAAKw0F,sBAOtC,OALAx0F,KAAKw0F,uBAAyB,EAE1Bx0F,KAAKw0F,sBAAwBx0F,KAAKs0F,aACpCt0F,KAAKw0F,sBAAwBx0F,KAAKs0F,YAE7BM,C,EAGb,EAzFA,G,SCFgBC,IACd,OAAOl0F,KAAKm0F,UACd,C,SAEgBC,EAAgBvuF,GAC9B,IAAKstF,EAASttF,GAAKktF,UACjB,MAAM5sF,EAAcwE,OAAO,wBAAqC,CAC9DsJ,QAASpO,EAAI5C,MAGnB,C,SAkBgBoxF,EACdC,GAEA,OAAOrtF,SAAOstF,aACZxwF,KAAKC,UAAUswF,IACA,EAEnB,C,SCjBsBE,EACpB,EACAC,G,IADE/xF,EAAG,MAAEgB,EAAI,O,sIAGLC,EAAuB,CAC3B,eAAgB,qBAGZ+wF,EAAiBD,EAAuBn1F,aAAa,CACzDC,UAAU,OAGVoE,EAAQ,qBAAuB+wF,EAAeC,yBAE1CxxF,EAAuB,CAC3BW,OAAQ,OACRJ,KAAMK,KAAKC,UAAUN,GACrBC,QAAO,G,iBAII,O,sBAAA,GAAM8G,MAAM/H,EAAKS,I,cAA5Bc,EAAW,S,aAEX,M,WAAMkC,EAAcwE,OAAO,sBAAmC,CAC5D66B,qBAAsB,EAAc7mC,U,OAIxC,GAAwB,MAApBsF,EAASC,OACX,MAAMiC,EAAcwE,OAAO,qBAAkC,CAC3Dg7B,WAAY1hC,EAASC,S,iBAOR,O,sBAAA,GAAMD,EAASvC,Q,cAA9BgkC,EAAe,S,aAEf,M,WAAMv/B,EAAcwE,OAAO,oBAAiC,CAC1D66B,qBAAsB,EAAc7mC,U,OAOxC,KADMsY,EAAQyuB,EAAakvD,IAAI39E,MAAM,oBACtBA,EAAM,IAAMrV,MAAMd,OAAOmW,EAAM,KAC5C,MAAM9Q,EAAcwE,OAAO,oBAAiC,CAC1D66B,qBACE,uEACWE,EAAakvD,MAM9B,OAHMC,EAAwC,IAAnB/zF,OAAOmW,EAAM,IAElClO,EAAM5H,KAAK4H,MACV,CAAP,EAAO,CACLlJ,MAAO6lC,EAAaovD,iBACpBC,iBAAkBhsF,EAAM8rF,EACxBG,mBAAoBjsF,I,IAEvB,C,SAEeksF,EACdpvF,EACAqvF,GAEM,MAA+BrvF,EAAI1C,QAAjCD,EAAS,YAAEkH,EAAK,QAAEiB,EAAM,SAEhC,MAAO,CACL3I,IAAQ4wF,EAAa,aAAapwF,EAAS,SAASkH,EAA5CkpF,+BAA4FjoF,EACpG3H,KAAM,CAEJyxF,gBAAiBD,GAGvB,C,SAEgBE,EACdvvF,EACAwvF,GAEM,MAA+BxvF,EAAI1C,QAAjCD,EAAS,YAAEkH,EAAK,QAAEiB,EAAM,SAEhC,MAAO,CACL3I,IAAQ4wF,EAAa,aAAapwF,EAAS,SAASkH,EAA5CkpF,2BAAwFjoF,EAChG3H,KAAM,CAEJ4xF,YAAaD,GAGnB,CCjHA,IAEME,EAAa,2BACbC,EAAkB,cAEpBlsF,EAAyC,KAC7C,SAASmsF,IACP,OAAInsF,IAIJA,EAAY,IAAIjH,QAAQ,SAACC,EAASoC,GAChC,IACE,IAAMqrB,EAAUloB,UAAU6Q,KAbhB,8BACG,GAcbqX,EAAQqZ,UAAY,SAAA/6B,GAClB/L,EAAS+L,EAAM26B,OAA4BvoC,O,EAG7CsvB,EAAQoZ,QAAU,SAAA96B,G,MAChB3J,EACEyB,EAAcwE,OAAO,eAA4B,CAC/C66B,qBAAwD,QAAjC,EAAAn3B,EAAM26B,OAAsBhkC,aAAK,eAAErG,U,EAKhEoxB,EAAQsZ,gBAAkB,SAAAh7B,GACxB,IAAMrG,EAAMqG,EAAM26B,OAA4BvoC,OAO9C,GACO,IADC4N,EAAMlG,WAEVH,EAAGyB,kBAAkB8rF,EAAY,CAC/BjsD,QAAS,gB,EAIjB,MAAOvmC,GACP2B,EACEyB,EAAcwE,OAAO,eAA4B,CAC/C66B,qBAAsBziC,EAAEpE,UAG7B,C,GAGI2K,EACT,C,SAEgBosF,EACd7vF,GAEA,OAAO8vF,EAAKC,EAAW/vF,GACzB,CAiBA,SAAeqzC,EAAMx4C,EAAaiB,G,0HACrB,SAAM8zF,K,OASjB,OATMztF,EAAK,SAELO,EAAcP,EAAGO,YAAYgtF,EAAY,aACzCM,EAAQttF,EAAYD,YAAYitF,GAChCxlE,EAAU8lE,EAAM5rF,IAAI,CACxB2/B,aAAclpC,EACdiB,MAAK,IAGA,CAAP,EAAO,IAAIU,QAAQ,SAACC,EAASoC,GAC3BqrB,EAAQqZ,UAAY,SAAA0sD,GAClBxzF,G,EAGFiG,EAAY4gC,QAAU,SAAA96B,G,MACpB3J,EACEyB,EAAcwE,OAAO,cAA6B,CAChD66B,qBAAwD,QAAjC,EAAAn3B,EAAM26B,OAAsBhkC,aAAK,eAAErG,U,SAKnE,CAED,SAAeg3F,EAAKj1F,G,0HACP,SAAM+0F,K,OAMjB,OANMztF,EAAK,SAELO,EAAcP,EAAGO,YAAYgtF,EAAY,YACzCM,EAAQttF,EAAYD,YAAYitF,GAChCxlE,EAAU8lE,EAAMr2F,IAAIkB,GAEnB,CAAP,EAAO,IAAI2B,QAAQ,SAACC,EAASoC,GAC3BqrB,EAAQqZ,UAAY,SAAA/6B,GAClB,IAAM5N,EAAU4N,EAAM26B,OAAsBvoC,OAG1C6B,EADE7B,EACMA,EAAOkB,WAEPhC,E,EAIZ4I,EAAY4gC,QAAU,SAAA96B,G,MACpB3J,EACEyB,EAAcwE,OAAO,cAA2B,CAC9C66B,qBAAwD,QAAjC,EAAAn3B,EAAM26B,OAAsBhkC,aAAK,eAAErG,U,SAKnE,CAED,SAASi3F,EAAW/vF,GAClB,OAAUA,EAAI1C,QAAQiH,MAAK,IAAIvE,EAAI5C,IACrC,CCnIO,IAAM2gC,EAAS,IAAIuI,SAAO,uB,SCiCjB4pD,EACdlwF,EACAhG,GAEA,OAAIm2F,yB,SFyBJnwF,EACAhG,GAEA,OAAOq5C,EAAM08C,EAAW/vF,GAAMhG,EAChC,CE5BWo2F,CAAsBpwF,EAAKhG,GAAOqT,MAAM,SAAAnQ,GAE7C6gC,EAAOv3B,KAAK,8CAA8CtJ,E,GAIvDV,QAAQC,SACjB,C,SAEsB4zF,I,sHAKhBC,OAAyCx2F,E,iBAEtB,O,sBAAA,GFmBhBg2F,EAAKH,I,cEnBVW,EAAqB,S,0CAKvB,OAAKA,EAiBI,CAAP,EAAOA,IAfDC,EJzCD,uCAAuCtvF,QAAQ,QAAS,SAAAyP,GAC7D,IAAMwb,EAAqB,GAAhBne,KAAKuL,SAAiB,EAEjC,OADY,MAAN5I,EAAYwb,EAAS,EAAJA,EAAW,GACzB9wB,SAAS,G,IE6CqBpB,EEDZu2F,EFEtBl9C,EAAMs8C,EAAiB31F,IEFSqT,MAAM,SAAAnQ,GACzC,OAAA6gC,EAAOv3B,KAAK,sDAAsDtJ,E,GAGpEqJ,QAAQqhC,IACN,yBAAyB2oD,EAAQ,0EAE5B,CAAP,EAAOA,I,IFNgCv2F,C,cGtDrBw2F,I,6FAGpB,IAFMr+E,EAAQq7E,KAEJH,SAAWl7E,EAAMnY,MACzB,MAAO,CAAP,EAAOmY,EAAMnY,MAAM2E,SAGnB,MAAMxF,MAAM,oE,IAIf,CCJM,IAAMs3F,EAAwB,CAAEtxF,MAAO,iB,SAOxBpF,EACpBiG,EACA4uF,EACA/jD,G,YAAA,IAAAA,OAAe,G,sIAEf0jD,EAAgBvuF,GAEVmS,EAAQm7E,EAASttF,GAKnBhG,EAA2CmY,EAAMnY,MACjDmF,OAA2BrF,EAK1BE,EAAD,MAEkB,GAAMmY,EAAMu+E,oB,QAA1BC,EAAc,WACDC,EAAQD,KACzB32F,EAAQ22F,EAERpD,EAASvtF,EAAK,EAAF,uBAAOmS,GAAK,CAAEnY,MAAK,KAE/B62F,EAAqB7wF,EAAK,CAAEhG,MAAOA,EAAMA,S,iBAK7C,OAAK6wC,GAAgB7wC,GAAS42F,EAAQ52F,GAC7B,CAAP,EAAO,CACLA,MAAOA,EAAMA,QDnDEwzF,IACDH,SC4D4C,EAAAsB,EAC1D,EAAAY,E,GAA6BvvF,GAAK,GAAMwwF,MAFxC,M,OACoD,SAAM,gBAC1D,yBAAkC,YAClC5B,K,OAGF,OALMkC,EAAgD,SAKtD,GAAMZ,EAAoBlwF,EAAK8wF,I,OAG/B,OAHA,SAEAvD,EAASvtF,EAAK,EAAF,uBAAOmS,GAAK,CAAEnY,MAAO82F,KAC1B,CAAP,EAAO,CAAE92F,MAAO82F,EAAuB92F,Q,OAU/B,O,sBAAA,GAAMmY,EAAM4+E,SAAUh3F,Y,cAA9BC,EAAQ,S,+BAGR+jC,EAAO5+B,MAAM,GACbA,EAAQ,E,oBAILnF,EAAD,QAGFg3F,EAoLJ,SAA8B7xF,GAC5B,MAAO,CACLnF,MAAOw0F,EAAiBiC,GACxBtxF,MAAK,EAET,CAzLyB8xF,CAAqB9xF,G,gBAQ1C,OANA6xF,EAAqB,CACnBh3F,MAAOA,EAAMA,OAIfuzF,EAASvtF,EAAK,EAAF,uBAAOmS,GAAK,CAAEnY,MAAK,KAC/B,GAAMk2F,EAAoBlwF,EAAKhG,I,QAA/B,S,mBAIF,OADA62F,EAAqB7wF,EAAKgxF,GACnB,CAAP,EAAOA,G,IACR,C,SAEehmD,EACdhrC,EACA4uF,EACA7iF,EACAwH,EACA29E,GAEA,IAAM/+E,EAAQm7E,EAASttF,GACjBmxF,EAAuC,CAC3CxmF,KAAM4I,EACNpU,MAAO+xF,EACPnlF,KAAI,GAEAqlF,EAAW,EAAH,uBACTj/E,GAAK,CACRg7E,eAAgB,EAAF,iCAAMh7E,EAAMg7E,gBAAc,CAAEgE,MAM5C,IAAKC,EAASC,eAAgB,CAC5B,IAAMA,EA4DV,SACErxF,EACA4uF,GAFF,WAIE,OAAO,IAAI0C,EAGT,yD,0EACgBhE,EAASttF,GAIZhG,MAAP,MACO,GAAMD,EAASiG,EAAK4uF,I,cAA7Bh0F,EAAS,S,aAEA,SAAMb,EAASiG,EAAK4uF,GAAwB,I,OAArDh0F,EAAS,S,iBAIX,GAAIA,EAAOuE,MACT,MAAMvE,EAAOuE,M,gBAGjB,WAEE,OAAO,C,EAET,WACE,IAAMgT,EAAQm7E,EAASttF,GAEvB,GAAImS,EAAMnY,MAAO,CAEf,IAAIu3F,EACFp/E,EAAMnY,MAAMm1F,mBAEV,IADDh9E,EAAMnY,MAAMk1F,iBAAmB/8E,EAAMnY,MAAMm1F,oBAE5C,IAEIqC,EACJr/E,EAAMnY,MAAMk1F,iBAAmB,IAKjC,OAJAqC,EAAwBxjF,KAAKyT,IAC3B+vE,EACAC,GAEKzjF,KAAK4nB,IAAI,EAAG47D,EAAwBj2F,KAAK4H,M,CAEhD,OAAO,C,EAGXwqF,EACAA,EAEJ,CAhH2B+D,CAAqBzxF,EAAK4uF,GACjDwC,EAASC,eAAiBA,CAC3B,CAUD,IANKD,EAASC,eAAepD,aAAe97E,EAAMu/E,2BAChDN,EAASC,eAAe33E,QAKtBvH,EAAMnY,OAAS42F,EAAQz+E,EAAMnY,OAAQ,CACvC,IAAM,EAAamY,EAAMnY,MACzBwC,QAAQC,UACL7C,KAAK,WAAM,OAAA2Z,EAAS,CAAEvZ,MAAO,EAAWA,OAAQ,GAChDqT,MAAM,W,QAGe,MAAf8E,EAAMnY,OAGVmY,EACFu+E,mBACA92F,KAAK,SAAA+2F,GACAA,GAAeC,EAAQD,IACzBp9E,EAAS,CAAEvZ,MAAO22F,EAAY32F,O,GAGjCqT,MAAM,W,GAKXkgF,EAASvtF,EAAKoxF,EAChB,C,SAEgBO,EACd3xF,EACAuT,GAEA,IAAMpB,EAAQm7E,EAASttF,GAEjB4xF,EAAez/E,EAAMg7E,eAAe7kE,OACxC,SAAAupE,GAAiB,OAAAA,EAAclnF,OAAS4I,CAAQ,GAGxB,IAAxBq+E,EAAatwF,QACb6Q,EAAMk/E,gBACNl/E,EAAMk/E,eAAepD,aAErB97E,EAAMk/E,eAAe73E,OAGvB+zE,EAASvtF,EAAK,EAAF,uBACPmS,GAAK,CACRg7E,eAAgByE,IAEpB,CAwDA,SAASf,EACP7wF,EACAhG,GAIA,IAFA,IAEuB,MAFLszF,EAASttF,GAAKmtF,eAET,eAAW,CAA7B,IAAMvrE,EAAQ,KACjB,IACwB,aAAlBA,EAAS7V,MAAiD,MAAf/R,EAAMmF,MAInDyiB,EAASziB,MAAOnF,EAAMmF,OAKtByiB,EAASjX,KAAK3Q,E,CAEhB,MAAO83F,G,CAGV,CACH,C,SAEgBlB,EAAQ52F,GACtB,OAAOA,EAAMk1F,iBAAmB5zF,KAAK4H,MAAQ,CAC/C,CCnRO,IAAM6uF,EAAgB,0C,SAEbC,EACdhyF,EACAiyF,GAEA,IAAM9/E,EAAQm7E,EAASttF,GACjBkyF,EAAc,IAAI5uC,WAExBiqC,EAASvtF,EAAK,EAAF,uBAAOmS,GAAK,CAAEggF,eAAgB,CAAED,YAAW,MAEvD,IAAME,EAAQ,kBAAkBpyF,EAAI5C,KAC9Bi1F,EAAe7kE,SAASikB,cAAc,OAC5C4gD,EAAa7rD,GAAK4rD,EAClBC,EAAa9/C,MAAMC,QAAU,OAE7BhlB,SAAS3vB,KAAK40C,YAAY4/C,GAE1B,IAAM/D,EAAaD,IAsBnB,OArBKC,EAeHA,EAAWgE,MAAM,WACfC,EAAsBvyF,EAAKiyF,EAAS3D,EAAY8D,GAChDF,EAAYz1F,QAAQ6xF,E,GAuD1B,SAA6Bv5C,GAC3B,IAAM9B,EAASzlB,SAASikB,cAAc,UACtCwB,EAAOX,IAAM,GAAGy/C,EAChB9+C,EAAO8B,OAASA,EAChBvnB,SAASglE,KAAK//C,YAAYQ,EAC5B,CA5EIw/C,CAAoB,WAClB,IAAMnE,EAAaD,IAEnB,IAAKC,EAEH,MAAM,IAAIn1F,MAAM,gBAElBm1F,EAAWgE,MAAM,WAEfC,EAAsBvyF,EAAKiyF,EAAS3D,EAAY8D,GAChDF,EAAYz1F,QAAQ6xF,E,KAUnB4D,EAAYvzF,OACrB,C,SAEsB5E,EAASiG,G,oHAKX,OAJlBuuF,EAAgBvuF,GAIE,GADKstF,EAASttF,GAAKmyF,eACED,YAAYvzF,S,OAEnD,OAFM+zF,EAAY,SAEX,CAAP,EAAO,IAAIl2F,QAAQ,SAACC,EAAS+lB,GAE3B,IAAM2vE,EAAiB7E,EAASttF,GAAKmyF,eACrCO,EAAUJ,MAAM,WACd71F,EAEEi2F,EAAUC,QAAQR,EAAeS,SAAW,CAC1ChoF,OAAQ,mB,UAKjB,CAOD,SAAS2nF,EACPvyF,EACAiyF,EACA3D,EACAxuF,GAEA,IAAM8yF,EAAWtE,EAAWuE,OAAO/yF,EAAW,CAC5CgzF,QAASb,EACTj3E,KAAM,cAGF7I,EAAQm7E,EAASttF,GAEvButF,EAASvtF,EAAK,EAAF,uBACPmS,GAAK,CACRggF,eAAgB,EAAF,uBACThgF,EAAMggF,gBAAe,CACxBS,SAAQ,MAGd,CChEA,iBAOE,WAAoBG,GAAA,KAAAA,UAAoB,CAqC1C,OAhCQ,YAAAh5F,SAAN,W,oHACE,IAAKP,KAAKw5F,OAASx5F,KAAKy5F,wBAItB,MAAM3yF,EAAcwE,OAAO,wBAAqC,CAC9DsJ,QAAS,K,iBAKW,O,sBAAA,GAAM8kF,EAAkB15F,KAAKw5F,O,cAAnDG,EAAsB,S,aAGtB,M,SAAM7yF,EAAcwE,OAAO,mB,OAE7B,MAAO,CAAP,EAAO6pF,EACLS,EAAiC51F,KAAKw5F,KAAMG,GAC5C35F,KAAKy5F,0B,MAIT,YAAAjB,WAAA,SACEhyF,EACA4uF,GAEAp1F,KAAKw5F,KAAOhzF,EACZxG,KAAKy5F,wBAA0BrE,EAC/BwE,EAAoBpzF,EAAKxG,KAAKu5F,UAAU1lF,MAAM,W,IAIlD,EA5CA,GAiDA,aAGE,WAAoBgmF,GAAA,KAAAA,wBAAiD,CAqCvE,OAhCQ,YAAAt5F,SAAN,W,wHACE,IAAKP,KAAKw5F,KAIR,MAAM1yF,EAAcwE,OAAO,wBAAqC,CAC9DsJ,QAAS,KAIO,SAAM5U,KAAK65F,uBAAuBt5F,Y,OAatD,OAbMu5F,EAAc,SAGdC,EAAsBC,eAAaF,EAAYt5F,OAG/Cm1F,EACoB,OAAxBoE,GACAA,EAAsBj4F,KAAK4H,OAC3BqwF,EAAsB,EACI,IAAtBA,EACAj4F,KAAK4H,MAEJ,CAAP,2BAAYowF,GAAW,CAAEnE,mBAAkB,K,MAM7C,YAAA6C,WAAA,SAAWhyF,GACTxG,KAAKw5F,KAAOhzF,C,EAEhB,EAxCA,G,SCrDgBuhC,EACdvhC,EACAyzF,EAMA7E,EACA8C,GAEA,IAAMv/E,EAAQm7E,EAASttF,GACvB,GAAImS,EAAM+6E,UACR,MAAM5sF,EAAcwE,OAAO,oBAAiC,CAC1DsJ,QAASpO,EAAI5C,OAIjB,IAAMg0F,EAAQ,yBAAuBj/E,GAAK,CAAE+6E,WAAW,IAGvDkE,EAASV,mB,SL/BT1wF,G,0HAEImwF,qCACEn2F,OAAQF,E,iBAEF,O,sBAAA,GAAM+1F,EAAuB7vF,I,cAArChG,EAAQ,S,+BAGR+jC,EAAOv3B,KAAK,+CAA+C,G,aAE7D,MAAO,CAAP,EAAOxM,G,OAGT,MAAO,CAAP,OAAOF,G,IACR,CKiB+B45F,CAAqB1zF,GAAKpG,KAAK,SAAA+2F,GAI3D,OAHIA,GAAeC,EAAQD,IACzBpD,EAASvtF,EAAK,EAAF,uBAAOstF,EAASttF,IAAI,CAAEhG,MAAO22F,KAEpCA,C,GAIPS,EAASL,SADsB,kBAAtB0C,EACW,IAAIE,EAAoBF,GAE5CA,aAA6BE,GAC7BF,aAA6BG,EAETH,EAKA,IAAIG,EAAe,CACrC75F,SAAU05F,EAAkB15F,WAOhCq3F,EAASM,+BACuB53F,IAA9B43F,EACI1xF,EAAI6zF,+BACJnC,EAENnE,EAASvtF,EAAKoxF,GAEdA,EAASL,SAASiB,WAAWhyF,EAAK4uF,EACpC,C,SCnDgBkF,GACd9zF,EACA4uF,GAEA,MAAO,CACL5uF,IAAG,EACHuhC,SAAU,SACRkyD,EAKA/B,GAEA,OAAAnwD,EACEvhC,EAIAyzF,EAKA7E,EACA8C,E,EAEJqC,2BAA4B,SAACrC,GAC3B,O,SD0BJ1xF,EACA0xF,GAEA,IAAMv/E,EAAQm7E,EAASttF,GAGnBmS,EAAMk/E,kBAC0B,IAA9BK,EACFv/E,EAAMk/E,eAAe33E,QAErBvH,EAAMk/E,eAAe73E,QAGzB+zE,EAASvtF,EAAK,EAAF,uBAAOmS,GAAK,CAAEu/E,0BAAyB,IACrD,CCxCMqC,CAA2B/zF,EAAK0xF,E,EAClC33F,SAAU,SAAA8wC,GACR,O,SD4CJ7qC,EACA4uF,EACA/jD,G,oHAEe,SAAMmpD,EACnBh0F,EACA4uF,EACA/jD,I,OAEF,IALMjwC,EAAS,UAKJuE,MACT,MAAMvE,EAAOuE,MAEf,MAAO,CAAP,EAAO,CAAEnF,MAAOY,EAAOZ,Q,IACxB,CCzDKD,CAASiG,EAAK4uF,EAAwB/jD,E,EACxCopD,eAAgB,SACdC,EAGAhD,EACAiD,GAEA,O,SDoEJn0F,EACA4uF,EACAsF,EAGAhD,GAUA,IAAIkD,EAAsC,aACtCC,EAAmB,aAwBvB,OAtBED,EADqE,MAAlEF,EAA0DvpF,KAE3DupF,EACAvpF,KAAM+b,KAAKwtE,GAEJA,EAG2D,MAAnEA,EAA0D/0F,MAE3Dk1F,EACEH,EACA/0F,MAAOunB,KAAKwtE,GACLhD,IACTmD,EAAUnD,GAEZlmD,EACEhrC,EACA4uF,EAAsB,WAEtBwF,EACAC,GAEK,WAAM,OAAA1C,EAAoB3xF,EAAKo0F,EAAO,CAC/C,CC7GMH,CACEj0F,EACA4uF,EAMAsF,EACAhD,E,EAGJx4F,SAAU,CACR6D,OAAQ,WAEN,IADQ,IACoB,MADD+wF,EAASttF,GAAI,eACZ,eAAgB,CAAvC,IAAM6xF,EAAa,KACtBF,EAAoB3xF,EAAK6xF,EAAclnF,KACxC,CACD,OAAOnO,QAAQC,SAChB,GAGP,C,I3EpEM63F,GACJ,sBACF,SAA0BzH,GAExBA,EAASn0F,SAASmH,kBAChB,IAAI8rF,YANsC,WAQxC,SAAA7rF,GAIE,OAAOg0F,GAFKh0F,EAAUG,YAAY,OAAOxG,eACVqG,EAAUG,YAAY,mB,EAEtD,UAGAC,gBAAgB,CACfyzF,oBAAqBY,EACrBX,eAAgBY,IAQjBC,qBAAqB,YAMrBC,2BACC,SAAC50F,EAAW60F,EAAqBC,GACE90F,EAAUG,YACzCq0F,IAEuBtC,Y,IAMjCnF,EAASn0F,SAASmH,kBAChB,IAAI8rF,YACF2I,GACA,SAAAx0F,GAIE,O,S2EsBNE,EACA4uF,GAEA,MAAO,CACL70F,SAAU,SAAA8wC,GACR,SAAiB7qC,EAAK4uF,EAAwB/jD,E,EAChDG,iBAAkB,SAAAz3B,GAChB,OAAAy3B,EACEhrC,EACA4uF,EAAsB,WAEtBr7E,E,EAEJo+E,oBAAqB,SAAAp+E,GAAY,OAAAo+E,EAAoB3xF,EAAKuT,EAAS,EAEvE,C3ErCeshF,CAFK/0F,EAAUG,YAAY,OAAOxG,eACVqG,EAAUG,YAAY,mB,EAEtD,UAEDw0F,qBAAqB,aAGzB5H,EAAS3nD,gB,8BACX,CAEA4vD,CAAiBjI,W,WsElDf,IAAMkI,EAAUC,cAChB,GACmD,kBAA1CD,EAAQE,gCAC2B,IAA1CF,EAAQE,8BAFV,CAOA,IAAMC,EAAa1H,IACnB0H,EAAW7H,SAAU,EACrB,IAAM8H,EAAgB,IAAI7xC,WAC1B4xC,EAAWl7F,MAAQm7F,EAEkC,kBAA1CJ,EAAQE,8BACjBE,EAAc14F,QAAQs4F,EAAQE,+BAE9BE,EAAc14F,QAAQ4zF,IAVvB,CAYH,CtEiCA+E,E","file":"static/js/1.b2aadf2b.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, loadBundle, namedQuery } from './export';\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\nexport function registerBundle(instance: typeof Firestore): void {\n  instance.prototype.loadBundle = loadBundle;\n  instance.prototype.namedQuery = namedQuery;\n}\n\nregisterBundle(Firestore);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpsError, FunctionsErrorCode } from '@firebase/functions-types';\nimport { Serializer } from '../serializer';\nimport { HttpResponseBody } from './service';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nexport class HttpsErrorImpl extends Error implements HttpsError {\n  /**\n   * A standard error code that will be returned to the client. This also\n   * determines the HTTP status code of the response, as defined in code.proto.\n   */\n  readonly code: FunctionsErrorCode;\n\n  /**\n   * Extra data to be converted to JSON and included in the error response.\n   */\n  readonly details?: unknown;\n\n  constructor(code: FunctionsErrorCode, message?: string, details?: unknown) {\n    super(message);\n\n    // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, HttpsErrorImpl.prototype);\n\n    this.code = code;\n    this.details = details;\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null,\n  serializer: Serializer\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n","import {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FirebaseMessaging,\n  FirebaseMessagingName\n} from '@firebase/messaging-types';\n\nimport { Provider } from '@firebase/component';\n\n/**\n * The metadata that should be supplied with function calls.\n */\nexport interface Context {\n  authToken?: string;\n  instanceIdToken?: string;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: FirebaseMessaging | null = null;\n  constructor(\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>\n  ) {\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      if (!token) {\n        return undefined;\n      }\n      return token.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getInstanceIdToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getContext(): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const instanceIdToken = await this.getInstanceIdToken();\n    return { authToken, instanceIdToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\nexport class Serializer {\n  // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n  encode(data: unknown): unknown {\n    if (data == null) {\n      return null;\n    }\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n    if (data === true || data === false) {\n      return data;\n    }\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n    if (Array.isArray(data)) {\n      return data.map(x => this.encode(x));\n    }\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data!, x => this.encode(x));\n    }\n    // If we got this far, the data is not encodable.\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }\n\n  // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n  decode(json: unknown): unknown {\n    if (json == null) {\n      return json;\n    }\n    if ((json as { [key: string]: unknown })['@type']) {\n      switch ((json as { [key: string]: unknown })['@type']) {\n        case LONG_TYPE:\n        // Fall through and handle this the same as unsigned.\n        case UNSIGNED_LONG_TYPE: {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          const value = Number((json as { [key: string]: unknown })['value']);\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n          return value;\n        }\n        default: {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n      }\n    }\n    if (Array.isArray(json)) {\n      return json.map(x => this.decode(x));\n    }\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json!, x => this.decode(x));\n    }\n    // Anything else is safe to return.\n    return json;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport {\n  FirebaseFunctions,\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableOptions\n} from '@firebase/functions-types';\nimport { _errorForResponse, HttpsErrorImpl } from './error';\nimport { ContextProvider } from '../context';\nimport { Serializer } from '../serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseMessagingName } from '@firebase/messaging-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type HttpsErrorImpl.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(\n  millis: number\n): {\n  timer: number | NodeJS.Timeout;\n  promise: Promise<never>;\n} {\n  let timer!: number | NodeJS.Timeout;\n  const promise = new Promise<never>((_, reject) => {\n    timer = setTimeout(() => {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n\n  return {\n    timer,\n    promise\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n */\nexport class Service implements FirebaseFunctions, FirebaseService {\n  private readonly contextProvider: ContextProvider;\n  private readonly serializer = new Serializer();\n  private emulatorOrigin: string | null = null;\n  private cancelAllRequests: Promise<void>;\n  private deleteService!: () => void;\n  private region: string;\n  private customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\n   * @param app_ The FirebaseApp to use.\n   * @param regionOrCustomDomain_ one of:\n   *   a) A region to call functions from, such as us-central1\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\n   */\n  constructor(\n    private app_: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>,\n    private appCheckProvider: Provider<AppCheckInternalComponentName>,\n    regionOrCustomDomain_: string = 'us-central1',\n    readonly fetchImpl: typeof fetch\n  ) {\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return resolve();\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  INTERNAL = {\n    delete: (): Promise<void> => {\n      return Promise.resolve(this.deleteService());\n    }\n  };\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name The name of the callable.\n   */\n  _url(name: string): string {\n    const projectId = this.app_.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n\n  /**\n   * Modify this instance to communicate with the Cloud Functions emulator.\n   *\n   * Note: this must be called before this instance has been used to do any operations.\n   *\n   * @param host The emulator host (ex: localhost)\n   * @param port The emulator port (ex: 5001)\n   */\n  useEmulator(host: string, port: number): void {\n    this.emulatorOrigin = `http://${host}:${port}`;\n  }\n\n  /**\n   * Changes this instance to point to a Cloud Functions emulator running\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\n   *\n   * @deprecated Prefer the useEmulator(host, port) method.\n   * @param origin The origin of the local emulator, such as\n   * \"http://localhost:5005\".\n   */\n  useFunctionsEmulator(origin: string): void {\n    this.emulatorOrigin = origin;\n  }\n\n  /**\n   * Returns a reference to the callable https trigger with the given name.\n   * @param name The name of the trigger.\n   */\n  httpsCallable(name: string, options?: HttpsCallableOptions): HttpsCallable {\n    return data => {\n      return this.call(name, data, options || {});\n    };\n  }\n\n  /**\n   * Does an HTTP POST and returns the completed response.\n   * @param url The url to post to.\n   * @param body The JSON body of the post.\n   * @param headers The HTTP headers to include in the request.\n   * @return A Promise that will succeed when the request finishes.\n   */\n  private async postJSON(\n    url: string,\n    body: {},\n    headers: { [key: string]: string }\n  ): Promise<HttpResponse> {\n    headers['Content-Type'] = 'application/json';\n\n    const appCheckToken = await this.getAppCheckToken();\n    if (appCheckToken !== null) {\n      headers['X-Firebase-AppCheck'] = appCheckToken;\n    }\n\n    let response: Response;\n    try {\n      response = await this.fetchImpl(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers\n      });\n    } catch (e) {\n      // This could be an unhandled error on the backend, or it could be a\n      // network error. There's no way to know, since an unhandled error on the\n      // backend will fail to set the proper CORS header, and thus will be\n      // treated as a network error by fetch.\n      return {\n        status: 0,\n        json: null\n      };\n    }\n    let json: HttpResponseBody | null = null;\n    try {\n      json = await response.json();\n    } catch (e) {\n      // If we fail to parse JSON, it will fail the same as an empty body.\n    }\n    return {\n      status: response.status,\n      json\n    };\n  }\n\n  private async getAppCheckToken(): Promise<string | null> {\n    const appCheck = this.appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // If getToken() fails, it will still return a dummy token that also has\n      // an error field containing the error message. We will send any token\n      // provided here and show an error if/when it is rejected by the functions\n      // endpoint.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Calls a callable function asynchronously and returns the result.\n   * @param name The name of the callable trigger.\n   * @param data The data to pass as params to the function.s\n   */\n  private async call(\n    name: string,\n    data: unknown,\n    options: HttpsCallableOptions\n  ): Promise<HttpsCallableResult> {\n    const url = this._url(name);\n\n    // Encode any special types, such as dates, in the input data.\n    data = this.serializer.encode(data);\n    const body = { data };\n\n    // Add a header for the authToken.\n    const headers: { [key: string]: string } = {};\n    const context = await this.contextProvider.getContext();\n    if (context.authToken) {\n      headers['Authorization'] = 'Bearer ' + context.authToken;\n    }\n    if (context.instanceIdToken) {\n      headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n    }\n\n    // Default timeout to 70s, but let the options override it.\n    const timeout = options.timeout || 70000;\n\n    const { timer, promise: failAfterPromise } = failAfter(timeout);\n\n    const response = await Promise.race([\n      clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\n      failAfterPromise,\n      clearTimeoutWrapper(timer, this.cancelAllRequests)\n    ]);\n\n    // If service was deleted, interrupted response throws an error.\n    if (!response) {\n      throw new HttpsErrorImpl(\n        'cancelled',\n        'Firebase Functions instance was deleted.'\n      );\n    }\n\n    // Check for an error status, regardless of http status.\n    const error = _errorForResponse(\n      response.status,\n      response.json,\n      this.serializer\n    );\n    if (error) {\n      throw error;\n    }\n\n    if (!response.json) {\n      throw new HttpsErrorImpl(\n        'internal',\n        'Response is not valid JSON object.'\n      );\n    }\n\n    let responseData = response.json.data;\n    // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n    // backwards compatibility.\n    if (typeof responseData === 'undefined') {\n      responseData = response.json.result;\n    }\n    if (typeof responseData === 'undefined') {\n      // Consider the response malformed.\n      throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n    }\n\n    // Decode any special types, such as dates, in the returned data.\n    const decodedData = this.serializer.decode(responseData);\n\n    return { data: decodedData };\n  }\n}\n\nasync function clearTimeoutWrapper<T>(\n  timer: number | NodeJS.Timeout,\n  promise: Promise<T>\n): Promise<T> {\n  const result = await promise;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  clearTimeout(timer as any);\n  return result;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Service } from './api/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\n\n/**\n * Type constant for Firebase Functions.\n */\nconst FUNCTIONS_TYPE = 'functions';\n\nexport function registerFunctions(\n  instance: _FirebaseNamespace,\n  fetchImpl: typeof fetch\n): void {\n  const namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n\n  function factory(\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }: InstanceFactoryOptions\n  ): Service {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider('auth-internal');\n    const appCheckProvider = container.getProvider('app-check-internal');\n    const messagingProvider = container.getProvider('messaging');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new Service(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider,\n      regionOrCustomDomain,\n      fetchImpl\n    );\n  }\n  instance.INTERNAL.registerComponent(\n    new Component(FUNCTIONS_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { RemoteConfig as RemoteConfigType } from '@firebase/remote-config-types';\nimport { CachingClient } from './src/client/caching_client';\nimport { RestClient } from './src/client/rest_client';\nimport { RemoteConfig } from './src/remote_config';\nimport { Storage } from './src/storage/storage';\nimport { StorageCache } from './src/storage/storage_cache';\nimport { ERROR_FACTORY, ErrorCode } from './src/errors';\nimport { RetryingClient } from './src/client/retrying_client';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { name as packageName, version } from './package.json';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\n// Facilitates debugging by enabling settings changes without rebuilding asset.\n// Note these debug options are not part of a documented, supported API and can change at any time.\n// Consolidates debug options for easier discovery.\n// Uses transient variables on window to avoid lingering state causing panic.\ndeclare global {\n  interface Window {\n    FIREBASE_REMOTE_CONFIG_URL_BASE: string;\n  }\n}\n\nexport function registerRemoteConfig(\n  firebaseInstance: _FirebaseNamespace\n): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'remoteConfig',\n      remoteConfigFactory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n\n  function remoteConfigFactory(\n    container: ComponentContainer,\n    { instanceIdentifier: namespace }: InstanceFactoryOptions\n  ): RemoteConfig {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    const installations = container.getProvider('installations').getImmediate();\n\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_WINDOW);\n    }\n\n    // Normalizes optional inputs.\n    const { projectId, apiKey, appId } = app.options;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_PROJECT_ID);\n    }\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_API_KEY);\n    }\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_APP_ID);\n    }\n    namespace = namespace || 'firebase';\n\n    const storage = new Storage(appId, app.name, namespace);\n    const storageCache = new StorageCache(storage);\n\n    const logger = new Logger(packageName);\n\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = FirebaseLogLevel.ERROR;\n\n    const restClient = new RestClient(\n      installations,\n      // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n      firebaseInstance.SDK_VERSION,\n      namespace,\n      projectId,\n      apiKey,\n      appId\n    );\n    const retryingClient = new RetryingClient(restClient, storage);\n    const cachingClient = new CachingClient(\n      retryingClient,\n      storage,\n      storageCache,\n      logger\n    );\n\n    const remoteConfigInstance = new RemoteConfig(\n      app,\n      cachingClient,\n      storageCache,\n      storage,\n      logger\n    );\n\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    remoteConfigInstance.ensureInitialized();\n\n    return remoteConfigInstance;\n  }\n}\n\nregisterRemoteConfig(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    remoteConfig?: {\n      (app?: FirebaseApp): RemoteConfigType;\n    };\n  }\n  interface FirebaseApp {\n    remoteConfig(): RemoteConfigType;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n  // eslint-disable-next-line camelcase\n  fcm_message_id: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n// Key of FCM Payload in Notification's data field.\nexport const FCM_MSG = 'FCM_MSG';\nexport const TAG = 'FirebaseMessaging: ';\n\n// Set to '1' if Analytics is enabled for the campaign\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\n\n// Due to the fact that onBackgroundMessage can't be awaited (to support rxjs), a silent push\n// warning might be shown by the browser if the callback fails to completes by the end of onPush.\n// Experiments were ran to determine the majority onBackground message clock time. This brief\n// blocking time would allow majority of the onBackgroundMessage callback to finish.\nexport const BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS = 1000;\n\n// Preparation time for client to initialize and set up the message handler.\nexport const FOREGROUND_HANDLE_PREPARATION_TIME_MS = 3000;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from './migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from '../helpers/idb-manager';\nimport { requestDeleteToken, requestGetToken, requestUpdateToken } from './api';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\n/** UpdateRegistration will be called once every week. */\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<string> {\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  // If a PushSubscription exists it's returned, otherwise a new subscription is generated and\n  // returned.\n  const pushSubscription = await getPushSubscription(swRegistration, vapidKey);\n  const tokenDetails = await dbGet(firebaseDependencies);\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey,\n    swScope: swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(\n      {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      },\n      firebaseDependencies,\n      swRegistration\n    );\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<boolean> {\n  const tokenDetails = await dbGet(firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    await dbRemove(firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  tokenDetails: TokenDetails,\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteToken(firebaseDependencies, swRegistration);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS,\n  DEFAULT_VAPID_KEY,\n  FCM_MSG,\n  FOREGROUND_HANDLE_PREPARATION_TIME_MS,\n  TAG\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseMessaging, MessagePayload } from '@firebase/messaging-types';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { dbGet } from '../helpers/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport type BgMessageHandler = (payload: MessagePayload) => unknown;\n\nexport class SwController implements FirebaseMessaging, FirebaseService {\n  // A boolean flag to determine wether an app is using onBackgroundMessage or\n  // setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if\n  // a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the\n  // MessagePayload if a NotificationPayload is included.\n  private isOnBackgroundMessageUsed: boolean | null = null;\n  private vapidKey: string | null = null;\n  private bgMessageHandler:\n    | null\n    | BgMessageHandler\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload> = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    self.addEventListener('push', e => {\n      e.waitUntil(this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', e => {\n      e.waitUntil(this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', e => {\n      e.waitUntil(this.onNotificationClick(e));\n    });\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  /**\n   * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):\n   * Unsubscribe instead.\n   *\n   * Calling setBackgroundMessageHandler will opt in to some specific behaviors.\n   *\n   * 1.) If a notification doesn't need to be shown due to a window already being visible, then push\n   * messages will be sent to the page. 2.) If a notification needs to be shown, and the message\n   * contains no notification data this method will be called and the promise it returns will be\n   * passed to event.waitUntil. If you do not set this callback then all push messages will let and\n   * the developer can handle them in a their own 'push' event callback\n   *\n   * @param callback The callback to be called when a push message is received and a notification\n   * must be shown. The callback will be given the data from the push message.\n   */\n  setBackgroundMessageHandler(callback: BgMessageHandler): void {\n    this.isOnBackgroundMessageUsed = false;\n\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_BG_HANDLER);\n    }\n\n    this.bgMessageHandler = callback;\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    this.isOnBackgroundMessageUsed = true;\n    this.bgMessageHandler = nextOrObserver;\n\n    return () => {\n      this.bgMessageHandler = null;\n    };\n  }\n\n  // TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      // Call getToken using the current VAPID key if there already is a token. This is needed\n      // because usePublicVapidKey was not available in SW. It will be removed when vapidKey becomes\n      // a parameter of getToken, or when getToken is removed from SW.\n      const tokenDetails = await dbGet(this.firebaseDependencies);\n      this.vapidKey =\n        tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n    }\n\n    return getToken(\n      this.firebaseDependencies,\n      self.registration,\n      this.vapidKey\n    );\n  }\n\n  // TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  deleteToken(): Promise<boolean> {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  }\n\n  requestPermission(): Promise<void> {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  // TODO: Remove this together with getToken from SW Controller.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onTokenRefresh(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * A handler for push events that shows notifications based on the content of the payload.\n   *\n   * The payload must be a JSON-encoded Object with a `notification` key. The value of the\n   * `notification` property will be used as the NotificationOptions object passed to\n   * showNotification. Additionally, the `title` property of the notification object will be used as\n   * the title.\n   *\n   * If there is no notification data in the payload then no notification will be shown.\n   */\n  async onPush(event: PushEvent): Promise<void> {\n    const internalPayload = getMessagePayloadInternal(event);\n    if (!internalPayload) {\n      console.debug(\n        TAG +\n          'failed to get parsed MessagePayload from the PushEvent. Skip handling the push.'\n      );\n      return;\n    }\n\n    // foreground handling: eventually passed to onMessage hook\n    const clientList = await getClientList();\n    if (hasVisibleClients(clientList)) {\n      return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n    }\n\n    // background handling: display and pass to onBackgroundMessage hook\n    let isNotificationShown = false;\n    if (!!internalPayload.notification) {\n      await showNotification(wrapInternalPayload(internalPayload));\n      isNotificationShown = true;\n    }\n\n    // MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for\n    // the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.\n    if (\n      isNotificationShown === true &&\n      this.isOnBackgroundMessageUsed === false\n    ) {\n      return;\n    }\n\n    if (!!this.bgMessageHandler) {\n      const payload = externalizePayload(internalPayload);\n\n      if (typeof this.bgMessageHandler === 'function') {\n        this.bgMessageHandler(payload);\n      } else {\n        this.bgMessageHandler.next(payload);\n      }\n    }\n\n    // wait briefly to allow onBackgroundMessage to complete\n    await sleep(BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS);\n  }\n\n  async onSubChange(event: PushSubscriptionChangeEvent): Promise<void> {\n    const { newSubscription } = event;\n    if (!newSubscription) {\n      // Subscription revoked, delete token\n      await deleteToken(this.firebaseDependencies, self.registration);\n      return;\n    }\n\n    const tokenDetails = await dbGet(this.firebaseDependencies);\n    await deleteToken(this.firebaseDependencies, self.registration);\n    await getToken(\n      this.firebaseDependencies,\n      self.registration,\n      tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY\n    );\n  }\n\n  async onNotificationClick(event: NotificationEvent): Promise<void> {\n    const internalPayload: MessagePayloadInternal =\n      event.notification?.data?.[FCM_MSG];\n\n    if (!internalPayload) {\n      return;\n    } else if (event.action) {\n      // User clicked on an action button. This will allow developers to act on action button clicks\n      // by using a custom onNotificationClick listener that they define.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n    event.notification.close();\n\n    // Note clicking on a notification with no link set will focus the Chrome's current tab.\n    const link = getLink(internalPayload);\n    if (!link) {\n      return;\n    }\n\n    // FM should only open/focus links from app's origin.\n    const url = new URL(link, self.location.href);\n    const originUrl = new URL(self.location.origin);\n\n    if (url.host !== originUrl.host) {\n      return;\n    }\n\n    let client = await getWindowClient(url);\n\n    if (!client) {\n      client = await self.clients.openWindow(link);\n\n      // Wait three seconds for the client to initialize and set up the message handler so that it\n      // can receive the message.\n      await sleep(FOREGROUND_HANDLE_PREPARATION_TIME_MS);\n    } else {\n      client = await client.focus();\n    }\n\n    if (!client) {\n      // Window Client will not be returned if it's for a third party origin.\n      return;\n    }\n\n    internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n    internalPayload.isFirebaseMessaging = true;\n    return client.postMessage(internalPayload);\n  }\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...((internalPayload.notification as unknown) as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '@firebase/messaging-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE,\n  DEFAULT_VAPID_KEY\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { isConsoleMessage } from '../helpers/is-console-message';\n\nexport class WindowController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private swRegistration?: ServiceWorkerRegistration;\n  private onMessageCallback: NextFn<object> | Observer<object> | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    navigator.serviceWorker.addEventListener('message', e =>\n      this.messageEventListener(e)\n    );\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  private async messageEventListener(event: MessageEvent): Promise<void> {\n    const internalPayload = event.data as MessagePayloadInternal;\n\n    if (!internalPayload.isFirebaseMessaging) {\n      return;\n    }\n\n    // onMessageCallback is either a function or observer/subscriber.\n    // TODO: in the modularization release, have onMessage handle type MessagePayload as supposed to\n    // the legacy payload where some fields are in snake cases.\n    if (\n      this.onMessageCallback &&\n      internalPayload.messageType === MessageType.PUSH_RECEIVED\n    ) {\n      if (typeof this.onMessageCallback === 'function') {\n        this.onMessageCallback(\n          stripInternalFields(Object.assign({}, internalPayload))\n        );\n      } else {\n        this.onMessageCallback.next(Object.assign({}, internalPayload));\n      }\n    }\n\n    const dataPayload = internalPayload.data;\n\n    if (\n      isConsoleMessage(dataPayload) &&\n      dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n    ) {\n      await this.logEvent(internalPayload.messageType!, dataPayload);\n    }\n  }\n\n  getVapidKey(): string | null {\n    return this.vapidKey;\n  }\n\n  getSwReg(): ServiceWorkerRegistration | undefined {\n    return this.swRegistration;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    if (Notification.permission === 'default') {\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    }\n\n    await this.updateVapidKey(options?.vapidKey);\n    await this.updateSwReg(options?.serviceWorkerRegistration);\n\n    return getToken(\n      this.firebaseDependencies,\n      this.swRegistration!,\n      this.vapidKey!\n    );\n  }\n\n  async updateVapidKey(vapidKey?: string | undefined): Promise<void> {\n    if (!!vapidKey) {\n      this.vapidKey = vapidKey;\n    } else if (!this.vapidKey) {\n      this.vapidKey = DEFAULT_VAPID_KEY;\n    }\n  }\n\n  async updateSwReg(\n    swRegistration?: ServiceWorkerRegistration | undefined\n  ): Promise<void> {\n    if (!swRegistration && !this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    if (!swRegistration && !!this.swRegistration) {\n      return;\n    }\n\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  private async registerDefaultSw(): Promise<void> {\n    try {\n      this.swRegistration = await navigator.serviceWorker.register(\n        DEFAULT_SW_PATH,\n        {\n          scope: DEFAULT_SW_SCOPE\n        }\n      );\n\n      // The timing when browser updates sw when sw has an update is unreliable by my experiment. It\n      // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n      // is stuck with the old version. For example,\n      // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n      // sw if there was an update.\n      this.swRegistration.update().catch(() => {\n        /* it is non blocking and we don't care if it failed */\n      });\n    } catch (e) {\n      throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n        browserErrorMessage: e.message\n      });\n    }\n  }\n\n  async deleteToken(): Promise<boolean> {\n    if (!this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    return deleteToken(this.firebaseDependencies, this.swRegistration!);\n  }\n\n  /**\n   * Request permission if it is not currently granted.\n   *\n   * @return Resolves if the permission was granted, rejects otherwise.\n   *\n   * @deprecated Use Notification.requestPermission() instead.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n   */\n  async requestPermission(): Promise<void> {\n    if (Notification.permission === 'granted') {\n      return;\n    }\n\n    const permissionResult = await Notification.requestPermission();\n    if (permissionResult === 'granted') {\n      return;\n    } else if (permissionResult === 'denied') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_DEFAULT);\n    }\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  useServiceWorker(swRegistration: ServiceWorkerRegistration): void {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_SW_AFTER_GET_TOKEN);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  /**\n   * @param nextOrObserver An observer object or a function triggered on message.\n   *\n   * @return The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver: NextFn<object> | Observer<object>): Unsubscribe {\n    this.onMessageCallback = nextOrObserver;\n\n    return () => {\n      this.onMessageCallback = null;\n    };\n  }\n\n  setBackgroundMessageHandler(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  onBackgroundMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  /**\n   * @deprecated No-op. It was initially designed with token rotation requests from server in mind.\n   * However, the plan to implement such feature was abandoned.\n   */\n  onTokenRefresh(): Unsubscribe {\n    return () => {};\n  }\n\n  private async logEvent(\n    messageType: MessageType,\n    data: ConsoleMessageData\n  ): Promise<void> {\n    const eventType = getEventType(messageType);\n    const analytics = await this.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n    });\n  }\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\nfunction stripInternalFields(\n  internalPayload: MessagePayloadInternal\n): MessagePayloadInternal {\n  delete internalPayload.messageType;\n  delete internalPayload.isFirebaseMessaging;\n  return internalPayload;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport {\n  FirebaseAppCheck,\n  AppCheckComponentName,\n  ReCaptchaV3Provider,\n  CustomProvider\n} from '@firebase/app-check-types';\nimport { factory, internalFactory } from './factory';\nimport {\n  ReCaptchaV3Provider as ReCaptchaV3ProviderImpl,\n  CustomProvider as CustomProviderImpl\n} from './providers';\nimport { initializeDebugMode } from './debug';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { name, version } from '../package.json';\n\nconst APP_CHECK_NAME: AppCheckComponentName = 'appCheck';\nconst APP_CHECK_NAME_INTERNAL: AppCheckInternalComponentName =\n  'app-check-internal';\nfunction registerAppCheck(firebase: _FirebaseNamespace): void {\n  // The public interface\n  firebase.INTERNAL.registerComponent(\n    new Component(\n      APP_CHECK_NAME,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const platformLoggerProvider = container.getProvider('platform-logger');\n        return factory(app, platformLoggerProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ReCaptchaV3Provider: ReCaptchaV3ProviderImpl,\n        CustomProvider: CustomProviderImpl\n      })\n      /**\n       * AppCheck can only be initialized by explicitly calling firebase.appCheck()\n       * We don't want firebase products that consume AppCheck to gate on AppCheck\n       * if the user doesn't intend them to, just because the AppCheck component\n       * is registered.\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on app-check depend on app-check-internal directly,\n       * we need to initialize app-check-internal after app-check is initialized to make it\n       * available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const appCheckInternalProvider = container.getProvider(\n            APP_CHECK_NAME_INTERNAL\n          );\n          appCheckInternalProvider.initialize();\n        }\n      )\n  );\n\n  // The internal interface used by other Firebase products\n  firebase.INTERNAL.registerComponent(\n    new Component(\n      APP_CHECK_NAME_INTERNAL,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const platformLoggerProvider = container.getProvider('platform-logger');\n        return internalFactory(app, platformLoggerProvider);\n      },\n      ComponentType.PUBLIC\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  firebase.registerVersion(name, version);\n}\n\nregisterAppCheck(firebase as _FirebaseNamespace);\ninitializeDebugMode();\n\n/**\n * Define extension behavior of `registerAnalytics`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    appCheck(app?: FirebaseApp): FirebaseAppCheck;\n    ReCaptchaV3Provider: typeof ReCaptchaV3Provider;\n    CustomProvider: typeof CustomProvider;\n  }\n  interface FirebaseApp {\n    appCheck(): FirebaseAppCheck;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","import { FirebaseError } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class FirebaseStorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to FirebaseStorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, FirebaseStorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `FirebaseStorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(message: string): FirebaseStorageError {\n  return new FirebaseStorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = string;\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n};\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n */\nexport type TaskState = string;\n\n/**\n * Represents the current state of a running upload.\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Network headers\n */\nexport interface Headers {\n  [name: string]: string;\n}\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\nexport interface Connection {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Headers,\n  Connection,\n  ErrorCode\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nexport class XhrConnection implements Connection {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport function newConnection(): Connection {\n  return new XhrConnection();\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { Connection } from './connection';\nimport { newConnection } from '../platform/connection';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class ConnectionPool {\n  createConnection(): Connection {\n    return newConnection();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string, host: string): string {\n  const protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\n  const protocol = protocolMatch?.[1];\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { start, stop, id as backoffId } from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Headers, Connection, ErrorCode } from './connection';\nimport { ConnectionPool } from './connectionPool';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingConnection_: Connection | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: T | PromiseLike<T>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: Connection, p2: string) => T;\n  private errorCallback_:\n    | ((p1: Connection, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: ConnectionPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: Connection, p2: string) => T,\n    errorCallback:\n      | ((p1: Connection, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: ConnectionPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: T | PromiseLike<T>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = self.pool_.createConnection();\n      self.pendingConnection_ = connection;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then(() => {\n          if (self.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          self.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    }\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const connection = status.connection as Connection;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(\n            connection,\n            connection.getResponseText()\n          );\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getResponseText();\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  pool: ConnectionPool,\n  firebaseVersion?: string\n): Request<T> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, FirebaseStorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as unknown as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, Connection } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: Connection, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: Connection, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection, p2: string) => Metadata {\n  function handler(xhr: Connection, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection, p2: string) => ListResult {\n  function handler(xhr: Connection, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection, p2: string) => string | null {\n  function handler(xhr: Connection, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: Connection,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getResponseText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: Connection, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { FirebaseStorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `FirebaseStorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: FirebaseStorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `FirebaseStorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `FirebaseStorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  FirebaseStorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserver<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: FirebaseStorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: FirebaseStorageError) => void;\n  private _metadataErrorHandler: (p1: FirebaseStorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: FirebaseStorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `FirebaseStorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | ((a: UploadTaskSnapshot) => unknown),\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(nextOrObserver, error, completed);\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: FirebaseStorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(\n    onRejected: (p1: FirebaseStorageError) => T | Promise<T>\n  ): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: FirebaseStorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as FirebaseStorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as FirebaseStorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, parent, lastComponent } from './implementation/path';\nimport {\n  list as requestsList,\n  getMetadata as requestsGetMetadata,\n  updateMetadata as requestsUpdateMetadata,\n  getDownloadUrl as requestsGetDownloadUrl,\n  deleteObject as requestsDeleteObject,\n  multipartUpload\n} from './implementation/requests';\nimport { ListOptions } from '../exp/public-types';\nimport { StringFormat, dataFromString } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { UploadResult } from './tasksnapshot';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo)\n    .then(request => request.getPromise())\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport async function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return (await ref.storage.makeRequestWithTokens(requestInfo)).getPromise();\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport async function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return (await ref.storage.makeRequestWithTokens(requestInfo)).getPromise();\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport async function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return (await ref.storage.makeRequestWithTokens(requestInfo)).getPromise();\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport async function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return (await ref.storage.makeRequestWithTokens(requestInfo))\n    .getPromise()\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport async function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return (await ref.storage.makeRequestWithTokens(requestInfo)).getPromise();\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { ConnectionPool } from './implementation/connectionPool';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-exp';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from '../src/implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from '../exp/public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `http://${host}:${port}`;\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @public\n * @param opt_url - gs:// url to a custom Storage Bucket\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   * - protocol://host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _pool: ConnectionPool,\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  get host(): string {\n    return this._host;\n  }\n\n  /**\n   * Set host string for this service.\n   * @param host - host string in the form of host, host:port,\n   * or protocol://host:port\n   */\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<T> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        this._pool,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<T>(\n    requestInfo: RequestInfo<T>\n  ): Promise<Request<T>> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(requestInfo, authToken, appCheckToken);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app-exp';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from '../src/service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from '../src/metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal\n} from '../src/reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from '../src/implementation/location';\nexport { UploadTask as _UploadTask } from '../src/task';\nexport type { Reference as _Reference } from '../src/reference';\nexport { FbsBlob as _FbsBlob } from '../src/implementation/blob';\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: string,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\nexport { StringFormat } from '../src/implementation/string';\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage-exp'> = _getProvider(\n    app,\n    STORAGE_TYPE\n  );\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UploadTaskSnapshot } from '../exp/api';\nimport { ReferenceCompat } from './reference';\nimport { UploadTaskCompat } from './task';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskSnapshotCompat\n  implements types.UploadTaskSnapshot, Compat<UploadTaskSnapshot> {\n  constructor(\n    readonly _delegate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonly ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    return this._delegate.bytesTransferred;\n  }\n  get metadata(): types.FullMetadata {\n    return this._delegate.metadata as types.FullMetadata;\n  }\n  get state(): string {\n    return this._delegate.state;\n  }\n  get totalBytes(): number {\n    return this._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UploadTask,\n  FirebaseStorageError,\n  UploadTaskSnapshot,\n  TaskEvent,\n  StorageObserver\n} from '../exp/api';\nimport { UploadTaskSnapshotCompat } from './tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskCompat implements types.UploadTask, Compat<UploadTask> {\n  constructor(\n    readonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\n  ) {}\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return new UploadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      this._ref\n    );\n  }\n\n  cancel = this._delegate.cancel.bind(this._delegate);\n  catch = this._delegate.catch.bind(this._delegate);\n  pause = this._delegate.pause.bind(this._delegate);\n  resume = this._delegate.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshotCompat) => unknown) | null,\n    onRejected?: ((a: FirebaseStorageError) => unknown) | null\n  ): Promise<unknown> {\n    return this._delegate.then(snapshot => {\n      if (onFulfilled) {\n        return onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, this._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<UploadTaskSnapshotCompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) => unknown),\n    error?: (error: FirebaseStorageError) => void | null,\n    completed?: () => void | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshotCompat> {\n    let wrappedNextOrObserver:\n      | StorageObserver<UploadTaskSnapshot>\n      | undefined\n      | ((a: UploadTaskSnapshot) => unknown) = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = (taskSnapshot: UploadTaskSnapshot) =>\n          nextOrObserver(\n            new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next\n            ? (taskSnapshot: UploadTaskSnapshot) =>\n                nextOrObserver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n                )\n            : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined,\n      completed || undefined\n    );\n  }\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `FirebaseStorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: FirebaseStorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListResult } from '../exp/api';\nimport * as types from '@firebase/storage-types';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport { Compat } from '@firebase/util';\n\nexport class ListResultCompat implements types.ListResult, Compat<ListResult> {\n  constructor(\n    readonly _delegate: ListResult,\n    private readonly _service: StorageServiceCompat\n  ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.prefixes.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.items.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.nextPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StorageReference,\n  uploadBytesResumable,\n  list,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject,\n  UploadTask,\n  StringFormat,\n  _UploadTask,\n  _getChild,\n  _Reference,\n  _FbsBlob\n} from '../exp/api'; // import from the exp public API\n\nimport { UploadTaskCompat } from './task';\nimport { ListResultCompat } from './list';\nimport { StorageServiceCompat } from './service';\n\nimport * as types from '@firebase/storage-types';\nimport { Metadata } from '../src/metadata';\nimport { dataFromString } from '../src/implementation/string';\nimport { invalidRootOperation } from '../src/implementation/error';\nimport { Compat } from '@firebase/util';\n\nexport class ReferenceCompat\n  implements types.Reference, Compat<StorageReference>\n{\n  constructor(\n    readonly _delegate: StorageReference,\n    public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    return this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return this._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._delegate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obtained by\n   * appending childPath, removing any duplicate, beginning, or trailing\n   * slashes.\n   */\n  child(childPath: string): types.Reference {\n    const reference = _getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.Reference {\n    return new ReferenceCompat(this._delegate.root, this.storage);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * current object, or null if the current object is the root.\n   */\n  get parent(): types.Reference | null {\n    const reference = this._delegate.parent;\n    if (reference == null) {\n      return null;\n    }\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data - The blob to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata?: types.FullMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, data, metadata as Metadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value - The string to upload.\n   * @param format - The format of the string to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): types.UploadTask {\n    this._throwIfRoot('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = { ...metadata } as Metadata;\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTaskCompat(\n      new _UploadTask(\n        this._delegate as _Reference,\n        new _FbsBlob(data.data, true),\n        metadataClone\n      ) as UploadTask,\n      this\n    );\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @returns A Promise that resolves with all the items and prefixes under\n   *  the current storage reference. `prefixes` contains references to\n   *  sub-directories and `items` contains references to objects in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<types.ListResult> {\n    return listAll(this._delegate).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options - See ListOptions for details.\n   * @returns A Promise that resolves with the items and prefixes.\n   * `prefixes` contains references to sub-folders and `items`\n   * contains references to objects in this folder. `nextPageToken`\n   * can be used to get the rest of the results.\n   */\n  list(options?: types.ListOptions | null): Promise<types.ListResult> {\n    return list(this._delegate, options || undefined).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * A `Promise` that resolves with the metadata for this object. If this\n   * object doesn't exist or metadata cannot be retreived, the promise is\n   * rejected.\n   */\n  getMetadata(): Promise<types.FullMetadata> {\n    return getMetadata(this._delegate) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata - The new metadata for the object.\n   * Only values that have been explicitly set will be changed. Explicitly\n   * setting a value to null will remove the metadata.\n   * @returns A `Promise` that resolves\n   * with the new metadata for this object.\n   * @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(\n    metadata: types.SettableMetadata\n  ): Promise<types.FullMetadata> {\n    return updateMetadata(\n      this._delegate,\n      metadata as Metadata\n    ) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * @returns A `Promise` that resolves with the download\n   * URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @returns A `Promise` that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  }\n\n  private _throwIfRoot(name: string): void {\n    if ((this._delegate as _Reference)._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { FirebaseApp } from '@firebase/app-types';\n\nimport {\n  ref,\n  _Location,\n  connectStorageEmulator,\n  FirebaseStorage\n} from '../exp/api'; // import from the exp public API\nimport { ReferenceCompat } from './reference';\nimport { isUrl, FirebaseStorageImpl } from '../src/service';\nimport { invalidArgument } from '../src/implementation/error';\nimport { Compat, EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n */\nexport class StorageServiceCompat\n  implements types.FirebaseStorage, Compat<FirebaseStorage>\n{\n  constructor(public app: FirebaseApp, readonly _delegate: FirebaseStorage) {}\n\n  get maxOperationRetryTime(): number {\n    return this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUrl(path)) {\n      throw invalidArgument(\n        'ref() expected a child path but got a URL, use refFromURL instead.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): types.Reference {\n    if (!isUrl(url)) {\n      throw invalidArgument(\n        'refFromURL() expected a full URL but got a child path, use ref() instead.'\n      );\n    }\n    try {\n      _Location.makeFromUrl(url, (this._delegate as FirebaseStorageImpl).host);\n    } catch (e) {\n      throw invalidArgument(\n        'refFromUrl() expected a valid full URL but got an invalid one.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this._delegate.maxUploadRetryTime = time;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._delegate.maxOperationRetryTime = time;\n  }\n\n  useEmulator(\n    host: string,\n    port: number,\n    options: {\n      mockUserToken?: EmulatorMockTokenOptions | string;\n    } = {}\n  ): void {\n    connectStorageEmulator(this._delegate, host, port, options);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { isIndexedDBAvailable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by\n * set methods.\n */\nexport class Api {\n  private readonly performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private readonly PerformanceObserver: typeof PerformanceObserver;\n  private readonly windowLocation: Location;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  readonly onFirstInputDelay?: Function;\n  readonly localStorage?: Storage;\n  readonly document: Document;\n  readonly navigator: Navigator;\n\n  constructor(readonly window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (\n      !fetch ||\n      !Promise ||\n      !this.navigator ||\n      !this.navigator.cookieEnabled\n    ) {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n      return false;\n    }\n\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const BASE_ENDPOINT =\n  'https://content-firebaseappcheck.googleapis.com/v1beta';\n\nexport const EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaToken';\nexport const EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\n\nexport const TOKEN_REFRESH_TIME = {\n  /**\n   * The offset time before token natural expiration to run the refresh.\n   * This is currently 5 minutes.\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n  /**\n   * This is the first retrial wait after an error. This is currently\n   * 30 seconds.\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n  /**\n   * This is the maximum retrial wait, currently 16 minutes.\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NONPOSITIVE_TRACE_START_TIME = 'nonpositive trace startTime',\n  NONPOSITIVE_TRACE_DURATION = 'nonpositive trace duration',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalid custom metric name',\n  INVALID_STRING_MERGER_PARAMETER = 'invalid String merger input'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]:\n    'Trace {$traceName} startTime should be positive.',\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]:\n    'Trace {$traceName} duration should be positive.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid',\n  [ErrorCode.INVALID_STRING_MERGER_PARAMETER]:\n    'Input for String merger is invalid, contact support team to resolve.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport { mergeStrings } from '../utils/string_merger';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  // Performance event transport endpoint URL which should be compatible with proto3.\n  // New Address for transport service, not configurable via Remote Config.\n  flTransportEndpointUrl = mergeStrings(\n    'hts/frbslgigp.ogepscmv/ieo/eaylg',\n    'tp:/ieaeogn-agolai.o/1frlglgc/o'\n  );\n\n  transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n\n  // Source type for performance event logs.\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  installationsService!: FirebaseInstallations;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  getFlTransportFullUrl(): string {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './errors';\n\nexport function mergeStrings(part1: string, part2: string): string {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_STRING_MERGER_PARAMETER);\n  }\n\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance().installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance().installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\n/**\n * NetworkInformation\n *\n * ref: https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation\n */\ninterface NetworkInformation {\n  readonly effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n}\n\ninterface NavigatorWithConnection extends Navigator {\n  readonly connection: NetworkInformation;\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = (navigator as NavigatorWithConnection).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n  CONFIG_LOCAL_STORAGE_KEY,\n  SDK_VERSION\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { SettingsService } from './settings_service';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logSource?: number;\n  logEndPointUrl?: string;\n  transportKey?: string;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_log_transport_key?: string;\n  fpr_log_transport_web_percent?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(processConfig)\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */\n      () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: { Authorization: `${FIS_AUTH_PREFIX} ${authToken}` },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valid.\n */\nfunction processConfig(\n  config?: RemoteConfigResponse\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (DEFAULT_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface LogResponseDetails {\n  responseAction?: string;\n}\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC/Fl accepted log format.\ninterface TransportBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json_proto3: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nlet isTransportSetup: boolean = false;\n\nexport function setupTransportService(): void {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\n/**\n * Utilized by testing to clean up message queue and un-initialize transport service.\n */\nexport function resetTransportService(): void {\n  isTransportSetup = false;\n  queue = [];\n}\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents(): void {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event: Log[] = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n\n  const data: TransportBatchLogFormat = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1, // 1 is JS\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(\n  data: TransportBatchLogFormat,\n  staged: BatchEvent[]\n): Promise<void> {\n  return postToFlEndpoint(data)\n    .then(res => {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n      return res.json();\n    })\n    .then(res => {\n      // Find the next call wait time from the response.\n      const transportWait = Number(res.nextRequestWaitMillis);\n      let requestOffset = DEFAULT_SEND_INTERVAL_MS;\n      if (!isNaN(transportWait)) {\n        requestOffset = Math.max(transportWait, requestOffset);\n      }\n\n      // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n      // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n      const logResponseDetails: LogResponseDetails[] = res.logResponseDetails;\n      if (\n        Array.isArray(logResponseDetails) &&\n        logResponseDetails.length > 0 &&\n        logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER'\n      ) {\n        queue = [...staged, ...queue];\n        consoleLogger.info(`Retry transport request later.`);\n      }\n\n      remainingTries = DEFAULT_REMAINING_TRIES;\n      // Schedule the next process.\n      processQueue(requestOffset);\n    });\n}\n\nfunction postToFlEndpoint(data: TransportBatchLogFormat): Promise<Response> {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function transportHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): (...args: unknown[]) => void {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { transportHandler } from './transport_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: { [key: string]: number };\n  custom_attributes?: { [key: string]: string };\n}\n\n/* eslint-enble camelcase */\n\nlet logger: (\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n) => void | undefined;\n// This method is not called before initialization.\nfunction sendLog(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): void {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (!getIid()) {\n    return;\n  }\n\n  const settingsService = SettingsService.getInstance();\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(trace, ResourceType.Trace), 0);\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (\n    networkRequestUrl === logEndpointUrl ||\n    networkRequestUrl === flEndpointUrl\n  ) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(networkRequest, ResourceType.NetworkRequest), 0);\n}\n\nfunction serializer(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n\n/**\n * Converts the provided value to an integer value to be used in case of a metric.\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\n *\n * @returns Converted integer number to be set for the metric.\n */\nexport function convertMetricValueToInteger(providedValue: number): number {\n  const valueAsInteger: number = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\n      `Metric value should be an Integer, setting the value as : ${valueAsInteger}.`\n    );\n  }\n  return valueAsInteger;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport {\n  isValidMetricName,\n  convertMetricValueToInteger\n} from '../utils/metric_utils';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_START_TIME, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_DURATION, {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist. The value will be floored down to an\n   * integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Increment by value\n   */\n  incrementMetric(counter: string, numAsInteger = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist. The value will be floored down to an integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Set custom metric to this value\n   */\n  putMetric(counter: string, numAsInteger: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { setupTransportService } from '../services/transport_service';\nimport { validateIndexedDBOpenable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable()\n        .then(isAvailable => {\n          if (isAvailable) {\n            setupTransportService();\n            getInitializationPromise().then(\n              setupOobResources,\n              setupOobResources\n            );\n          }\n        })\n        .catch(error => {\n          consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n        });\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppCheckError {\n  ALREADY_ACTIVATED = 'already-activated',\n  USE_BEFORE_ACTIVATION = 'use-before-activation',\n  FETCH_NETWORK_ERROR = 'fetch-network-error',\n  FETCH_PARSE_ERROR = 'fetch-parse-error',\n  FETCH_STATUS_ERROR = 'fetch-status-error',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_WRITE = 'storage-set',\n  RECAPTCHA_ERROR = 'recaptcha-error'\n}\n\nconst ERRORS: ErrorMap<AppCheckError> = {\n  [AppCheckError.ALREADY_ACTIVATED]:\n    'You are trying to activate AppCheck for FirebaseApp {$appName}, ' +\n    'while it is already activated. ' +\n    'AppCheck can only be activated once.',\n  [AppCheckError.USE_BEFORE_ACTIVATION]:\n    'AppCheck is being used before activate() is called for FirebaseApp {$appName}. ' +\n    'Please make sure you call activate() before instantiating other Firebase services.',\n  [AppCheckError.FETCH_NETWORK_ERROR]:\n    'Fetch failed to connect to a network. Check Internet connection. ' +\n    'Original error: {$originalErrorMessage}.',\n  [AppCheckError.FETCH_PARSE_ERROR]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [AppCheckError.FETCH_STATUS_ERROR]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\n  [AppCheckError.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [AppCheckError.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [AppCheckError.STORAGE_WRITE]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [AppCheckError.RECAPTCHA_ERROR]: 'ReCAPTCHA error.'\n};\n\ninterface ErrorParams {\n  [AppCheckError.ALREADY_ACTIVATED]: { appName: string };\n  [AppCheckError.USE_BEFORE_ACTIVATION]: { appName: string };\n  [AppCheckError.FETCH_NETWORK_ERROR]: { originalErrorMessage: string };\n  [AppCheckError.FETCH_PARSE_ERROR]: { originalErrorMessage: string };\n  [AppCheckError.FETCH_STATUS_ERROR]: { httpStatus: number };\n  [AppCheckError.STORAGE_OPEN]: { originalErrorMessage?: string };\n  [AppCheckError.STORAGE_GET]: { originalErrorMessage?: string };\n  [AppCheckError.STORAGE_WRITE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppCheckError, ErrorParams>(\n  'appCheck',\n  'AppCheck',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: FirebaseInstallations,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings,\n  Value as ValueType,\n  LogLevel as RemoteConfigLogLevel\n} from '@firebase/remote-config-types';\nimport { StorageCache } from './storage/storage_cache';\nimport {\n  RemoteConfigFetchClient,\n  RemoteConfigAbortSignal\n} from './client/remote_config_fetch_client';\nimport { Value } from './value';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { Storage } from './storage/storage';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  // Tracks completion of initialization promise.\n  private _isInitializationComplete = false;\n\n  // De-duplicates initialization calls.\n  private _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  setLogLevel(logLevel: RemoteConfigLogLevel): void {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = FirebaseLogLevel.DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = FirebaseLogLevel.SILENT;\n        break;\n      default:\n        this._logger.logLevel = FirebaseLogLevel.ERROR;\n    }\n  }\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    private readonly _client: RemoteConfigFetchClient,\n    private readonly _storageCache: StorageCache,\n    private readonly _storage: Storage,\n    private readonly _logger: Logger\n  ) {}\n\n  async activate(): Promise<boolean> {\n    const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n      this._storage.getLastSuccessfulFetchResponse(),\n      this._storage.getActiveConfigEtag()\n    ]);\n    if (\n      !lastSuccessfulFetchResponse ||\n      !lastSuccessfulFetchResponse.config ||\n      !lastSuccessfulFetchResponse.eTag ||\n      lastSuccessfulFetchResponse.eTag === activeConfigEtag\n    ) {\n      // Either there is no successful fetched config, or is the same as current active\n      // config.\n      return false;\n    }\n    await Promise.all([\n      this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n      this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n    ]);\n    return true;\n  }\n\n  ensureInitialized(): Promise<void> {\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache\n        .loadFromStorage()\n        .then(() => {\n          this._isInitializationComplete = true;\n        });\n    }\n    return this._initializePromise;\n  }\n\n  /**\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\n   * {@link Settings.fetchTimeoutInSeconds} or\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\n   */\n  async fetch(): Promise<void> {\n    // Aborts the request after the given timeout, causing the fetch call to\n    // reject with an AbortError.\n    //\n    // <p>Aborting after the request completes is a no-op, so we don't need a\n    // corresponding clearTimeout.\n    //\n    // Locating abort logic here because:\n    // * it uses a developer setting (timeout)\n    // * it applies to all retries (like curl's max-time arg)\n    // * it is consistent with the Fetch API's signal input\n    const abortSignal = new RemoteConfigAbortSignal();\n\n    setTimeout(async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      abortSignal.abort();\n    }, this.settings.fetchTimeoutMillis);\n\n    // Catches *all* errors thrown by client so status can be set consistently.\n    try {\n      await this._client.fetch({\n        cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n        signal: abortSignal\n      });\n\n      await this._storageCache.setLastFetchStatus('success');\n    } catch (e) {\n      const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n        ? 'throttle'\n        : 'failure';\n      await this._storageCache.setLastFetchStatus(lastFetchStatus);\n      throw e;\n    }\n  }\n\n  async fetchAndActivate(): Promise<boolean> {\n    await this.fetch();\n    return this.activate();\n  }\n\n  getAll(): { [key: string]: ValueType } {\n    return getAllKeys(\n      this._storageCache.getActiveConfig(),\n      this.defaultConfig\n    ).reduce((allConfigs, key) => {\n      allConfigs[key] = this.getValue(key);\n      return allConfigs;\n    }, {} as { [key: string]: ValueType });\n  }\n\n  getBoolean(key: string): boolean {\n    return this.getValue(key).asBoolean();\n  }\n\n  getNumber(key: string): number {\n    return this.getValue(key).asNumber();\n  }\n\n  getString(key: string): string {\n    return this.getValue(key).asString();\n  }\n\n  getValue(key: string): ValueType {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\n        `A value was requested for key \"${key}\" before SDK initialization completed.` +\n          ' Await on ensureInitialized if the intent was to get a previously activated value.'\n      );\n    }\n    const activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\n      `Returning static value for key \"${key}\".` +\n        ' Define a default or remote value if this is unintentional.'\n    );\n    return new Value('static');\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { name, version } from '../package.json';\n\nfirebase.registerVersion(name, version, 'app');\nfirebase.SDK_VERSION = version;\n\nexport default firebase;\n","import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.11.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nvar AppCheckTokenProvider = /** @class */ (function () {\r\n    function AppCheckTokenProvider(appName_, appCheckProvider) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) { return (_this.appCheck = appCheck); });\r\n        }\r\n    }\r\n    AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.appCheck) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.appCheck) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    };\r\n    AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) { return appCheck.addTokenListener(listener); });\r\n    };\r\n    AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    };\r\n    return AppCheckTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.auth_) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.auth_) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nvar EmulatorTokenProvider = /** @class */ (function () {\r\n    function EmulatorTokenProvider(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    };\r\n    EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    };\r\n    EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\n    EmulatorTokenProvider.OWNER = 'owner';\r\n    return EmulatorTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar APP_CHECK_TOKEN_PARAM = 'ac';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        var _this = this;\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            // Always add the token if we have one.\r\n            if (_this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2]; _a[3]; _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (_this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = \"Bearer \" + this.authToken;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    ServerActions.prototype.refreshAppCheckToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.appCheckToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.invalidAppCheckTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        this.initConnection_();\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAppCheckToken = function (token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, function () { });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    PersistentConnection.prototype.tryAppCheck = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    _this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    _this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.initConnection_ = function () {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.shouldReconnect_()) return [3 /*break*/, 4];\r\n                        this.log_('Making a connection attempt');\r\n                        this.lastConnectionAttemptTime_ = new Date().getTime();\r\n                        this.lastConnectionEstablishedTime_ = null;\r\n                        onDataMessage = this.onDataMessage_.bind(this);\r\n                        onReady = this.onReady_.bind(this);\r\n                        onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n                        connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n                        lastSessionId = this.lastSessionId;\r\n                        canceled_1 = false;\r\n                        connection_1 = null;\r\n                        closeFn = function () {\r\n                            if (connection_1) {\r\n                                connection_1.close();\r\n                            }\r\n                            else {\r\n                                canceled_1 = true;\r\n                                onDisconnect_1();\r\n                            }\r\n                        };\r\n                        sendRequestFn = function (msg) {\r\n                            assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                            connection_1.sendRequest(msg);\r\n                        };\r\n                        this.realtime_ = {\r\n                            close: closeFn,\r\n                            sendRequest: sendRequestFn\r\n                        };\r\n                        forceRefresh = this.forceTokenRefresh_;\r\n                        this.forceTokenRefresh_ = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.authTokenProvider_.getToken(forceRefresh),\r\n                                this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                            ])];\r\n                    case 2:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\r\n                        if (!canceled_1) {\r\n                            log('getToken() completed. Creating connection.');\r\n                            this.authToken_ = authToken && authToken.accessToken;\r\n                            this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                            connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1, \r\n                            /* onKill= */ function (reason) {\r\n                                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\r\n                                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                            }, lastSessionId);\r\n                        }\r\n                        else {\r\n                            log('getToken() completed but was canceled');\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this.log_('Failed to get token: ' + error_1);\r\n                        if (!canceled_1) {\r\n                            if (this.repoInfo_.nodeAdmin) {\r\n                                // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                                // But getToken() may also just have temporarily failed, so we still want to\r\n                                // continue retrying.\r\n                                warn(error_1);\r\n                            }\r\n                            closeFn();\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON$1;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(function (_a) {\r\n            var _b = __read(_a, 2), authToken = _b[0], appCheckToken = _b[1];\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(function (result) {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return !!this.callbackContext;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database$1(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar Database$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function Database(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(Database.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype._delete = function () {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    Database.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    var repo = db._repoInternal;\r\n    var tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        var token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    Database.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectDatabaseEmulator(this._delegate, host, port, options);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { AppCheckToken, AppCheckTokenResult } from '@firebase/app-check-types';\nimport { AppCheckTokenListener } from '@firebase/app-check-interop-types';\nimport { Refresher } from './proactive-refresh';\nimport { Deferred, PartialObserver } from '@firebase/util';\nimport { GreCAPTCHA } from './recaptcha';\nimport { AppCheckProviderInternal } from './providers';\n\nexport interface AppCheckTokenInternal extends AppCheckToken {\n  issuedAtTimeMillis: number;\n}\n\nexport interface AppCheckTokenObserver\n  extends PartialObserver<AppCheckTokenResult> {\n  // required\n  next: AppCheckTokenListener;\n  type: ListenerType;\n}\n\nexport const enum ListenerType {\n  'INTERNAL' = 'INTERNAL',\n  'EXTERNAL' = 'EXTERNAL'\n}\n\nexport interface AppCheckState {\n  activated: boolean;\n  tokenObservers: AppCheckTokenObserver[];\n  provider?: AppCheckProviderInternal;\n  siteKey?: string;\n  token?: AppCheckTokenInternal;\n  cachedTokenPromise?: Promise<AppCheckTokenInternal | undefined>;\n  tokenRefresher?: Refresher;\n  reCAPTCHAState?: ReCAPTCHAState;\n  isTokenAutoRefreshEnabled?: boolean;\n}\n\nexport interface ReCAPTCHAState {\n  initialized: Deferred<GreCAPTCHA>;\n  widgetId?: string;\n}\n\nexport interface DebugState {\n  enabled: boolean;\n  // This is the debug token string the user interacts with.\n  token?: Deferred<string>;\n}\n\nconst APP_CHECK_STATES = new Map<FirebaseApp, AppCheckState>();\nexport const DEFAULT_STATE: AppCheckState = {\n  activated: false,\n  tokenObservers: []\n};\n\nconst DEBUG_STATE: DebugState = {\n  enabled: false\n};\n\nexport function getState(app: FirebaseApp): AppCheckState {\n  return APP_CHECK_STATES.get(app) || DEFAULT_STATE;\n}\n\nexport function setState(app: FirebaseApp, state: AppCheckState): void {\n  APP_CHECK_STATES.set(app, state);\n}\n\n// for testing only\nexport function clearState(): void {\n  APP_CHECK_STATES.clear();\n  DEBUG_STATE.enabled = false;\n  DEBUG_STATE.token = undefined;\n}\n\nexport function getDebugState(): DebugState {\n  return DEBUG_STATE;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\n/**\n * Port from auth proactiverefresh.js\n *\n */\n// TODO: move it to @firebase/util?\n// TODO: allow to config whether refresh should happen in the background\nexport class Refresher {\n  private pending: Deferred<unknown> | null = null;\n  private nextErrorWaitInterval: number;\n  constructor(\n    private readonly operation: () => Promise<unknown>,\n    private readonly retryPolicy: (error: unknown) => boolean,\n    private readonly getWaitDuration: () => number,\n    private readonly lowerBound: number,\n    private readonly upperBound: number\n  ) {\n    this.nextErrorWaitInterval = lowerBound;\n\n    if (lowerBound > upperBound) {\n      throw new Error(\n        'Proactive refresh lower bound greater than upper bound!'\n      );\n    }\n  }\n\n  start(): void {\n    this.nextErrorWaitInterval = this.lowerBound;\n    this.process(true).catch(() => {\n      /* we don't care about the result */\n    });\n  }\n\n  stop(): void {\n    if (this.pending) {\n      this.pending.reject('cancelled');\n      this.pending = null;\n    }\n  }\n\n  isRunning(): boolean {\n    return !!this.pending;\n  }\n\n  private async process(hasSucceeded: boolean): Promise<void> {\n    this.stop();\n    try {\n      this.pending = new Deferred();\n      await sleep(this.getNextRun(hasSucceeded));\n\n      // Why do we resolve a promise, then immediate wait for it?\n      // We do it to make the promise chain cancellable.\n      // We can call stop() which rejects the promise before the following line execute, which makes\n      // the code jump to the catch block.\n      // TODO: unit test this\n      this.pending.resolve();\n      await this.pending.promise;\n      this.pending = new Deferred();\n      await this.operation();\n\n      this.pending.resolve();\n      await this.pending.promise;\n\n      this.process(true).catch(() => {\n        /* we don't care about the result */\n      });\n    } catch (error) {\n      if (this.retryPolicy(error)) {\n        this.process(false).catch(() => {\n          /* we don't care about the result */\n        });\n      } else {\n        this.stop();\n      }\n    }\n  }\n\n  private getNextRun(hasSucceeded: boolean): number {\n    if (hasSucceeded) {\n      // If last operation succeeded, reset next error wait interval and return\n      // the default wait duration.\n      this.nextErrorWaitInterval = this.lowerBound;\n      // Return typical wait duration interval after a successful operation.\n      return this.getWaitDuration();\n    } else {\n      // Get next error wait interval.\n      const currentErrorWaitInterval = this.nextErrorWaitInterval;\n      // Double interval for next consecutive error.\n      this.nextErrorWaitInterval *= 2;\n      // Make sure next wait interval does not exceed the maximum upper bound.\n      if (this.nextErrorWaitInterval > this.upperBound) {\n        this.nextErrorWaitInterval = this.upperBound;\n      }\n      return currentErrorWaitInterval;\n    }\n  }\n}\n\nfunction sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GreCAPTCHA } from './recaptcha';\nimport { getState } from './state';\nimport { ERROR_FACTORY, AppCheckError } from './errors';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { base64 } from '@firebase/util';\n\nexport function getRecaptcha(): GreCAPTCHA | undefined {\n  return self.grecaptcha;\n}\n\nexport function ensureActivated(app: FirebaseApp): void {\n  if (!getState(app).activated) {\n    throw ERROR_FACTORY.create(AppCheckError.USE_BEFORE_ACTIVATION, {\n      appName: app.name\n    });\n  }\n}\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n */\nexport function uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Stringify and base64 encode token error data.\n *\n * @param tokenError Error data, currently hardcoded.\n */\nexport function formatDummyToken(\n  tokenErrorData: Record<string, string>\n): string {\n  return base64.encodeString(\n    JSON.stringify(tokenErrorData),\n    /* webSafe= */ false\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BASE_ENDPOINT,\n  EXCHANGE_DEBUG_TOKEN_METHOD,\n  EXCHANGE_RECAPTCHA_TOKEN_METHOD\n} from './constants';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, AppCheckError } from './errors';\nimport { Provider } from '@firebase/component';\nimport { AppCheckTokenInternal } from './state';\n\n/**\n * Response JSON returned from AppCheck server endpoint.\n */\ninterface AppCheckResponse {\n  attestationToken: string;\n  // timeToLive\n  ttl: string;\n}\n\ninterface AppCheckRequest {\n  url: string;\n  body: { [key: string]: string };\n}\n\nexport async function exchangeToken(\n  { url, body }: AppCheckRequest,\n  platformLoggerProvider: Provider<'platform-logger'>\n): Promise<AppCheckTokenInternal> {\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json'\n  };\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers['X-Firebase-Client'] = platformLogger.getPlatformInfoString();\n  }\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers\n  };\n  let response;\n  try {\n    response = await fetch(url, options);\n  } catch (originalError) {\n    throw ERROR_FACTORY.create(AppCheckError.FETCH_NETWORK_ERROR, {\n      originalErrorMessage: originalError.message\n    });\n  }\n\n  if (response.status !== 200) {\n    throw ERROR_FACTORY.create(AppCheckError.FETCH_STATUS_ERROR, {\n      httpStatus: response.status\n    });\n  }\n\n  let responseBody: AppCheckResponse;\n  try {\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    responseBody = await response.json();\n  } catch (originalError) {\n    throw ERROR_FACTORY.create(AppCheckError.FETCH_PARSE_ERROR, {\n      originalErrorMessage: originalError.message\n    });\n  }\n\n  // Protobuf duration format.\n  // https://developers.google.com/protocol-buffers/docs/reference/java/com/google/protobuf/Duration\n  const match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\n  if (!match || !match[2] || isNaN(Number(match[1]))) {\n    throw ERROR_FACTORY.create(AppCheckError.FETCH_PARSE_ERROR, {\n      originalErrorMessage:\n        `ttl field (timeToLive) is not in standard Protobuf Duration ` +\n        `format: ${responseBody.ttl}`\n    });\n  }\n  const timeToLiveAsNumber = Number(match[1]) * 1000;\n\n  const now = Date.now();\n  return {\n    token: responseBody.attestationToken,\n    expireTimeMillis: now + timeToLiveAsNumber,\n    issuedAtTimeMillis: now\n  };\n}\n\nexport function getExchangeRecaptchaTokenRequest(\n  app: FirebaseApp,\n  reCAPTCHAToken: string\n): AppCheckRequest {\n  const { projectId, appId, apiKey } = app.options;\n\n  return {\n    url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_RECAPTCHA_TOKEN_METHOD}?key=${apiKey}`,\n    body: {\n      // eslint-disable-next-line\n      recaptcha_token: reCAPTCHAToken\n    }\n  };\n}\n\nexport function getExchangeDebugTokenRequest(\n  app: FirebaseApp,\n  debugToken: string\n): AppCheckRequest {\n  const { projectId, appId, apiKey } = app.options;\n\n  return {\n    url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_DEBUG_TOKEN_METHOD}?key=${apiKey}`,\n    body: {\n      // eslint-disable-next-line\n      debug_token: debugToken\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, AppCheckError } from './errors';\nimport { AppCheckTokenInternal } from './state';\nconst DB_NAME = 'firebase-app-check-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-app-check-store';\nconst DEBUG_TOKEN_KEY = 'debug-token';\n\nlet dbPromise: Promise<IDBDatabase> | null = null;\nfunction getDBPromise(): Promise<IDBDatabase> {\n  if (dbPromise) {\n    return dbPromise;\n  }\n\n  dbPromise = new Promise((resolve, reject) => {\n    try {\n      const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n      request.onsuccess = event => {\n        resolve((event.target as IDBOpenDBRequest).result);\n      };\n\n      request.onerror = event => {\n        reject(\n          ERROR_FACTORY.create(AppCheckError.STORAGE_OPEN, {\n            originalErrorMessage: (event.target as IDBRequest).error?.message\n          })\n        );\n      };\n\n      request.onupgradeneeded = event => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (event.oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME, {\n              keyPath: 'compositeKey'\n            });\n        }\n      };\n    } catch (e) {\n      reject(\n        ERROR_FACTORY.create(AppCheckError.STORAGE_OPEN, {\n          originalErrorMessage: e.message\n        })\n      );\n    }\n  });\n\n  return dbPromise;\n}\n\nexport function readTokenFromIndexedDB(\n  app: FirebaseApp\n): Promise<AppCheckTokenInternal | undefined> {\n  return read(computeKey(app)) as Promise<AppCheckTokenInternal | undefined>;\n}\n\nexport function writeTokenToIndexedDB(\n  app: FirebaseApp,\n  token: AppCheckTokenInternal\n): Promise<void> {\n  return write(computeKey(app), token);\n}\n\nexport function writeDebugTokenToIndexedDB(token: string): Promise<void> {\n  return write(DEBUG_TOKEN_KEY, token);\n}\n\nexport function readDebugTokenFromIndexedDB(): Promise<string | undefined> {\n  return read(DEBUG_TOKEN_KEY) as Promise<string | undefined>;\n}\n\nasync function write(key: string, value: unknown): Promise<void> {\n  const db = await getDBPromise();\n\n  const transaction = db.transaction(STORE_NAME, 'readwrite');\n  const store = transaction.objectStore(STORE_NAME);\n  const request = store.put({\n    compositeKey: key,\n    value\n  });\n\n  return new Promise((resolve, reject) => {\n    request.onsuccess = _event => {\n      resolve();\n    };\n\n    transaction.onerror = event => {\n      reject(\n        ERROR_FACTORY.create(AppCheckError.STORAGE_WRITE, {\n          originalErrorMessage: (event.target as IDBRequest).error?.message\n        })\n      );\n    };\n  });\n}\n\nasync function read(key: string): Promise<unknown> {\n  const db = await getDBPromise();\n\n  const transaction = db.transaction(STORE_NAME, 'readonly');\n  const store = transaction.objectStore(STORE_NAME);\n  const request = store.get(key);\n\n  return new Promise((resolve, reject) => {\n    request.onsuccess = event => {\n      const result = (event.target as IDBRequest).result;\n\n      if (result) {\n        resolve(result.value);\n      } else {\n        resolve(undefined);\n      }\n    };\n\n    transaction.onerror = event => {\n      reject(\n        ERROR_FACTORY.create(AppCheckError.STORAGE_GET, {\n          originalErrorMessage: (event.target as IDBRequest).error?.message\n        })\n      );\n    };\n  });\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.options.appId}-${app.name}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-check');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { uuidv4 } from './util';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { isIndexedDBAvailable } from '@firebase/util';\nimport {\n  readDebugTokenFromIndexedDB,\n  readTokenFromIndexedDB,\n  writeDebugTokenToIndexedDB,\n  writeTokenToIndexedDB\n} from './indexeddb';\nimport { logger } from './logger';\nimport { AppCheckTokenInternal } from './state';\n\n/**\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\n */\nexport async function readTokenFromStorage(\n  app: FirebaseApp\n): Promise<AppCheckTokenInternal | undefined> {\n  if (isIndexedDBAvailable()) {\n    let token = undefined;\n    try {\n      token = await readTokenFromIndexedDB(app);\n    } catch (e) {\n      // swallow the error and return undefined\n      logger.warn(`Failed to read token from indexeddb. Error: ${e}`);\n    }\n    return token;\n  }\n\n  return undefined;\n}\n\n/**\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\n */\nexport function writeTokenToStorage(\n  app: FirebaseApp,\n  token: AppCheckTokenInternal\n): Promise<void> {\n  if (isIndexedDBAvailable()) {\n    return writeTokenToIndexedDB(app, token).catch(e => {\n      // swallow the error and resolve the promise\n      logger.warn(`Failed to write token to indexeddb. Error: ${e}`);\n    });\n  }\n\n  return Promise.resolve();\n}\n\nexport async function readOrCreateDebugTokenFromStorage(): Promise<string> {\n  /**\n   * Theoretically race condition can happen if we read, then write in 2 separate transactions.\n   * But it won't happen here, because this function will be called exactly once.\n   */\n  let existingDebugToken: string | undefined = undefined;\n  try {\n    existingDebugToken = await readDebugTokenFromIndexedDB();\n  } catch (_e) {\n    // failed to read from indexeddb. We assume there is no existing debug token, and generate a new one.\n  }\n\n  if (!existingDebugToken) {\n    // create a new debug token\n    const newToken = uuidv4();\n    // We don't need to block on writing to indexeddb\n    // In case persistence failed, a new debug token will be generated everytime the page is refreshed.\n    // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\n    // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\n    // You should switch to a different browser that supports indexeddb\n    writeDebugTokenToIndexedDB(newToken).catch(e =>\n      logger.warn(`Failed to persist debug token to indexeddb. Error: ${e}`)\n    );\n    // Not using logger because I don't think we ever want this accidentally hidden?\n    console.log(\n      `AppCheck debug token: ${newToken}. You will need to whitelist it in the Firebase console for it to work`\n    );\n    return newToken;\n  } else {\n    return existingDebugToken;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getDebugState } from './state';\nimport { readOrCreateDebugTokenFromStorage } from './storage';\nimport { Deferred, getGlobal } from '@firebase/util';\n\ndeclare global {\n  // var must be used for global scopes\n  // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#type-checking-for-globalthis\n  // eslint-disable-next-line no-var\n  var FIREBASE_APPCHECK_DEBUG_TOKEN: boolean | string | undefined;\n}\n\nexport function isDebugMode(): boolean {\n  const debugState = getDebugState();\n  return debugState.enabled;\n}\n\nexport async function getDebugToken(): Promise<string> {\n  const state = getDebugState();\n\n  if (state.enabled && state.token) {\n    return state.token.promise;\n  } else {\n    // should not happen!\n    throw Error(`\n            Can't get debug token in production mode.\n        `);\n  }\n}\n\nexport function initializeDebugMode(): void {\n  const globals = getGlobal();\n  if (\n    typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' &&\n    globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true\n  ) {\n    return;\n  }\n\n  const debugState = getDebugState();\n  debugState.enabled = true;\n  const deferredToken = new Deferred<string>();\n  debugState.token = deferredToken;\n\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\n    deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\n  } else {\n    deferredToken.resolve(readOrCreateDebugTokenFromStorage());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  AppCheckTokenListener,\n  AppCheckTokenResult\n} from '@firebase/app-check-interop-types';\nimport {\n  AppCheckTokenInternal,\n  AppCheckTokenObserver,\n  getState,\n  ListenerType,\n  setState\n} from './state';\nimport { TOKEN_REFRESH_TIME } from './constants';\nimport { Refresher } from './proactive-refresh';\nimport { ensureActivated, formatDummyToken } from './util';\nimport { exchangeToken, getExchangeDebugTokenRequest } from './client';\nimport { writeTokenToStorage } from './storage';\nimport { getDebugToken, isDebugMode } from './debug';\nimport { logger } from './logger';\nimport { Provider } from '@firebase/component';\n\n// Initial hardcoded value agreed upon across platforms for initial launch.\n// Format left open for possible dynamic error values and other fields in the future.\nexport const defaultTokenErrorData = { error: 'UNKNOWN_ERROR' };\n\n/**\n * This function will always resolve.\n * The result will contain an error field if there is any error.\n * In case there is an error, the token field in the result will be populated with a dummy value\n */\nexport async function getToken(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  forceRefresh = false\n): Promise<AppCheckTokenResult> {\n  ensureActivated(app);\n\n  const state = getState(app);\n\n  /**\n   * First check if there is a token in memory from a previous `getToken()` call.\n   */\n  let token: AppCheckTokenInternal | undefined = state.token;\n  let error: Error | undefined = undefined;\n\n  /**\n   * If there is no token in memory, try to load token from indexedDB.\n   */\n  if (!token) {\n    // cachedTokenPromise contains the token found in IndexedDB or undefined if not found.\n    const cachedToken = await state.cachedTokenPromise;\n    if (cachedToken && isValid(cachedToken)) {\n      token = cachedToken;\n\n      setState(app, { ...state, token });\n      // notify all listeners with the cached token\n      notifyTokenListeners(app, { token: token.token });\n    }\n  }\n\n  // Return the cached token (from either memory or indexedDB) if it's valid\n  if (!forceRefresh && token && isValid(token)) {\n    return {\n      token: token.token\n    };\n  }\n\n  /**\n   * DEBUG MODE\n   * If debug mode is set, and there is no cached token, fetch a new App\n   * Check token using the debug token, and return it directly.\n   */\n  if (isDebugMode()) {\n    const tokenFromDebugExchange: AppCheckTokenInternal = await exchangeToken(\n      getExchangeDebugTokenRequest(app, await getDebugToken()),\n      platformLoggerProvider\n    );\n    // Write debug token to indexedDB.\n    await writeTokenToStorage(app, tokenFromDebugExchange);\n    // Write debug token to state.\n    setState(app, { ...state, token: tokenFromDebugExchange });\n    return { token: tokenFromDebugExchange.token };\n  }\n\n  /**\n   * request a new token\n   */\n  try {\n    // state.provider is populated in initializeAppCheck()\n    // ensureActivated() at the top of this function checks that\n    // initializeAppCheck() has been called.\n    token = await state.provider!.getToken();\n  } catch (e) {\n    // `getToken()` should never throw, but logging error text to console will aid debugging.\n    logger.error(e);\n    error = e;\n  }\n\n  let interopTokenResult: AppCheckTokenResult | undefined;\n  if (!token) {\n    // if token is undefined, there must be an error.\n    // we return a dummy token along with the error\n    interopTokenResult = makeDummyTokenResult(error!);\n  } else {\n    interopTokenResult = {\n      token: token.token\n    };\n    // write the new token to the memory state as well as the persistent storage.\n    // Only do it if we got a valid new token\n    setState(app, { ...state, token });\n    await writeTokenToStorage(app, token);\n  }\n\n  notifyTokenListeners(app, interopTokenResult);\n  return interopTokenResult;\n}\n\nexport function addTokenListener(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  type: ListenerType,\n  listener: AppCheckTokenListener,\n  onError?: (error: Error) => void\n): void {\n  const state = getState(app);\n  const tokenListener: AppCheckTokenObserver = {\n    next: listener,\n    error: onError,\n    type\n  };\n  const newState = {\n    ...state,\n    tokenObservers: [...state.tokenObservers, tokenListener]\n  };\n\n  /**\n   * Invoke the listener with the valid token, then start the token refresher\n   */\n  if (!newState.tokenRefresher) {\n    const tokenRefresher = createTokenRefresher(app, platformLoggerProvider);\n    newState.tokenRefresher = tokenRefresher;\n  }\n\n  // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\n  // is not true.\n  if (!newState.tokenRefresher.isRunning() && state.isTokenAutoRefreshEnabled) {\n    newState.tokenRefresher.start();\n  }\n\n  // Invoke the listener async immediately if there is a valid token\n  // in memory.\n  if (state.token && isValid(state.token)) {\n    const validToken = state.token;\n    Promise.resolve()\n      .then(() => listener({ token: validToken.token }))\n      .catch(() => {\n        /** Ignore errors in listeners. */\n      });\n  } else if (state.token == null) {\n    // Only check cache if there was no token. If the token was invalid,\n    // skip this and rely on exchange endpoint.\n    void state\n      .cachedTokenPromise! // Storage token promise. Always populated in `activate()`.\n      .then(cachedToken => {\n        if (cachedToken && isValid(cachedToken)) {\n          listener({ token: cachedToken.token });\n        }\n      })\n      .catch(() => {\n        /** Ignore errors in listeners. */\n      });\n  }\n\n  setState(app, newState);\n}\n\nexport function removeTokenListener(\n  app: FirebaseApp,\n  listener: (token: AppCheckTokenResult) => void\n): void {\n  const state = getState(app);\n\n  const newObservers = state.tokenObservers.filter(\n    tokenObserver => tokenObserver.next !== listener\n  );\n  if (\n    newObservers.length === 0 &&\n    state.tokenRefresher &&\n    state.tokenRefresher.isRunning()\n  ) {\n    state.tokenRefresher.stop();\n  }\n\n  setState(app, {\n    ...state,\n    tokenObservers: newObservers\n  });\n}\n\nfunction createTokenRefresher(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>\n): Refresher {\n  return new Refresher(\n    // Keep in mind when this fails for any reason other than the ones\n    // for which we should retry, it will effectively stop the proactive refresh.\n    async () => {\n      const state = getState(app);\n      // If there is no token, we will try to load it from storage and use it\n      // If there is a token, we force refresh it because we know it's going to expire soon\n      let result;\n      if (!state.token) {\n        result = await getToken(app, platformLoggerProvider);\n      } else {\n        result = await getToken(app, platformLoggerProvider, true);\n      }\n\n      // getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.\n      if (result.error) {\n        throw result.error;\n      }\n    },\n    () => {\n      // TODO: when should we retry?\n      return true;\n    },\n    () => {\n      const state = getState(app);\n\n      if (state.token) {\n        // issuedAtTime + (50% * total TTL) + 5 minutes\n        let nextRefreshTimeMillis =\n          state.token.issuedAtTimeMillis +\n          (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) *\n            0.5 +\n          5 * 60 * 1000;\n        // Do not allow refresh time to be past (expireTime - 5 minutes)\n        const latestAllowableRefresh =\n          state.token.expireTimeMillis - 5 * 60 * 1000;\n        nextRefreshTimeMillis = Math.min(\n          nextRefreshTimeMillis,\n          latestAllowableRefresh\n        );\n        return Math.max(0, nextRefreshTimeMillis - Date.now());\n      } else {\n        return 0;\n      }\n    },\n    TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT,\n    TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT\n  );\n}\n\nfunction notifyTokenListeners(\n  app: FirebaseApp,\n  token: AppCheckTokenResult\n): void {\n  const observers = getState(app).tokenObservers;\n\n  for (const observer of observers) {\n    try {\n      if (observer.type === ListenerType.EXTERNAL && token.error != null) {\n        // If this listener was added by a 3P call, send any token error to\n        // the supplied error handler. A 3P observer always has an error\n        // handler.\n        observer.error!(token.error);\n      } else {\n        // If the token has no error field, always return the token.\n        // If this is a 2P listener, return the token, whether or not it\n        // has an error field.\n        observer.next(token);\n      }\n    } catch (ignored) {\n      // Errors in the listener function itself are always ignored.\n    }\n  }\n}\n\nexport function isValid(token: AppCheckTokenInternal): boolean {\n  return token.expireTimeMillis - Date.now() > 0;\n}\n\nfunction makeDummyTokenResult(error: Error): AppCheckTokenResult {\n  return {\n    token: formatDummyToken(defaultTokenErrorData),\n    error\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { getState, setState } from './state';\nimport { Deferred } from '@firebase/util';\nimport { getRecaptcha, ensureActivated } from './util';\n\nexport const RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\n\nexport function initialize(\n  app: FirebaseApp,\n  siteKey: string\n): Promise<GreCAPTCHA> {\n  const state = getState(app);\n  const initialized = new Deferred<GreCAPTCHA>();\n\n  setState(app, { ...state, reCAPTCHAState: { initialized } });\n\n  const divId = `fire_app_check_${app.name}`;\n  const invisibleDiv = document.createElement('div');\n  invisibleDiv.id = divId;\n  invisibleDiv.style.display = 'none';\n\n  document.body.appendChild(invisibleDiv);\n\n  const grecaptcha = getRecaptcha();\n  if (!grecaptcha) {\n    loadReCAPTCHAScript(() => {\n      const grecaptcha = getRecaptcha();\n\n      if (!grecaptcha) {\n        // it shouldn't happen.\n        throw new Error('no recaptcha');\n      }\n      grecaptcha.ready(() => {\n        // Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps\n        renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n        initialized.resolve(grecaptcha);\n      });\n    });\n  } else {\n    grecaptcha.ready(() => {\n      renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n      initialized.resolve(grecaptcha);\n    });\n  }\n\n  return initialized.promise;\n}\n\nexport async function getToken(app: FirebaseApp): Promise<string> {\n  ensureActivated(app);\n\n  // ensureActivated() guarantees that reCAPTCHAState is set\n  const reCAPTCHAState = getState(app).reCAPTCHAState!;\n  const recaptcha = await reCAPTCHAState.initialized.promise;\n\n  return new Promise((resolve, _reject) => {\n    // Updated after initialization is complete.\n    const reCAPTCHAState = getState(app).reCAPTCHAState!;\n    recaptcha.ready(() => {\n      resolve(\n        // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\n        recaptcha.execute(reCAPTCHAState.widgetId!, {\n          action: 'fire_app_check'\n        })\n      );\n    });\n  });\n}\n\n/**\n *\n * @param app\n * @param container - Id of a HTML element.\n */\nfunction renderInvisibleWidget(\n  app: FirebaseApp,\n  siteKey: string,\n  grecaptcha: GreCAPTCHA,\n  container: string\n): void {\n  const widgetId = grecaptcha.render(container, {\n    sitekey: siteKey,\n    size: 'invisible'\n  });\n\n  const state = getState(app);\n\n  setState(app, {\n    ...state,\n    reCAPTCHAState: {\n      ...state.reCAPTCHAState!, // state.reCAPTCHAState is set in the initialize()\n      widgetId\n    }\n  });\n}\n\nfunction loadReCAPTCHAScript(onload: () => void): void {\n  const script = document.createElement('script');\n  script.src = `${RECAPTCHA_URL}`;\n  script.onload = onload;\n  document.head.appendChild(script);\n}\n\ndeclare global {\n  interface Window {\n    grecaptcha: GreCAPTCHA | undefined;\n  }\n}\n\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { Provider } from '@firebase/component';\nimport { issuedAtTime } from '@firebase/util';\nimport { CustomProviderOptions } from '../../app-check-types';\nimport { exchangeToken, getExchangeRecaptchaTokenRequest } from './client';\nimport { ERROR_FACTORY, AppCheckError } from './errors';\nimport {\n  getToken as getReCAPTCHAToken,\n  initialize as initializeRecaptcha\n} from './recaptcha';\nimport { AppCheckTokenInternal } from './state';\n\nexport interface AppCheckProviderInternal {\n  /**\n   * Returns an AppCheck token.\n   */\n  getToken(): Promise<AppCheckTokenInternal>;\n  /**\n   * Initialize the class once app and platformLoggerProvider are available.\n   */\n  initialize(\n    app: FirebaseApp,\n    platformLoggerProvider: Provider<'platform-logger'>\n  ): void;\n}\n\n/**\n * App Check provider that can obtain a reCAPTCHA V3 token and exchange it\n * for an App Check token.\n */\nexport class ReCaptchaV3Provider implements AppCheckProviderInternal {\n  private _app?: FirebaseApp;\n  private _platformLoggerProvider?: Provider<'platform-logger'>;\n  /**\n   * Create a ReCaptchaV3Provider instance.\n   * @param siteKey - ReCAPTCHA V3 siteKey.\n   */\n  constructor(private _siteKey: string) {}\n  /**\n   * Returns an App Check token.\n   * @internal\n   */\n  async getToken(): Promise<AppCheckTokenInternal> {\n    if (!this._app || !this._platformLoggerProvider) {\n      // This should only occur if user has not called initializeAppCheck().\n      // We don't have an appName to provide if so.\n      // This should already be caught in the top level `getToken()` function.\n      throw ERROR_FACTORY.create(AppCheckError.USE_BEFORE_ACTIVATION, {\n        appName: ''\n      });\n    }\n    let attestedClaimsToken;\n    try {\n      attestedClaimsToken = await getReCAPTCHAToken(this._app);\n    } catch (e) {\n      // reCaptcha.execute() throws null which is not very descriptive.\n      throw ERROR_FACTORY.create(AppCheckError.RECAPTCHA_ERROR);\n    }\n    return exchangeToken(\n      getExchangeRecaptchaTokenRequest(this._app, attestedClaimsToken),\n      this._platformLoggerProvider\n    );\n  }\n\n  initialize(\n    app: FirebaseApp,\n    platformLoggerProvider: Provider<'platform-logger'>\n  ): void {\n    this._app = app;\n    this._platformLoggerProvider = platformLoggerProvider;\n    initializeRecaptcha(app, this._siteKey).catch(() => {\n      /* we don't care about the initialization result */\n    });\n  }\n}\n\n/**\n * Custom provider class.\n */\nexport class CustomProvider implements AppCheckProviderInternal {\n  private _app?: FirebaseApp;\n\n  constructor(private _customProviderOptions: CustomProviderOptions) {}\n\n  /**\n   * @internal\n   */\n  async getToken(): Promise<AppCheckTokenInternal> {\n    if (!this._app) {\n      // This should only occur if user has not called initializeAppCheck().\n      // We don't have an appName to provide if so.\n      // This should already be caught in the top level `getToken()` function.\n      throw ERROR_FACTORY.create(AppCheckError.USE_BEFORE_ACTIVATION, {\n        appName: ''\n      });\n    }\n    // custom provider\n    const customToken = await this._customProviderOptions.getToken();\n    // Try to extract IAT from custom token, in case this token is not\n    // being newly issued. JWT timestamps are in seconds since epoch.\n    const issuedAtTimeSeconds = issuedAtTime(customToken.token);\n    // Very basic validation, use current timestamp as IAT if JWT\n    // has no `iat` field or value is out of bounds.\n    const issuedAtTimeMillis =\n      issuedAtTimeSeconds !== null &&\n      issuedAtTimeSeconds < Date.now() &&\n      issuedAtTimeSeconds > 0\n        ? issuedAtTimeSeconds * 1000\n        : Date.now();\n\n    return { ...customToken, issuedAtTimeMillis };\n  }\n\n  /**\n   * @internal\n   */\n  initialize(app: FirebaseApp): void {\n    this._app = app;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckProvider,\n  AppCheckTokenResult\n} from '@firebase/app-check-types';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, AppCheckError } from './errors';\nimport { getState, setState, AppCheckState, ListenerType } from './state';\nimport {\n  getToken as getTokenInternal,\n  addTokenListener,\n  removeTokenListener,\n  isValid\n} from './internal-api';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, NextFn, PartialObserver, Unsubscribe } from '@firebase/util';\nimport { CustomProvider, ReCaptchaV3Provider } from './providers';\nimport { readTokenFromStorage } from './storage';\n\n/**\n *\n * @param app\n * @param siteKeyOrProvider - optional custom attestation provider\n * or reCAPTCHA provider\n * @param isTokenAutoRefreshEnabled - if true, enables auto refresh\n * of appCheck token.\n */\nexport function activate(\n  app: FirebaseApp,\n  siteKeyOrProvider:\n    | ReCaptchaV3Provider\n    | CustomProvider\n    // This is the old interface for users to supply a custom provider.\n    | AppCheckProvider\n    | string,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  isTokenAutoRefreshEnabled?: boolean\n): void {\n  const state = getState(app);\n  if (state.activated) {\n    throw ERROR_FACTORY.create(AppCheckError.ALREADY_ACTIVATED, {\n      appName: app.name\n    });\n  }\n\n  const newState: AppCheckState = { ...state, activated: true };\n\n  // Read cached token from storage if it exists and store it in memory.\n  newState.cachedTokenPromise = readTokenFromStorage(app).then(cachedToken => {\n    if (cachedToken && isValid(cachedToken)) {\n      setState(app, { ...getState(app), token: cachedToken });\n    }\n    return cachedToken;\n  });\n\n  if (typeof siteKeyOrProvider === 'string') {\n    newState.provider = new ReCaptchaV3Provider(siteKeyOrProvider);\n  } else if (\n    siteKeyOrProvider instanceof ReCaptchaV3Provider ||\n    siteKeyOrProvider instanceof CustomProvider\n  ) {\n    newState.provider = siteKeyOrProvider;\n  } else {\n    // Process \"old\" custom provider to avoid breaking previous users.\n    // This was defined at beta release as simply an object with a\n    // getToken() method.\n    newState.provider = new CustomProvider({\n      getToken: siteKeyOrProvider.getToken\n    });\n  }\n\n  // Use value of global `automaticDataCollectionEnabled` (which\n  // itself defaults to false if not specified in config) if\n  // `isTokenAutoRefreshEnabled` param was not provided by user.\n  newState.isTokenAutoRefreshEnabled =\n    isTokenAutoRefreshEnabled === undefined\n      ? app.automaticDataCollectionEnabled\n      : isTokenAutoRefreshEnabled;\n\n  setState(app, newState);\n\n  newState.provider.initialize(app, platformLoggerProvider);\n}\n\nexport function setTokenAutoRefreshEnabled(\n  app: FirebaseApp,\n  isTokenAutoRefreshEnabled: boolean\n): void {\n  const state = getState(app);\n  // This will exist if any product libraries have called\n  // `addTokenListener()`\n  if (state.tokenRefresher) {\n    if (isTokenAutoRefreshEnabled === true) {\n      state.tokenRefresher.start();\n    } else {\n      state.tokenRefresher.stop();\n    }\n  }\n  setState(app, { ...state, isTokenAutoRefreshEnabled });\n}\n\n/**\n * Differs from internal getToken in that it throws the error.\n */\nexport async function getToken(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  forceRefresh?: boolean\n): Promise<AppCheckTokenResult> {\n  const result = await getTokenInternal(\n    app,\n    platformLoggerProvider,\n    forceRefresh\n  );\n  if (result.error) {\n    throw result.error;\n  }\n  return { token: result.token };\n}\n\n/**\n * Wraps addTokenListener/removeTokenListener methods in an Observer\n * pattern for public use.\n */\nexport function onTokenChanged(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  observer: PartialObserver<AppCheckTokenResult>\n): Unsubscribe;\nexport function onTokenChanged(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  onNext: (tokenResult: AppCheckTokenResult) => void,\n  onError?: (error: Error) => void,\n  onCompletion?: () => void\n): Unsubscribe;\nexport function onTokenChanged(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>,\n  onNextOrObserver:\n    | ((tokenResult: AppCheckTokenResult) => void)\n    | PartialObserver<AppCheckTokenResult>,\n  onError?: (error: Error) => void,\n  /**\n   * NOTE: Although an `onCompletion` callback can be provided, it will\n   * never be called because the token stream is never-ending.\n   * It is added only for API consistency with the observer pattern, which\n   * we follow in JS APIs.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onCompletion?: () => void\n): Unsubscribe {\n  let nextFn: NextFn<AppCheckTokenResult> = () => {};\n  let errorFn: ErrorFn = () => {};\n  if ((onNextOrObserver as PartialObserver<AppCheckTokenResult>).next != null) {\n    nextFn = (\n      onNextOrObserver as PartialObserver<AppCheckTokenResult>\n    ).next!.bind(onNextOrObserver);\n  } else {\n    nextFn = onNextOrObserver as NextFn<AppCheckTokenResult>;\n  }\n  if (\n    (onNextOrObserver as PartialObserver<AppCheckTokenResult>).error != null\n  ) {\n    errorFn = (\n      onNextOrObserver as PartialObserver<AppCheckTokenResult>\n    ).error!.bind(onNextOrObserver);\n  } else if (onError) {\n    errorFn = onError;\n  }\n  addTokenListener(\n    app,\n    platformLoggerProvider,\n    ListenerType.EXTERNAL,\n    nextFn,\n    errorFn\n  );\n  return () => removeTokenListener(app, nextFn);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppCheck,\n  AppCheckProvider,\n  AppCheckTokenResult,\n  ReCaptchaV3Provider,\n  CustomProvider\n} from '@firebase/app-check-types';\nimport {\n  activate,\n  setTokenAutoRefreshEnabled,\n  getToken,\n  onTokenChanged\n} from './api';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseAppCheckInternal } from '@firebase/app-check-interop-types';\nimport {\n  getToken as getTokenInternal,\n  addTokenListener,\n  removeTokenListener\n} from './internal-api';\nimport {\n  ReCaptchaV3Provider as ReCaptchaV3ProviderImpl,\n  CustomProvider as CustomProviderImpl\n} from './providers';\nimport { Provider } from '@firebase/component';\nimport { PartialObserver } from '@firebase/util';\n\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { getState, ListenerType } from './state';\n\nexport function factory(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>\n): FirebaseAppCheck & FirebaseService {\n  return {\n    app,\n    activate: (\n      siteKeyOrProvider:\n        | ReCaptchaV3Provider\n        | CustomProvider\n        | AppCheckProvider\n        | string,\n      isTokenAutoRefreshEnabled?: boolean\n    ) =>\n      activate(\n        app,\n        // Public types of ReCaptchaV3Provider/CustomProvider don't\n        // expose getToken() and aren't recognized as the internal\n        // class version of themselves.\n        siteKeyOrProvider as\n          | ReCaptchaV3ProviderImpl\n          | CustomProviderImpl\n          | AppCheckProvider\n          | string,\n        platformLoggerProvider,\n        isTokenAutoRefreshEnabled\n      ),\n    setTokenAutoRefreshEnabled: (isTokenAutoRefreshEnabled: boolean) =>\n      setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled),\n    getToken: forceRefresh =>\n      getToken(app, platformLoggerProvider, forceRefresh),\n    onTokenChanged: (\n      onNextOrObserver:\n        | ((tokenResult: AppCheckTokenResult) => void)\n        | PartialObserver<AppCheckTokenResult>,\n      onError?: (error: Error) => void,\n      onCompletion?: () => void\n    ) =>\n      onTokenChanged(\n        app,\n        platformLoggerProvider,\n        /**\n         * This can still be an observer. Need to do this casting because\n         * according to Typescript: \"Implementation signatures of overloads\n         * are not externally visible\"\n         */\n        onNextOrObserver as (tokenResult: AppCheckTokenResult) => void,\n        onError,\n        onCompletion\n      ),\n    INTERNAL: {\n      delete: () => {\n        const { tokenObservers } = getState(app);\n        for (const tokenObserver of tokenObservers) {\n          removeTokenListener(app, tokenObserver.next);\n        }\n        return Promise.resolve();\n      }\n    }\n  };\n}\n\nexport function internalFactory(\n  app: FirebaseApp,\n  platformLoggerProvider: Provider<'platform-logger'>\n): FirebaseAppCheckInternal {\n  return {\n    getToken: forceRefresh =>\n      getTokenInternal(app, platformLoggerProvider, forceRefresh),\n    addTokenListener: listener =>\n      addTokenListener(\n        app,\n        platformLoggerProvider,\n        ListenerType.INTERNAL,\n        listener\n      ),\n    removeTokenListener: listener => removeTokenListener(app, listener)\n  };\n}\n"],"sourceRoot":""}