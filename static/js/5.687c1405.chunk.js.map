{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"names":["module","exports","a","n","TypeError","__esModule","toPropertyKey","_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","key","prototype","value","_typeof","assertThisInitialized","ReferenceError","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","create","constructor","_extends","assign","arguments","hasOwnProperty","call","apply","Symbol","iterator","toPrimitive","i","objectWithoutPropertiesLoose","getOwnPropertySymbols","indexOf","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","self","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","target","className","this","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","Array","arrayLikeToArray","toString","slice","name","from","test","String","Number","_setPrototypeOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","isArray","arrayWithHoles","iterableToArrayLimit","nonIterableRest","l","u","f","next","done","componentWillMount","state","getDerivedStateFromProps","props","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"mappings":"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","file":"static/js/5.687c1405.chunk.js","sourcesContent":["function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(t) {\n  return module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _getPrototypeOf(t);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(t, e) {\n  return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _setPrototypeOf(t, e);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"sourceRoot":""}