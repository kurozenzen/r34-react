{"version":3,"sources":["hooks/useFirebaseAuthState.tsx","hooks/usePageTitle.tsx","components/designsystem/TitledSurface.tsx","components/designsystem/Select.tsx","components/designsystem/SmallInput.tsx","components/widgets/SponsoringButtons.tsx","components/layout/infinite/InfiniteColumn.tsx","components/post/source/FallbackSource.tsx","components/designsystem/ColoredIconLink.tsx","components/post/source/LinkSource.tsx","components/post/source/sourceUtils.ts","icons/PixivIcon.tsx","components/post/source/SpecialLinkSource.tsx","components/post/source/Source.tsx","components/post/details/AdditonalDetails.tsx","components/post/details/Comments.tsx","components/post/details/Metadata.tsx","components/post/details/Rating.tsx","components/post/details/Score.tsx","components/post/details/Details.tsx","components/post/Post.tsx","components/widgets/SearchButton.tsx","hooks/useConnectionState.tsx","components/designsystem/SubtleInput.tsx","components/widgets/RatedFilter.tsx","components/widgets/SortSelect.tsx","components/features/SearchEditor.tsx","components/designsystem/C.tsx","components/widgets/RandomTip.tsx","components/widgets/UpdateHighlight.tsx","components/widgets/SearchPlaceholder.tsx","components/widgets/ResultsTitle.tsx","components/layout/LayoutHeader.tsx","components/layout/LayoutLoadingItem.tsx","components/layout/pages/PageNavigation.tsx","components/layout/pages/PageLayout.tsx","components/pages/Search.tsx","hooks/useScrollUpBackNavigation.tsx"],"names":["useFirebaseAuthState","useState","authState","setAuthState","user","setUser","useEffect","unsubscribe","firebase","auth","onAuthStateChanged","usePageTitle","title","React","document","PaddedTitle","styled","Title","theme","css","dimensions","hugeSpacing","PaddedSurface","Surface","$compact","bigSpacing","gap","TitledSurface","props","children","className","compact","Wrapper","div","blockHeight","StyledSelect","select","defaultInput","Option","option","defaultBorder","colors","backgroundColor2","defaultBlock","Select","options","value","onChange","Object","entries","map","optionKey","optionValue","StyledInput","input","SmallNumberInput","onSubmit","min","max","step","toString","internalValue","setInternalValue","useCallback","event","target","onBlur","Number","blurOnEnter","key","blur","type","onKeyDown","KofiImage","img","KofiButton","id","label","href","rel","src","alt","PatreonButton","name","color","RandomSponsoring","memo","Math","floor","random","cache","CellMeasurerCache","fixedWidth","InifinteColumn","Header","items","LoadingItem","hasMoreRows","ItemComponent","loadMore","OutOfItems","isLoading","prependedRows","rowCount","length","isRowLoaded","index","rowRenderer","parent","style","columnIndex","rowIndex","measure","registerChild","virtualRef","onLoad","console","warn","loadMoreRows","params","Promise","resolve","handleResize","size","clearAll","onRowsRendered","onResize","disableHeight","width","height","isScrolling","onChildScroll","scrollTop","autoHeight","onScroll","ref","deferredMeasurementCache","overscanRowCount","rowHeight","FallbackSource","FlexPair","ColoredIconLink","a","flexRowWithGap","DefaultLinkSource","useTheme","accentColor","formatSource","extractFirstElement","split","sources","TwitterIcon","viewBox","xmlns","fill","d","PatreonIcon","path","startsWith","extractSecondElement","DeviantArtIcon","DiscordIcon","TumblrIcon","URL","hostname","SpecialLinkSource","Icon","Source","parseUrl","links","link","source","keys","find","includes","getTitle","AdditionalDetails","flexColumnWithGap","defaultSpacing","Comment","flexColumnGap","spacing","Username","span","Message","Faded","Comments","comments","comment","creator","body","Entry","Metadata","created_at","status","createdAt","Date","formatDatetime","formatTime","now","getTime","fullnames","e","q","s","Rating","text","toUpperCase","ScorePair","$liked","liked","Score","postId","dispatch","useDispatch","useSelector","selectLikedByPostId","handleClick","stopPropagation","likePost","onClick","formatCount","boolToNumber","Bar","layer","borderRadius","Menu","MenuEntry","active","DetailsTagList","TagList","Details","useModifier","modifier","NO_OP","activeTab","setActiveTab","hasComments","selectPostById","rating","score","tags","tagsForRendering","useMemo","listToMap","tag","types","showMetadata","selectShowMetadata","showComments","selectShowComments","checkIsActive","useCheckIsActive","toggleTag","useToggleTag","setTags","setComments","setMetadata","addTagWithModifier","addTag","detailed","onTagClick","getIsActive","onTagMenu","metadata","ItemWrapper","PositonWrapper","bodyWidth","PostWrapper","ZIndex","POST","OVERLAY","ListPost","sample_url","file_url","preview_url","has_comments","Post","useToggle","collapsed","toggleCollapsed","showPostDetails","selectShowPostDetails","fetchComments","role","tabIndex","Media","detailsVisible","thumbnailSrc","sampleSrc","fullSrc","isActive","isUserNotified","SearchButton","search","useAction","getResults","connection","navigator","mozConnection","webkitConnection","connectionState","setConnectionState","listener","addEventListener","passive","removeEventListener","useConnectionState","preloadVideos","selectPreloadVideos","autoplay","selectAutoPlay","originals","selectOriginals","openModal","ModalId","CELLULAR_WARNING","SubtleInput","backgroundColor","fontSizes","content","RatedRow","RatedToggle","LabeledToggle","RatedFilter","usePreference","rated","setRated","ratedThreshold","setRatedThreshold","toggleRated","ratedThresholdInternal","setRatedThresholdInternal","handleSubmit","onToggle","SortRow","sortOptions","SortSelect","sort","setSort","handleSortChange","ConfigWrapper","section","flexColumn","centeredMaxWidth","SearchEditor","isSignedIn","activateTag","useActivateTag","htmlFor","TagSelector","showSupertags","ActiveTags","offerSupertags","C","layerBg","TipWrapper","tips","getRandomTip","randomBelow","RandomTip","tip","setTip","nextTip","UpdateHighlight","getMonth","getDate","Placeholder","SearchPlaceholder","ClickableTitle","ResultsTitle","fullNumber","toggleFullNumber","count","selectCount","formattedCount","toLocaleString","NewsContainter","NewsTitle","NewsGrid","Logo","GoogleIcon","LayoutHeader","LayoutLoadingItem","Loading","PageRow","gridWithGap","Left","Right","PageNumber","PrimaryButton","CurrentNumber","PageNavigation","currentPage","loadPage","lastPage","selectLastPage","loadSpecificPage","newPage","loadFirst","loadLast","loadPrevious","loadNext","PageLayoutFlexColumn","FlexColumn","PageLayout","header","scrollAndLoadPage","getElementsByClassName","scrollIntoView","item","Search","setLoading","lastUpdated","setLastUpdated","updated","selectUpdated","posts","selectPosts","hasMorePosts","selectHasMoreResults","resultsLayout","selectResultsLayout","pageSize","selectPageSize","pageNumber","selectPageNumber","getMoreResults","hash","history","useHistory","location","push","pathname","once","useScrollUpBackNavigation","LayoutOutOfItems","hasMorePages"],"mappings":"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","file":"static/js/7.a72b5b5c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * A hook that provides the firebase authentication status for use in functional components.\r\n */\r\nexport default function useFirebaseAuthState() {\r\n  const [authState, setAuthState] = useState(false)\r\n  const [user, setUser] = useState<firebase.User | null>(null)\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const unsubscribe = firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => {\r\n        if (user) {\r\n          setAuthState(true)\r\n          setUser(user)\r\n        } else {\r\n          setAuthState(false)\r\n          setUser(null)\r\n        }\r\n      })\r\n      return () => {\r\n        unsubscribe()\r\n      }\r\n    } catch {\r\n      setAuthState(false)\r\n      setUser(null)\r\n    }\r\n  }, [])\r\n\r\n  return [authState, user] as const\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * Effect that sets the title of the page to a specified string.\r\n * Really small utility hook that saves a few lines.\r\n */\r\nexport function usePageTitle(title: string) {\r\n  React.useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n}\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { gap } from '../../styled/mixins/gap'\r\nimport { Surface } from './Surface'\r\nimport { Title } from './Text'\r\n\r\nconst PaddedTitle = styled(Title)(\r\n  ({ theme }) => css`\r\n    padding-top: ${theme.dimensions.hugeSpacing};\r\n  `\r\n)\r\n\r\nconst PaddedSurface = styled(Surface)(\r\n  ({ theme, $compact }: { theme: DefaultTheme; $compact: boolean }) => css`\r\n    padding: ${$compact ? theme.dimensions.bigSpacing : theme.dimensions.hugeSpacing};\r\n    ${gap($compact ? theme.dimensions.bigSpacing : theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\ninterface TitledSurfaceProps {\r\n  title: React.ReactNode\r\n  children: React.ReactNode[]\r\n  compact?: boolean\r\n  className?: string\r\n}\r\n\r\nexport default function TitledSurface(props: TitledSurfaceProps) {\r\n  const { title, children, className, compact = false } = props\r\n\r\n  return (\r\n    <>\r\n      <PaddedTitle>{title}</PaddedTitle>\r\n      <PaddedSurface $compact={compact} className={className}>\r\n        {children}\r\n      </PaddedSurface>\r\n    </>\r\n  )\r\n}\r\n","import React, { ChangeEventHandler } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { defaultBlock } from '../../styled/mixins/layout'\r\nimport { defaultBorder, defaultInput } from '../../styled/mixins/theming'\r\n\r\nconst Wrapper = styled.div(\r\n  ({ theme }) => css`\r\n    width: 120px;\r\n    height: ${theme.dimensions.blockHeight};\r\n  `\r\n)\r\n\r\nconst StyledSelect = styled.select`\r\n  ${defaultInput}\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Option = styled.option(\r\n  ({ theme }) => css`\r\n    ${defaultBorder({ theme })}\r\n    background-color: ${theme.colors.backgroundColor2};\r\n    ${defaultBlock({ theme })}\r\n  `\r\n)\r\n\r\ninterface SelectProps {\r\n  options: Record<string, string>\r\n  value: string\r\n  onChange: ChangeEventHandler\r\n}\r\n\r\nexport default function Select(props: SelectProps) {\r\n  const { options, value, onChange } = props\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledSelect value={value} onChange={onChange}>\r\n        {Object.entries(options).map(([optionKey, optionValue]) => (\r\n          <Option key={optionKey} value={optionKey}>\r\n            {optionValue}\r\n          </Option>\r\n        ))}\r\n      </StyledSelect>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { ChangeEventHandler, useCallback, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { defaultInput } from '../../styled/mixins/theming'\r\n\r\nconst StyledInput = styled.input`\r\n  ${defaultInput}\r\n\r\n  width: 70px;\r\n  text-align: left;\r\n`\r\n\r\ninterface SmallTextInputProps {\r\n  value: string\r\n  onSubmit: (value: string) => void\r\n  className?: string\r\n}\r\n\r\ninterface SmallNumberInputProps {\r\n  value: number\r\n  onSubmit: (value: number) => void\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  className?: string\r\n}\r\n\r\nexport function SmallTextInput(props: SmallTextInputProps) {\r\n  const { value, onSubmit, className } = props\r\n  const [internalValue, setInternalValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    setInternalValue(value)\r\n  }, [value])\r\n\r\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    setInternalValue(event.target.value)\r\n  }, [])\r\n\r\n  const onBlur = useCallback(() => {\r\n    onSubmit(internalValue)\r\n  }, [internalValue, onSubmit])\r\n\r\n  const blurOnEnter = useCallback((event) => {\r\n    if (event.key === 'Enter') {\r\n      event.target.blur()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledInput\r\n      type='text'\r\n      value={internalValue}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={blurOnEnter}\r\n      className={className}\r\n    />\r\n  )\r\n}\r\n\r\nexport function SmallNumberInput(props: SmallNumberInputProps) {\r\n  const { value, onSubmit, className, min, max, step } = props\r\n  const [internalValue, setInternalValue] = useState(value.toString())\r\n\r\n  useEffect(() => {\r\n    setInternalValue(value.toString())\r\n  }, [value])\r\n\r\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    setInternalValue(event.target.value)\r\n  }, [])\r\n\r\n  const onBlur = useCallback(() => {\r\n    onSubmit(Number(internalValue))\r\n  }, [internalValue, onSubmit])\r\n\r\n  const blurOnEnter = useCallback((event) => {\r\n    if (event.key === 'Enter') {\r\n      event.target.blur()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledInput\r\n      type='number'\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      value={internalValue}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={blurOnEnter}\r\n      className={className}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { PatreonIcon } from '../../icons/FontAwesomeIcons'\r\nimport { LinkButton } from '../designsystem/Buttons'\r\n\r\nconst KofiImage = styled.img`\r\n  height: 13px !important;\r\n  width: 20px !important;\r\n`\r\n\r\ninterface KofiButtonProps {\r\n  id: string\r\n  label: string\r\n}\r\n\r\nexport function KofiButton(props: KofiButtonProps) {\r\n  const { id, label } = props\r\n\r\n  return (\r\n    <LinkButton title={label} href={`https://ko-fi.com/${id}`} target='_blank' rel='noopener noreferrer'>\r\n      <KofiImage src='https://ko-fi.com/img/cup-border.png' className='kofiimg' alt='Ko-Fi button' />\r\n      <span>{label}</span>\r\n    </LinkButton>\r\n  )\r\n}\r\n\r\ninterface PatreonButtonProps {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nexport function PatreonButton(props: PatreonButtonProps) {\r\n  const { name, label } = props\r\n\r\n  return (\r\n    <LinkButton title={label} href={`https://www.patreon.com/${name}`} target='_blank' rel='noopener noreferrer'>\r\n      <PatreonIcon color='currentcolor' />\r\n      <span>{label}</span>\r\n    </LinkButton>\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a random sponsoring link\r\n */\r\nexport const RandomSponsoring = React.memo(() => {\r\n  return Math.floor(Math.random() * 2) < 1 ? (\r\n    <KofiButton id='V7V73PWW9' label='Support me on Ko-fi' />\r\n  ) : (\r\n    <PatreonButton name='kurozenzen' label='Support me on Patreon' />\r\n  )\r\n})\r\n","import React, { useCallback } from 'react'\r\nimport {\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n  IndexRange,\r\n  InfiniteLoader,\r\n  List,\r\n  WindowScroller,\r\n} from 'react-virtualized'\r\nimport LayoutElementProps from '../LayoutElementProps'\r\n\r\nconst cache = new CellMeasurerCache({\r\n  fixedWidth: true,\r\n})\r\n\r\ninterface InfiniteColumnProps<T> {\r\n  Header?: (props: LayoutElementProps) => JSX.Element\r\n  OutOfItems?: (props: LayoutElementProps) => JSX.Element\r\n  items?: T[]\r\n  LoadingItem: (props: LayoutElementProps) => JSX.Element\r\n  hasMoreRows: boolean\r\n  loadMore: () => void\r\n  ItemComponent: (props: T & LayoutElementProps & { index: number }) => JSX.Element\r\n  isLoading: boolean\r\n}\r\n\r\nexport default function InifinteColumn<T>(props: InfiniteColumnProps<T>) {\r\n  const { Header, items = [], LoadingItem, hasMoreRows, ItemComponent, loadMore, OutOfItems, isLoading } = props\r\n\r\n  const prependedRows = Header ? 1 : 0\r\n  const loadingRows = 1\r\n  const rowCount = items.length + prependedRows + loadingRows\r\n\r\n  const isRowLoaded = useCallback(\r\n    ({ index }: { index: number }) => index < prependedRows + items.length + (hasMoreRows ? 0 : 1),\r\n    [hasMoreRows, items.length, prependedRows]\r\n  )\r\n\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, parent, style }: { index: number; key: any; parent: any; style: any }) => {\r\n      return (\r\n        <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\r\n          {({ measure, registerChild }) => {\r\n            // Index 0\r\n            if (Header && index < prependedRows) {\r\n              return <Header style={style} virtualRef={registerChild} onLoad={measure} />\r\n            }\r\n\r\n            // Index 1\r\n            if (index < prependedRows + items.length) {\r\n              return (\r\n                <ItemComponent\r\n                  style={style}\r\n                  virtualRef={registerChild}\r\n                  onLoad={measure}\r\n                  index={index - prependedRows}\r\n                  {...items[index - prependedRows]}\r\n                />\r\n              )\r\n            }\r\n\r\n            // Index 2\r\n            if (index < prependedRows + items.length + loadingRows) {\r\n              return hasMoreRows || isLoading ? (\r\n                <LoadingItem style={style} virtualRef={registerChild} onLoad={measure} />\r\n              ) : OutOfItems && items.length > 0 ? (\r\n                <OutOfItems style={style} virtualRef={registerChild} onLoad={measure} />\r\n              ) : (\r\n                <div></div>\r\n              )\r\n            }\r\n\r\n            console.warn('index not found / out of bounds. INDEX:', index)\r\n            return null\r\n          }}\r\n        </CellMeasurer>\r\n      )\r\n    },\r\n    [Header, prependedRows, items, ItemComponent, hasMoreRows, isLoading, LoadingItem, OutOfItems]\r\n  )\r\n\r\n  const loadMoreRows = useCallback(\r\n    (params: IndexRange) => {\r\n      if (!isLoading && hasMoreRows) {\r\n        loadMore()\r\n      }\r\n\r\n      return Promise.resolve()\r\n    },\r\n    [hasMoreRows, isLoading, loadMore]\r\n  )\r\n\r\n  const handleResize = useCallback((size) => {\r\n    cache.clearAll()\r\n  }, [])\r\n\r\n  return (\r\n    <InfiniteLoader isRowLoaded={isRowLoaded} loadMoreRows={loadMoreRows} rowCount={rowCount}>\r\n      {({ onRowsRendered, registerChild }) => {\r\n        return (\r\n          <AutoSizer onResize={handleResize} disableHeight>\r\n            {({ width }) => {\r\n              return (\r\n                <WindowScroller>\r\n                  {({ height, isScrolling, onChildScroll, scrollTop }) => {\r\n                    return (\r\n                      <List\r\n                        autoHeight\r\n                        height={height}\r\n                        isScrolling={isScrolling}\r\n                        onScroll={onChildScroll}\r\n                        scrollTop={scrollTop}\r\n                        ref={registerChild}\r\n                        onRowsRendered={onRowsRendered}\r\n                        rowRenderer={rowRenderer}\r\n                        deferredMeasurementCache={cache}\r\n                        overscanRowCount={10}\r\n                        rowCount={items.length + prependedRows + loadingRows}\r\n                        rowHeight={cache.rowHeight}\r\n                        width={width}\r\n                      />\r\n                    )\r\n                  }}\r\n                </WindowScroller>\r\n              )\r\n            }}\r\n          </AutoSizer>\r\n        )\r\n      }}\r\n    </InfiniteLoader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SourceIcon } from '../../../icons/FontAwesomeIcons'\r\nimport FlexPair from '../../designsystem/FlexPair'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function FallbackSource({ value }: SourceProps) {\r\n  return (\r\n    <FlexPair data-testid='text-source'>\r\n      <SourceIcon color='white' />\r\n      <span>{value}</span>\r\n    </FlexPair>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components'\r\nimport { flexRowWithGap } from '../../styled/mixins/layout'\r\n\r\nconst ColoredIconLink = styled.a(\r\n  ({ color, theme }) => css`\r\n    ${flexRowWithGap({ theme })}\r\n    ${color\r\n      ? css`\r\n          color: ${color} !important;\r\n        `\r\n      : ''};\r\n    white-space: nowrap;\r\n\r\n    svg {\r\n      height: 16px;\r\n    }\r\n  `\r\n)\r\n\r\nexport default ColoredIconLink\r\n","import React from 'react'\r\nimport { useTheme } from 'styled-components'\r\nimport { LinkIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { formatSource } from '../../../misc/formatting'\r\nimport ColoredIconLink from '../../designsystem/ColoredIconLink'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function DefaultLinkSource({ value }: SourceProps) {\r\n  const color = useTheme().colors.accentColor\r\n  const title = formatSource(value)\r\n\r\n  return (\r\n    <ColoredIconLink\r\n      data-testid='link-source'\r\n      color={color}\r\n      href={value}\r\n      target='_blank'\r\n      rel='noopener noreferrer'\r\n      className='source'\r\n    >\r\n      <LinkIcon color={color} />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import { DeviantArtIcon, DiscordIcon, PatreonIcon, TumblrIcon, TwitterIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { PixivIcon } from '../../../icons/PixivIcon'\r\n\r\n/**\r\n * Cut away all the unnecessary parts of the link\r\n */\r\nexport function extractFirstElement(value: string) {\r\n  return value.split(' ')[0].split('?')[0].split('/')[0]\r\n}\r\n\r\nexport function extractSecondElement(value: string) {\r\n  return value.split(' ')[0].split('?')[0].split('/')[1]\r\n}\r\n\r\nexport type SourceMapping = [string, (props: any) => JSX.Element | null, (value: string) => string]\r\n\r\nexport const sources: Record<string, SourceMapping> = {\r\n  'twitter.com/': ['#1da1f2', TwitterIcon, (value) => extractFirstElement(value.split('twitter.com/')[1])],\r\n  'pixiv.net/': ['#0096FA', PixivIcon, () => 'Pixiv'],\r\n  'patreon.com/': [\r\n    '#FF424D',\r\n    PatreonIcon,\r\n    (value) => {\r\n      const path = value.split('patreon.com/')[1]\r\n\r\n      return path.startsWith('posts/') ? extractSecondElement(path) : extractFirstElement(path)\r\n    },\r\n  ],\r\n  'deviantart.com/': ['#00e59b', DeviantArtIcon, (value) => extractFirstElement(value.split('deviantart.com/')[1])],\r\n  'discordapp.com/': ['#7289DA', DiscordIcon, () => 'Discord'],\r\n  'tumblr.com': ['#75869C', TumblrIcon, (value) => new URL(value).hostname.split('.')[0]],\r\n}\r\n","import React, { SVGProps } from 'react'\r\n\r\nexport function PixivIcon(props: SVGProps<SVGElement>) {\r\n  return (\r\n    <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        fill='currentColor'\r\n        d='M4.935 0A4.924 4.924 0 0 0 0 4.935v14.13A4.924 4.924 0 0 0 4.935 24h14.13A4.924 4.924 0 0 0 24 19.065V4.935A4.924 4.924 0 0 0 19.065 0zm7.81 4.547c2.181 0 4.058.676 5.399 1.847a6.118 6.118 0 0 1 2.116 4.66c.005 1.854-.88 3.476-2.257 4.563-1.375 1.092-3.225 1.697-5.258 1.697-2.314 0-4.46-.842-4.46-.842v2.718c.397.116 1.048.365.635.779H5.79c-.41-.41.19-.65.644-.779V7.666c-1.053.81-1.593 1.51-1.868 2.031.32 1.02-.284.969-.284.969l-1.09-1.73s3.868-4.39 9.553-4.39zm-.19.971c-1.423-.003-3.184.473-4.27 1.244v8.646c.988.487 2.484.832 4.26.832h.01c1.596 0 2.98-.593 3.93-1.533.952-.948 1.486-2.183 1.492-3.683-.005-1.54-.504-2.864-1.42-3.86-.918-.992-2.274-1.645-4.002-1.646Z'\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ColoredIconLink from '../../designsystem/ColoredIconLink'\r\n\r\ninterface SpecialLinkSourceProps {\r\n  value: string\r\n  color: string\r\n  Icon: (props: unknown) => JSX.Element | null\r\n  title: string\r\n}\r\n\r\nexport default function SpecialLinkSource(props: SpecialLinkSourceProps) {\r\n  const { value, color, Icon, title } = props\r\n  return (\r\n    <ColoredIconLink\r\n      data-testid='known-source'\r\n      href={value}\r\n      target='_blank'\r\n      rel='noopener noreferrer'\r\n      className='source'\r\n      color={color}\r\n    >\r\n      <Icon />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { parseUrl } from '../../../data/utils'\r\nimport FallbackSource from './FallbackSource'\r\nimport DefaultLinkSource from './LinkSource'\r\nimport SourceProps from './SourceProps'\r\nimport { sources } from './sourceUtils'\r\nimport SpecialLinkSource from './SpecialLinkSource'\r\n\r\nexport default function Source({ value }: SourceProps) {\r\n  if (parseUrl(value)) {\r\n    // Sources can contain multiple links\r\n    const links = value.split(' ')\r\n    return (\r\n      <>\r\n        {links.map((link) => {\r\n          const source = Object.keys(sources).find((key) => link.includes(key))\r\n\r\n          if (source) {\r\n            const [color, Icon, getTitle] = sources[source]\r\n\r\n            return <SpecialLinkSource key={link} value={link} color={color} Icon={Icon} title={getTitle(link)} />\r\n          }\r\n\r\n          return <DefaultLinkSource key={link} value={link} />\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return <FallbackSource value={value} />\r\n}\r\n","import styled from 'styled-components'\r\nimport { defaultSpacing } from '../../../styled/mixins/gap'\r\nimport { flexColumnWithGap } from '../../../styled/mixins/layout'\r\n\r\nexport const AdditionalDetails = styled.div`\r\n  ${flexColumnWithGap}\r\n  ${defaultSpacing}\r\n  \r\n  flex-wrap: wrap;\r\n  padding-top: 0;\r\n  grid-row: 4/5;\r\n`\r\n","import * as r34 from 'r34-types'\r\nimport React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { flexColumnGap } from '../../../styled/mixins/gap'\r\nimport { Faded } from '../../designsystem/Text'\r\nimport { AdditionalDetails } from './AdditonalDetails'\r\n\r\nconst Comment = styled.div(\r\n  ({ theme }) => css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.spacing)}\r\n  `\r\n)\r\n\r\nconst Username = styled.span`\r\n  line-height: 20px;\r\n`\r\n\r\nconst Message = styled(Faded)`\r\n  line-height: 20px;\r\n`\r\n\r\ninterface CommentsProps {\r\n  comments: r34.Comment[]\r\n}\r\n\r\nexport default function Comments(props: CommentsProps) {\r\n  const { comments } = props\r\n\r\n  return (\r\n    <AdditionalDetails>\r\n      {comments.map((comment, index) => (\r\n        <Comment key={index}>\r\n          <Username>{comment.creator}</Username>\r\n          <Message>{comment.body}</Message>\r\n        </Comment>\r\n      ))}\r\n    </AdditionalDetails>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from 'r34-types'\r\nimport { CalendarIcon, CheckIcon, ImageIcon, SourceIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { formatDatetime, formatTime } from '../../../misc/formatting'\r\nimport FlexPair from '../../designsystem/FlexPair'\r\nimport { Faded } from '../../designsystem/Text'\r\nimport { AdditionalDetails } from './AdditonalDetails'\r\n\r\nconst Entry = styled(Faded)`\r\n  white-space: nowrap;\r\n`\r\n\r\ntype MetadataProps = Pick<Post, 'created_at' | 'status' | 'width' | 'height' | 'id'>\r\n\r\nexport default function Metadata(props: MetadataProps) {\r\n  const { created_at, width, height, id, status } = props\r\n\r\n  const createdAt = new Date(created_at)\r\n\r\n  return (\r\n    <AdditionalDetails>\r\n      <FlexPair title='Id'>\r\n        <SourceIcon />\r\n        <Entry data-testid='id'>{id}</Entry>\r\n      </FlexPair>\r\n\r\n      <FlexPair title='Upload Date'>\r\n        <CalendarIcon />\r\n        <Entry data-testid='date'>\r\n          {formatDatetime(createdAt)} ({formatTime(Date.now() - createdAt.getTime())} ago)\r\n        </Entry>\r\n      </FlexPair>\r\n\r\n      <FlexPair title='Status'>\r\n        <CheckIcon />\r\n        <Entry data-testid='status'>{status}</Entry>\r\n      </FlexPair>\r\n\r\n      <FlexPair title='Measurements'>\r\n        <ImageIcon />\r\n        <Entry data-testid='size'>\r\n          {width} x {height}\r\n        </Entry>\r\n      </FlexPair>\r\n    </AdditionalDetails>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as r34 from 'r34-types'\r\nimport { RatingIcon } from '../../../icons/FontAwesomeIcons'\r\nimport FlexPair from '../../designsystem/FlexPair'\r\nimport { useTheme } from 'styled-components'\r\n\r\nconst fullnames: Record<r34.PostRating, string> = {\r\n  e: 'Explicit',\r\n  q: 'Questionable',\r\n  s: 'Safe',\r\n}\r\n\r\ninterface RatingProps {\r\n  value: r34.PostRating\r\n}\r\n\r\nexport default function Rating(props: RatingProps) {\r\n  const { value } = props\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <FlexPair data-testid='rating' title={fullnames[value]}>\r\n      <RatingIcon color={theme.colors.text} />\r\n      <span>{value.toUpperCase()}</span>\r\n    </FlexPair>\r\n  )\r\n}\r\n","import React, { MouseEventHandler, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { boolToNumber } from '../../../data/utils'\r\nimport { HeartIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { formatCount } from '../../../misc/formatting'\r\nimport { likePost } from '../../../redux/actions'\r\nimport { selectLikedByPostId } from '../../../redux/selectors'\r\nimport FlexPair from '../../designsystem/FlexPair'\r\n\r\nconst ScorePair = styled(FlexPair)(\r\n  ({ $liked, theme }: { $liked: boolean; theme: DefaultTheme }) => css`\r\n    transition: transform 0.1s ease-out;\r\n    cursor: pointer;\r\n\r\n    ${$liked\r\n      ? css`\r\n          color: ${theme.colors.liked};\r\n\r\n          svg {\r\n            color: ${theme.colors.liked};\r\n          }\r\n        `\r\n      : css``}\r\n  `\r\n)\r\n\r\nexport default function Score(props: { value: number; postId: number }) {\r\n  const { value, postId } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const liked = useSelector(selectLikedByPostId(postId))\r\n  const handleClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n\r\n      if (!liked) {\r\n        dispatch(likePost(postId))\r\n      }\r\n    },\r\n    [dispatch, liked, postId]\r\n  )\r\n\r\n  return (\r\n    <ScorePair onClick={handleClick} $liked={liked} data-testid='score' title='Like this post'>\r\n      <HeartIcon color='white' />\r\n      <span>{formatCount(value + boolToNumber(liked))}</span>\r\n    </ScorePair>\r\n  )\r\n}\r\n","import React, { MouseEventHandler, useCallback, useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport * as r34 from 'r34-types'\r\nimport { ActiveTab, NO_OP } from '../../../data/types'\r\nimport { listToMap } from '../../../data/utils'\r\nimport useToggleTag from '../../../hooks/useToggleTag'\r\nimport { selectPostById, selectShowComments, selectShowMetadata } from '../../../redux/selectors'\r\nimport TagList from '../../tag/TagList'\r\nimport Source from '../source/Source'\r\nimport Comments from './Comments'\r\nimport Metadata from './Metadata'\r\nimport Rating from './Rating'\r\nimport Score from './Score'\r\nimport { useCheckIsActive } from '../../../hooks/useCheckIsActive'\r\nimport { addTag } from '../../../redux/actions'\r\nimport useModifier from '../../../hooks/useModifier'\r\nimport { layer } from '../../../styled/mixins/theming'\r\nimport { defaultSpacing } from '../../../styled/mixins/gap'\r\nimport { flexRowWithGap } from '../../../styled/mixins/layout'\r\n\r\nconst Bar = styled.div(\r\n  ({ theme }) => css`\r\n    grid-row: 2/3;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: nowrap;\r\n    overflow-x: auto;\r\n    ${layer({ theme })}\r\n    ${defaultSpacing}\r\n    border-radius: 0 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius};\r\n  `\r\n)\r\n\r\nconst Menu = styled.div(\r\n  ({ theme }) => css`\r\n    ${flexRowWithGap}\r\n    justify-content: space-around;\r\n    margin-top: ${theme.dimensions.bigSpacing};\r\n    grid-row: 3/4;\r\n  `\r\n)\r\n\r\nconst MenuEntry = styled.span`\r\n  cursor: pointer;\r\n\r\n  ${({ active, theme }: { active: boolean; theme: DefaultTheme }) =>\r\n    active\r\n      ? css`\r\n          color: ${theme.colors.accentColor};\r\n        `\r\n      : ''}\r\n`\r\n\r\nconst DetailsTagList = styled(TagList)(\r\n  ({ theme }) => css`\r\n    grid-row: 4/5;\r\n    padding: ${theme.dimensions.bigSpacing};\r\n  `\r\n)\r\n\r\ninterface DetailsProps {\r\n  postId: number\r\n  onLoad?: () => void\r\n  activeTab: ActiveTab\r\n  setActiveTab: React.Dispatch<React.SetStateAction<ActiveTab>>\r\n  hasComments: boolean\r\n}\r\n\r\nexport default function Details(props: DetailsProps) {\r\n  const dispatch = useDispatch()\r\n  const [modifier] = useModifier()\r\n\r\n  const { postId, onLoad = NO_OP, activeTab, setActiveTab, hasComments } = props\r\n  const { rating, score, tags, source, created_at, status, height, width, comments } = useSelector(\r\n    selectPostById(postId)\r\n  ) as r34.Post\r\n  const tagsForRendering = useMemo(\r\n    () =>\r\n      listToMap(\r\n        tags.map((tag) => ({ name: tag, types: [] })),\r\n        'name'\r\n      ),\r\n    [tags]\r\n  )\r\n  const showMetadata = useSelector(selectShowMetadata)\r\n  const showComments = useSelector(selectShowComments)\r\n\r\n  const checkIsActive = useCheckIsActive()\r\n\r\n  const toggleTag = useToggleTag()\r\n  const setTags: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      setActiveTab('tags')\r\n    },\r\n    [setActiveTab]\r\n  )\r\n\r\n  const setComments: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      setActiveTab('comments')\r\n    },\r\n    [setActiveTab]\r\n  )\r\n\r\n  const setMetadata: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      setActiveTab('metadata')\r\n    },\r\n    [setActiveTab]\r\n  )\r\n\r\n  const addTagWithModifier = React.useCallback(\r\n    (tag: r34.AnyBiasedTag) => {\r\n      dispatch(addTag({ ...tag, modifier }))\r\n    },\r\n    [dispatch, modifier]\r\n  )\r\n\r\n  useEffect(() => {\r\n    onLoad()\r\n  }, [onLoad, activeTab])\r\n\r\n  return (\r\n    <>\r\n      <Bar>\r\n        <Rating value={rating} />\r\n        <Score value={score} postId={postId} />\r\n        {!!source && <Source value={source} />}\r\n      </Bar>\r\n      {((showComments && hasComments) || showMetadata) && (\r\n        <Menu>\r\n          <MenuEntry active={activeTab === 'tags'} onClick={setTags} title='Show tags'>\r\n            Tags\r\n          </MenuEntry>\r\n          {showComments && hasComments && (\r\n            <MenuEntry active={activeTab === 'comments'} onClick={setComments} title='Show comments'>\r\n              Comments\r\n            </MenuEntry>\r\n          )}\r\n          {showMetadata && (\r\n            <MenuEntry active={activeTab === 'metadata'} onClick={setMetadata} title='Show metadata'>\r\n              Metadata\r\n            </MenuEntry>\r\n          )}\r\n        </Menu>\r\n      )}\r\n\r\n      {\r\n        {\r\n          tags: (\r\n            <DetailsTagList\r\n              tags={tagsForRendering}\r\n              detailed={false}\r\n              onTagClick={toggleTag}\r\n              getIsActive={checkIsActive}\r\n              onTagMenu={addTagWithModifier}\r\n            />\r\n          ),\r\n          comments: <Comments comments={comments as r34.Comment[]} />,\r\n          metadata: <Metadata created_at={created_at} status={status} width={width} height={height} id={postId} />,\r\n        }[activeTab]\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import * as r34 from 'r34-types'\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled, { css } from 'styled-components'\r\nimport { ActiveTab, NO_OP } from '../../data/types'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { fetchComments } from '../../redux/actions'\r\nimport { selectShowComments, selectShowPostDetails } from '../../redux/selectors'\r\nimport { layer } from '../../styled/mixins/theming'\r\nimport { ZIndex } from '../../styled/zIndex'\r\nimport LayoutElementProps from '../layout/LayoutElementProps'\r\nimport { Media } from '../player/Media'\r\nimport Details from './details/Details'\r\n\r\nconst ItemWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    padding-top: ${theme.dimensions.bigSpacing};\r\n  `\r\n)\r\n\r\nconst PositonWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    padding: 0 ${theme.dimensions.bigSpacing};\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin: auto;\r\n  `\r\n)\r\n\r\nconst PostWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto auto auto auto;\r\n  ${layer}\r\n\r\n  // Set area of media and overlay\r\n    img, video {\r\n    grid-area: 1/1/2/2;\r\n    z-index: ${ZIndex.POST};\r\n  }\r\n\r\n  .overlay {\r\n    grid-area: 1/1/2/2;\r\n    z-index: ${ZIndex.OVERLAY};\r\n  }\r\n`\r\n\r\nexport function ListPost(props: r34.Post & LayoutElementProps & { index: number }) {\r\n  const {\r\n    style,\r\n    virtualRef,\r\n    type,\r\n    sample_url,\r\n    file_url,\r\n    preview_url,\r\n    onLoad = NO_OP,\r\n    id,\r\n    width,\r\n    height,\r\n    comments,\r\n    has_comments,\r\n    index,\r\n  } = props\r\n\r\n  return (\r\n    <ItemWrapper style={style} ref={virtualRef} className='list-div'>\r\n      <PositonWrapper>\r\n        <Post\r\n          type={type}\r\n          sample_url={sample_url}\r\n          file_url={file_url}\r\n          preview_url={preview_url}\r\n          onLoad={onLoad}\r\n          id={id}\r\n          width={width}\r\n          height={height}\r\n          comments={comments}\r\n          has_comments={has_comments}\r\n          index={index}\r\n        />\r\n      </PositonWrapper>\r\n    </ItemWrapper>\r\n  )\r\n}\r\n\r\ntype PostProps = Pick<\r\n  r34.Post,\r\n  'type' | 'sample_url' | 'file_url' | 'preview_url' | 'id' | 'width' | 'height' | 'comments' | 'has_comments'\r\n> & { onLoad?: () => void; index: number }\r\n\r\nexport const Post = React.memo((props: PostProps) => {\r\n  const {\r\n    type,\r\n    sample_url,\r\n    file_url,\r\n    preview_url,\r\n    onLoad = NO_OP,\r\n    id,\r\n    width,\r\n    height,\r\n    comments,\r\n    has_comments,\r\n    index,\r\n  } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [activeTab, setActiveTab] = useState<ActiveTab>('tags')\r\n  const [collapsed, toggleCollapsed] = useToggle(true)\r\n\r\n  const showPostDetails = useSelector(selectShowPostDetails)\r\n  const showComments = useSelector(selectShowComments)\r\n\r\n  // re-measure when collapsed state changes\r\n  useEffect(() => {\r\n    onLoad()\r\n  }, [onLoad, collapsed])\r\n\r\n  // Loads comments if conditions are met\r\n  useEffect(() => {\r\n    if (!collapsed && showComments && has_comments && !comments) {\r\n      dispatch(fetchComments(id))\r\n    }\r\n  }, [collapsed, showComments, has_comments, comments, dispatch, id])\r\n\r\n  return (\r\n    <PostWrapper onClick={toggleCollapsed} role='row' data-name='post-wrapper' tabIndex={0}>\r\n      <Media\r\n        detailsVisible={!collapsed}\r\n        type={type}\r\n        thumbnailSrc={preview_url}\r\n        sampleSrc={sample_url}\r\n        fullSrc={file_url}\r\n        onLoad={onLoad}\r\n        index={index}\r\n        width={width}\r\n        height={height}\r\n        isActive={true}\r\n      />\r\n      {showPostDetails && !collapsed && (\r\n        <Details\r\n          postId={id}\r\n          onLoad={onLoad}\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          hasComments={has_comments}\r\n        />\r\n      )}\r\n    </PostWrapper>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport useAction from '../../hooks/useAction'\r\nimport { SearchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { getResults, openModal } from '../../redux/actions'\r\nimport { BlockButton } from '../designsystem/Buttons'\r\nimport { ModalId } from '../../data/types'\r\nimport { useConnectionState } from '../../hooks/useConnectionState'\r\nimport { selectAutoPlay, selectOriginals, selectPreloadVideos } from '../../redux/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nlet isUserNotified = false\r\n\r\nexport default function SearchButton() {\r\n  const search = useAction(getResults)\r\n  const dispatch = useDispatch()\r\n  const connection = useConnectionState()\r\n  const preloadVideos = useSelector(selectPreloadVideos)\r\n  const autoplay = useSelector(selectAutoPlay)\r\n  const originals = useSelector(selectOriginals)\r\n\r\n  const handleClick = React.useCallback(() => {\r\n    const riskyFeatureEnabled = preloadVideos || autoplay || originals\r\n\r\n    if (!isUserNotified && connection === 'cellular' && riskyFeatureEnabled) {\r\n      dispatch(openModal(ModalId.CELLULAR_WARNING))\r\n      isUserNotified = true\r\n    } else {\r\n      search()\r\n    }\r\n  }, [autoplay, connection, dispatch, originals, preloadVideos, search])\r\n\r\n  return (\r\n    <BlockButton onClick={handleClick} aria-label='Search'>\r\n      <SearchIcon />\r\n      Search\r\n    </BlockButton>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport function useConnectionState() {\r\n  //@ts-expect-error\r\n  const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\r\n\r\n  const [connectionState, setConnectionState] = useState<string | undefined>(connection?.type)\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      const listener = () => setConnectionState(connection.type)\r\n      connection.addEventListener('change', listener, { passive: true })\r\n      return () => connection.removeEventListener('change', listener)\r\n    }\r\n  }, [connection])\r\n\r\n  return connectionState as\r\n    | 'bluetooth'\r\n    | 'cellular'\r\n    | 'ethernet'\r\n    | 'none'\r\n    | 'wifi'\r\n    | 'wimax'\r\n    | 'other'\r\n    | 'unknown'\r\n    | undefined\r\n}\r\n","import styled, { css, DefaultTheme } from 'styled-components'\r\nimport { borderRadius } from '../../styled/mixins/theming'\r\n\r\nexport const SubtleInput = styled.input(\r\n  (props: { value: string; theme: DefaultTheme }) => css`\r\n    background: ${props.theme.colors.backgroundColor};\r\n    padding: ${props.theme.dimensions.spacing};\r\n    ${borderRadius}\r\n    border: none;\r\n    outline: none;\r\n    color: ${props.theme.colors.accentColor};\r\n    width: 3.4rem;\r\n    text-align: right;\r\n    font-size: ${props.theme.fontSizes.content};\r\n\r\n    ::-webkit-inner-spin-button,\r\n    ::-webkit-outer-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n    -moz-appearance: textfield;\r\n  `\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport { flexRowWithGap } from '../../styled/mixins/layout'\r\nimport LabeledToggle from '../designsystem/LabeledToggle'\r\nimport { SubtleInput } from '../designsystem/SubtleInput'\r\n\r\nconst RatedRow = styled.div`\r\n  ${flexRowWithGap}\r\n`\r\n\r\nconst RatedToggle = styled(LabeledToggle)`\r\n  height: 28px; // prevent layout shift when toggling\r\n`\r\n\r\nexport default function RatedFilter() {\r\n  const [rated, setRated] = usePreference('rated')\r\n  const [ratedThreshold, setRatedThreshold] = usePreference('ratedThreshold')\r\n\r\n  const toggleRated = React.useCallback(() => setRated(!rated), [rated, setRated])\r\n\r\n  const [ratedThresholdInternal, setRatedThresholdInternal] = React.useState(\r\n    ratedThreshold ? ratedThreshold.toString() : '1'\r\n  )\r\n\r\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\r\n    (event) => setRatedThresholdInternal(event.target.value),\r\n    []\r\n  )\r\n\r\n  const onBlur = React.useCallback(\r\n    () => setRatedThreshold(Number(ratedThresholdInternal)),\r\n    [ratedThresholdInternal, setRatedThreshold]\r\n  )\r\n\r\n  const handleSubmit = React.useCallback((e) => {\r\n    if (e.key === 'Enter') e.target.blur()\r\n  }, [])\r\n\r\n  return (\r\n    <RatedToggle value={rated} onToggle={toggleRated}>\r\n      {rated ? (\r\n        <RatedRow>\r\n          <span>More than</span>\r\n          <SubtleInput\r\n            type='number'\r\n            value={ratedThresholdInternal}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            onKeyDown={handleSubmit}\r\n          />\r\n          <span>likes</span>\r\n        </RatedRow>\r\n      ) : (\r\n        'Only show popular posts'\r\n      )}\r\n    </RatedToggle>\r\n  )\r\n}\r\n","import { PostsSort } from 'r34-types'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport { flexRowWithGap } from '../../styled/mixins/layout'\r\nimport { PropsWithTheme } from '../../styled/mixins/types'\r\nimport Select from '../designsystem/Select'\r\n\r\nconst SortRow = styled.div`\r\n  ${flexRowWithGap}\r\n  height: ${({ theme }: PropsWithTheme) => theme.dimensions.blockHeight};\r\n`\r\n\r\nconst sortOptions = {\r\n  'score:desc': 'Score',\r\n  'date:desc': 'Date',\r\n}\r\n\r\nexport default function SortSelect() {\r\n  const [sort, setSort] = usePreference('sort')\r\n\r\n  const handleSortChange: React.ChangeEventHandler<HTMLSelectElement> = React.useCallback(\r\n    (event) => setSort(event.target.value as PostsSort),\r\n    [setSort]\r\n  )\r\n\r\n  return (\r\n    <SortRow>\r\n      <span>Sort by:</span>\r\n      <Select options={sortOptions} value={sort} onChange={handleSortChange} />\r\n    </SortRow>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport TagSelector from '../tagSelector/TagSelector'\r\nimport SearchButton from '../widgets/SearchButton'\r\nimport ActiveTags from '../widgets/ActiveTags'\r\nimport { useActivateTag } from '../../hooks/useActivateTag'\r\nimport { defaultSpacing } from '../../styled/mixins/gap'\r\nimport { centeredMaxWidth, flexColumn } from '../../styled/mixins/layout'\r\nimport TitledSurface from '../designsystem/TitledSurface'\r\nimport RatedFilter from '../widgets/RatedFilter'\r\nimport SortSelect from '../widgets/SortSelect'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\n\r\nconst ConfigWrapper = styled.section`\r\n  ${flexColumn}\r\n  ${defaultSpacing}\r\n  ${centeredMaxWidth}\r\n`\r\n\r\nexport default function SearchEditor(props: { onLoad: () => void }) {\r\n  const { onLoad } = props\r\n\r\n  const [isSignedIn] = useFirebaseAuthState()\r\n  const activateTag = useActivateTag()\r\n\r\n  return (\r\n    <ConfigWrapper>\r\n      <TitledSurface title={<label htmlFor='tag-input'>Search</label>} compact>\r\n        <TagSelector onSubmit={activateTag} showSupertags />\r\n        <ActiveTags onChange={onLoad} offerSupertags={isSignedIn} />\r\n        <RatedFilter />\r\n        <SortSelect />\r\n        <SearchButton />\r\n      </TitledSurface>\r\n    </ConfigWrapper>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const C = styled.span(\r\n  ({ theme }) => css`\r\n    background: ${theme.colors.layerBg};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n    padding: 0 ${theme.dimensions.spacing};\r\n    align-self: center;\r\n    font-weight: bold;\r\n    border: 2px currentColor solid;\r\n  `\r\n)\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { randomBelow } from '../../data/utils'\r\nimport { ArrowDown, ExpandIcon, ExternalLinkIcon } from '../../icons/FontAwesomeIcons'\r\nimport { C } from '../designsystem/C'\r\nimport { Faded } from '../designsystem/Text'\r\n\r\nconst TipWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    text-align: center;\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n  `\r\n)\r\n\r\nconst tips: Array<JSX.Element | string> = [\r\n  <Faded>\r\n    You can exclude tags with the <C>-</C> modifier.\r\n  </Faded>,\r\n  'Try tapping the little plus in the tag search.',\r\n  <Faded>\r\n    Each result will have at least one of your <C>~</C> tags.\r\n  </Faded>,\r\n  'Check out the preferences. There are lots of useful options there.',\r\n  'You can get more info about a post be tapping it once.',\r\n  'Tapping on a tag below a post adds it to your active tags.',\r\n  <Faded>\r\n    Large gifs and videos can take a while to load in the app. If this becomes a problem you can open them in a new tab\r\n    with <ExternalLinkIcon />\r\n  </Faded>,\r\n  'If anything stops working or gets weird. Reset the app in preferences.',\r\n  'I hope you are having a nice day!',\r\n  <Faded>\r\n    If a tag is ambiguous, it will have a little arrow <ArrowDown />. Tapping it shows related tags.\r\n  </Faded>,\r\n  <Faded>\r\n    Tapping <ExpandIcon /> in the top left of posts brings you into fullscreen mode.\r\n  </Faded>,\r\n  'Searching with no tags returns ALL posts ever made.',\r\n  'By default, results are sorted chronologically. Newest first. You can change this with the sort selector.',\r\n  \"You can filter posts based on how explicit they are. Try entering 'rating' in the search field.\",\r\n  \"You can search for posts from a specific website by entering 'source:*twitter* for example.\",\r\n  'You can upvote a post by tapping its score in the details.',\r\n  'Wanna know more about a post? Enable \"Show post metadata\" in the options.',\r\n  'Every time you load this page, a random tip will be shown here.',\r\n  'You can enable comments in the preferences. Not all post have comments though.',\r\n  'You can save and share your preferences across devices if you log in with your Google account.',\r\n  'Tapping the number of results displays the exact number instead of an approximation.',\r\n  'You can create supertags once you have two or more active tags. (And you need to be signed in)',\r\n  'Supertags are collections of tags that you can add together.',\r\n  'Supertags retain the modifiers of the tags they contain.',\r\n  'You can tap this tip to get another one.',\r\n  'You can change the modifier of an active tag by clicking and holding it on mobile and right clicking it on desktop.',\r\n  'You can share your supertags with friends under preferences.',\r\n  'Join the discord to get involved with other people who use the app.',\r\n  'I am taking feature request on my discord server.',\r\n  'Check out the about section for info/links about the app and myself.',\r\n  'If you are signed in, your settings are automatically saved online when you change them. This can take up to 15 seconds.',\r\n]\r\n\r\nconst getRandomTip = () => tips[randomBelow(tips.length)]\r\n\r\nexport default function RandomTip() {\r\n  const [tip, setTip] = React.useState(getRandomTip())\r\n  const nextTip = React.useCallback(() => setTip(getRandomTip()), [])\r\n\r\n  return (\r\n    <TipWrapper role='note' onClick={nextTip}>\r\n      {typeof tip === 'string' ? <Faded>{tip}</Faded> : tip}\r\n    </TipWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { WrenchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexColumnWithGap } from '../../styled/mixins/layout'\r\nimport { layer } from '../../styled/mixins/theming'\r\nimport FlexPair from '../designsystem/FlexPair'\r\nimport { SmallTitle } from '../designsystem/Text'\r\n\r\nconst Wrapper = styled(FlexPair)(\r\n  ({ theme }) => css`\r\n    ${layer}\r\n    width: 100%;\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n  `\r\n)\r\n\r\nconst Message = styled.div`\r\n  ${flexColumnWithGap}\r\n`\r\n\r\nexport default function UpdateHighlight() {\r\n  const now = new Date()\r\n\r\n  if (now.getMonth() === 11 && now.getDate() >= 24)\r\n    return (\r\n      <Wrapper>\r\n        <Message>\r\n          <FlexPair>\r\n            <WrenchIcon size='lg' />\r\n            <SmallTitle>Update News</SmallTitle>\r\n          </FlexPair>\r\n          <p>🎄 Merry Christmas 🎄</p>\r\n        </Message>\r\n      </Wrapper>\r\n    )\r\n\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport { RandomSponsoring } from './SponsoringButtons'\r\nimport styled, { css } from 'styled-components'\r\nimport RandomTip from './RandomTip'\r\nimport { flexColumnWithGap } from '../../styled/mixins/layout'\r\nimport UpdateHighlight from './UpdateHighlight'\r\n\r\nconst Placeholder = styled.div(\r\n  ({ theme }) => css`\r\n    ${flexColumnWithGap}\r\n    align-items: center;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin: auto;\r\n\r\n    padding: 0 ${theme.dimensions.bigSpacing};\r\n\r\n    .fa-patreon {\r\n      color: #ff424d;\r\n    }\r\n  `\r\n)\r\n\r\nexport default function SearchPlaceholder() {\r\n  return (\r\n    <Placeholder>\r\n      <UpdateHighlight />\r\n      <RandomTip />\r\n      <RandomSponsoring />\r\n    </Placeholder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { formatCount } from '../../misc/formatting'\r\nimport { selectCount } from '../../redux/selectors'\r\nimport { Title } from '../designsystem/Text'\r\n\r\nconst ClickableTitle = styled(Title)`\r\n  cursor: pointer;\r\n`\r\n\r\nexport default function ResultsTitle() {\r\n  const [fullNumber, toggleFullNumber] = useToggle()\r\n  const count = useSelector(selectCount)\r\n\r\n  const formattedCount = fullNumber ? count.toLocaleString() : formatCount(count)\r\n\r\n  return (\r\n    <ClickableTitle id='results' onClick={toggleFullNumber}>\r\n      {formattedCount} results\r\n    </ClickableTitle>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCount } from '../../redux/selectors'\r\nimport SearchEditor from '../features/SearchEditor'\r\nimport Header from '../features/Header'\r\nimport LayoutElementProps from './LayoutElementProps'\r\nimport { NO_OP } from '../../data/types'\r\nimport SearchPlaceholder from '../widgets/SearchPlaceholder'\r\nimport ResultsTitle from '../widgets/ResultsTitle'\r\nimport { defaultSpacing } from '../../styled/mixins/gap'\r\nimport { centeredMaxWidth, flexColumn } from '../../styled/mixins/layout'\r\nimport styled, { css } from 'styled-components'\r\nimport { Faded, Title } from '../designsystem/Text'\r\nimport { Surface } from '../designsystem/Surface'\r\nimport { GoogleIcon } from '../../icons/FontAwesomeIcons'\r\n\r\nconst NewsContainter = styled.div`\r\n  ${flexColumn}\r\n  ${defaultSpacing}\r\n  ${centeredMaxWidth}\r\n`\r\n\r\nconst NewsTitle = styled(Title)`\r\n  ${({ theme }) => css`\r\n    padding-top: ${theme.dimensions.hugeSpacing};\r\n  `}\r\n`\r\n\r\nconst NewsGrid = styled(Surface)`\r\n  grid-template-columns: auto 1fr;\r\n  grid-template-rows: auto auto;\r\n  row-gap: 4px;\r\n  align-items: center;\r\n`\r\n\r\n// const Logo = styled.img`\r\n//   height: 60px;\r\n//   grid-row: span 2;\r\n// `\r\n\r\nconst Logo = styled(GoogleIcon)`\r\n  height: 60px;\r\n  min-width: 40px;\r\n  grid-row: span 2;\r\n`\r\n\r\nexport default function LayoutHeader({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\r\n  const count = useSelector(selectCount)\r\n\r\n  // Trigger load event when count is > 0\r\n  // This is used to re-measure the element\r\n  useEffect(() => {\r\n    count > 0 && onLoad()\r\n  }, [count, onLoad])\r\n\r\n  return (\r\n    <div onLoad={onLoad} ref={virtualRef} style={style} role='row'>\r\n      <Header />\r\n\r\n      <NewsContainter>\r\n        <NewsTitle>News</NewsTitle>\r\n        {/* <NewsGrid>\r\n          <Logo\r\n            src='https://raw.githubusercontent.com/kurozenzen/kurosearch/main/public/favicon.svg'\r\n            alt='kurosearch'\r\n          />\r\n          <b>\r\n            Check out <a href='https://kurosearch.com'>kurosearch.com</a>\r\n          </b>\r\n          <Faded>\r\n            A re-imagined version of R34-React that I am building. Give me some Feedback on{' '}\r\n            <a href='https://discord.com/invite/yyJFG5PVBZ' style={{ color: '#7289DA' }}>\r\n              Discord\r\n            </a>{' '}\r\n            if anything catches your eye.\r\n          </Faded>\r\n        </NewsGrid> */}\r\n        <NewsGrid>\r\n          <Logo />\r\n          <b>We are hitting usage limits with Google Storage</b>\r\n          <Faded>\r\n            I have had to partially disable the automatic preference/settings syncing to avoid paying huge amounts of\r\n            money. This will only affect you if you are logged in with Google. Sorry 😐\r\n          </Faded>\r\n        </NewsGrid>\r\n      </NewsContainter>\r\n\r\n      <SearchEditor onLoad={onLoad} />\r\n      {count > 0 ? <ResultsTitle /> : <SearchPlaceholder />}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LayoutElementProps from './LayoutElementProps'\r\nimport LoadingIcon from '../../icons/Loading'\r\nimport styled from 'styled-components'\r\nimport { NO_OP } from '../../data/types'\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LayoutLoadingItem({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\r\n  return (\r\n    <Wrapper onLoad={onLoad} ref={virtualRef} style={style} role='row'>\r\n      <LoadingIcon />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { MouseEventHandler, useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled, { css } from 'styled-components'\r\nimport { selectLastPage } from '../../../redux/selectors'\r\nimport { gridWithGap } from '../../../styled/mixins/layout'\r\nimport { PrimaryButton } from '../../designsystem/Buttons'\r\nimport { SmallNumberInput } from '../../designsystem/SmallInput'\r\n\r\nconst PageRow = styled.div(\r\n  ({ theme }) => css`\r\n    ${gridWithGap}\r\n    grid-template-columns: 1fr auto 1fr;\r\n    justify-content: center;\r\n    place-items: center;\r\n    padding: ${theme.dimensions.bigSpacing};\r\n    padding-bottom: 0;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin: auto;\r\n  `\r\n)\r\nconst Left = styled.div`\r\n  display: flex;\r\n  place-self: flex-end;\r\n  gap: 8px;\r\n`\r\nconst Right = styled.div`\r\n  display: flex;\r\n  place-self: flex-start;\r\n  gap: 8px;\r\n`\r\n\r\nconst PageNumber = styled(PrimaryButton)`\r\n  min-width: 50px;\r\n`\r\n\r\nconst CurrentNumber = styled(SmallNumberInput)`\r\n  min-width: 50px;\r\n`\r\n\r\ninterface PageNavigationProps {\r\n  currentPage: number\r\n  loadPage: (pageNumber: number) => void\r\n}\r\n\r\nexport default function PageNavigation(props: PageNavigationProps) {\r\n  const { currentPage, loadPage } = props\r\n\r\n  const lastPage = useSelector(selectLastPage)\r\n\r\n  const loadSpecificPage = useCallback((newPage: number | string) => loadPage(Number(newPage)), [loadPage])\r\n  const loadFirst: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(0), [loadPage])\r\n  const loadLast: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(lastPage), [loadPage, lastPage])\r\n  const loadPrevious: MouseEventHandler<HTMLButtonElement> = useCallback(\r\n    () => loadPage(currentPage - 1),\r\n    [currentPage, loadPage]\r\n  )\r\n  const loadNext: MouseEventHandler<HTMLButtonElement> = useCallback(\r\n    () => loadPage(currentPage + 1),\r\n    [currentPage, loadPage]\r\n  )\r\n\r\n  // Render Empty divs to keep everything lined up\r\n  // Could achive the same with grid-column (might do that in the future)\r\n  return (\r\n    <PageRow className='page-navigation'>\r\n      <Left>\r\n        {currentPage > 1 && (\r\n          <PageNumber onClick={loadFirst} title='First Page'>\r\n            0\r\n          </PageNumber>\r\n        )}\r\n        {currentPage > 0 && (\r\n          <PageNumber onClick={loadPrevious} title='Previous page'>\r\n            {currentPage - 1}\r\n          </PageNumber>\r\n        )}\r\n      </Left>\r\n      <CurrentNumber value={currentPage} onSubmit={loadSpecificPage} min={0} max={lastPage} step={1} />\r\n      <Right>\r\n        {currentPage < lastPage && (\r\n          <PageNumber onClick={loadNext} title='Next Page'>\r\n            {currentPage + 1}\r\n          </PageNumber>\r\n        )}\r\n        {currentPage < lastPage - 1 && (\r\n          <PageNumber onClick={loadLast} title='Last Page'>\r\n            {lastPage}\r\n          </PageNumber>\r\n        )}\r\n      </Right>\r\n    </PageRow>\r\n  )\r\n}\r\n","import React, { ReactNode, useCallback } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { Post } from 'r34-types'\r\nimport { FlexColumn } from '../../designsystem/FlexColumn'\r\nimport PageNavigation from './PageNavigation'\r\n\r\nconst PageLayoutFlexColumn = styled(FlexColumn)(\r\n  ({ theme }) => css`\r\n    padding-bottom: ${theme.dimensions.bigSpacing};\r\n  `\r\n)\r\n\r\ninterface PageLayoutProps<T> {\r\n  header?: ReactNode\r\n  outOfItems?: ReactNode\r\n  items?: T[]\r\n  pageSize: number\r\n  currentPage: number\r\n  hasMorePages: boolean\r\n  loadPage: (pageNumber: number) => void\r\n  ItemComponent: (props: T & { index: number }) => JSX.Element\r\n  isLoading: boolean\r\n}\r\n\r\nexport default function PageLayout(props: PageLayoutProps<Post>) {\r\n  const { header, items, ItemComponent, currentPage, loadPage } = props\r\n\r\n  const scrollAndLoadPage = useCallback(\r\n    (value: number) => {\r\n      loadPage(value)\r\n      document.getElementsByClassName('page-navigation')[0].scrollIntoView()\r\n    },\r\n    [loadPage]\r\n  )\r\n\r\n  return (\r\n    <PageLayoutFlexColumn>\r\n      {header}\r\n      {items && items.length > 0 && (\r\n        <>\r\n          <PageNavigation currentPage={currentPage} loadPage={loadPage} />\r\n          {items?.map((item, index) => (\r\n            <ItemComponent key={item.id} index={index} {...item} />\r\n          ))}\r\n          <PageNavigation currentPage={currentPage} loadPage={scrollAndLoadPage} />\r\n        </>\r\n      )}\r\n    </PageLayoutFlexColumn>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport InifinteColumn from '../layout/infinite/InfiniteColumn'\r\nimport { ListPost } from '../post/Post'\r\nimport { getMoreResults, getResults } from '../../redux/actions'\r\nimport {\r\n  selectHasMoreResults,\r\n  selectPageNumber,\r\n  selectPageSize,\r\n  selectPosts,\r\n  selectResultsLayout,\r\n  selectUpdated,\r\n} from '../../redux/selectors'\r\nimport LayoutHeader from '../layout/LayoutHeader'\r\nimport LayoutOutOfItems from '../layout/LayoutOutOfItems'\r\nimport LayoutLoadingItem from '../layout/LayoutLoadingItem'\r\nimport PageLayout from '../layout/pages/PageLayout'\r\nimport { useScrollUpBackNavigation } from '../../hooks/useScrollUpBackNavigation'\r\nimport { usePageTitle } from '../../hooks/usePageTitle'\r\n\r\nexport default function Search() {\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const [lastUpdated, setLastUpdated] = useState(-1)\r\n\r\n  const updated = useSelector(selectUpdated)\r\n  const posts = useSelector(selectPosts)\r\n  const hasMorePosts = useSelector(selectHasMoreResults)\r\n  const resultsLayout = useSelector(selectResultsLayout)\r\n  const pageSize = useSelector(selectPageSize)\r\n  const pageNumber = useSelector(selectPageNumber)\r\n\r\n  const loadMore = useCallback(() => {\r\n    setLoading(true)\r\n    dispatch(getMoreResults())\r\n  }, [dispatch])\r\n\r\n  const loadPage = useCallback(\r\n    (index: number) => {\r\n      setLoading(true)\r\n      dispatch(getResults(index))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    if (isLoading && updated > lastUpdated) {\r\n      setLoading(false)\r\n      setLastUpdated(new Date().getTime())\r\n    }\r\n  }, [isLoading, lastUpdated, updated])\r\n\r\n  useScrollUpBackNavigation('#results')\r\n\r\n  usePageTitle('Rule34 React')\r\n\r\n  return (\r\n    <>\r\n      {resultsLayout === 'infinite_column' ? (\r\n        <InifinteColumn\r\n          Header={LayoutHeader}\r\n          OutOfItems={LayoutOutOfItems}\r\n          items={posts}\r\n          LoadingItem={LayoutLoadingItem}\r\n          hasMoreRows={hasMorePosts}\r\n          ItemComponent={ListPost}\r\n          loadMore={loadMore}\r\n          isLoading={isLoading}\r\n        />\r\n      ) : (\r\n        <PageLayout\r\n          header={<LayoutHeader />}\r\n          pageSize={pageSize}\r\n          currentPage={pageNumber}\r\n          hasMorePages={hasMorePosts}\r\n          loadPage={loadPage}\r\n          ItemComponent={ListPost}\r\n          isLoading={isLoading}\r\n          items={posts}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n/**\r\n * This hook adds a hash to the current route when scrolling down,\r\n * which causes the first back navigation to scroll up before really going back.\r\n * Really useful in infinite layouts where you need a quick way to go back up.\r\n */\r\nexport function useScrollUpBackNavigation(hash: string) {\r\n  const history = useHistory()\r\n  React.useEffect(() => {\r\n    if (history.location.hash !== hash) {\r\n      const listener = () => {\r\n        history.push({ pathname: history.location.pathname, hash })\r\n      }\r\n      document.addEventListener('scroll', listener, { passive: true, once: true })\r\n      return () => document.removeEventListener('scroll', listener)\r\n    }\r\n  }, [hash, history])\r\n}\r\n"],"sourceRoot":""}